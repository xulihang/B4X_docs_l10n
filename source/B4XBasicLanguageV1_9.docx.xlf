<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions" xmlns:its="http://www.w3.org/2005/11/its" xmlns:itsxlf="http://www.w3.org/ns/its-xliff/" its:version="2.0">
<file original="word/document.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="NFDBB2FA9-tu1" xml:space="preserve">
<source xml:lang="en">B4X Booklets</source>
<target xml:lang="zh">B4X Booklets</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NBAE5E0BC-sub1" xml:space="preserve">
<source xml:lang="en">Image 1619</source>
<target xml:lang="zh">Image 1619</target>
</trans-unit>
<trans-unit id="NBAE5E0BC-sub2" xml:space="preserve">
<source xml:lang="en">b4i_256_256.png</source>
<target xml:lang="zh">b4i_256_256.png</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu3" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NBAE5E0BD-sub1" xml:space="preserve">
<source xml:lang="en">Image 1621</source>
<target xml:lang="zh">Image 1621</target>
</trans-unit>
<trans-unit id="NBAE5E0BD-sub2" xml:space="preserve">
<source xml:lang="en">Picture 5</source>
<target xml:lang="zh">Picture 5</target>
</trans-unit>
<trans-unit id="NBAE5E0BD-sub3" xml:space="preserve">
<source xml:lang="en">Image 383</source>
<target xml:lang="zh">Image 383</target>
</trans-unit>
<trans-unit id="NBAE5E0BD-sub4" xml:space="preserve">
<source xml:lang="en">b4J_512_512.png</source>
<target xml:lang="zh">b4J_512_512.png</target>
</trans-unit>
<trans-unit id="NBAE5E0BD-sub5" xml:space="preserve">
<source xml:lang="en">Image 1798</source>
<target xml:lang="zh">Image 1798</target>
</trans-unit>
<trans-unit id="NBAE5E0BD-sub6" xml:space="preserve">
<source xml:lang="en">b4A_512_512_white.png</source>
<target xml:lang="zh">b4A_512_512_white.png</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu5" xml:space="preserve">
<source xml:lang="en">B4X   Basic Language</source>
<target xml:lang="zh">B4X   Basic Language</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu6" xml:space="preserve">
<source xml:lang="en">Copyright: © 2020 Anywhere Software<x id="1"/>Edition 1.9</source>
<target xml:lang="zh">Copyright: © 2020 Anywhere Software<x id="1"/>Edition 1.9</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu7" xml:space="preserve">
<source xml:lang="en">Last update :  2020.09.21<x id="1"/><x id="2"/></source>
<target xml:lang="zh">Last update :  2020.09.21<x id="1"/><x id="2"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu8" xml:space="preserve">
<source xml:lang="en">Main contributors:  Klaus Christl  (klaus), Erel Uziel  (Erel)</source>
<target xml:lang="zh">Main contributors:  Klaus Christl  (klaus), Erel Uziel  (Erel)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu9" xml:space="preserve">
<source xml:lang="en">To search for a given word or sentence use the Search function in the Edit menu.</source>
<target xml:lang="zh">To search for a given word or sentence use the Search function in the Edit menu.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu10" xml:space="preserve">
<source xml:lang="en">Updated for following versions:</source>
<target xml:lang="zh">Updated for following versions:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu11" xml:space="preserve">
<source xml:lang="en">B4A<x id="1"/>version<x id="2"/>10.00</source>
<target xml:lang="zh">B4A<x id="1"/>version<x id="2"/>10.00</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu12" xml:space="preserve">
<source xml:lang="en">B4i<x id="1"/>version<x id="2"/>6.80</source>
<target xml:lang="zh">B4i<x id="1"/>version<x id="2"/>6.80</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu13" xml:space="preserve">
<source xml:lang="en">B4J<x id="1"/>version<x id="2"/>8.50</source>
<target xml:lang="zh">B4J<x id="1"/>version<x id="2"/>8.50</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu14" xml:space="preserve">
<source xml:lang="en">B4R<x id="1"/>version<x id="2"/>3.31</source>
<target xml:lang="zh">B4R<x id="1"/>version<x id="2"/>3.31</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu15" xml:space="preserve">
<source xml:lang="en"><x id="1"/>B4X Booklets<x id="2"/>:</source>
<target xml:lang="zh"><x id="1"/>B4X Booklets<x id="2"/>:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu16" xml:space="preserve">
<source xml:lang="en">B4X Getting Started</source>
<target xml:lang="zh">B4X Getting Started</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu17" xml:space="preserve">
<source xml:lang="en">B4X Basic Language</source>
<target xml:lang="zh">B4X Basic Language</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu18" xml:space="preserve">
<source xml:lang="en">B4X IDE Integrated Development Environment</source>
<target xml:lang="zh">B4X IDE Integrated Development Environment</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu19" xml:space="preserve">
<source xml:lang="en">B4X Visual Designer</source>
<target xml:lang="zh">B4X Visual Designer</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu20" xml:space="preserve">
<source xml:lang="en">B4X Help tools</source>
<target xml:lang="zh">B4X Help tools</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu21" xml:space="preserve">
<source xml:lang="en">B4XPages Cross-platform projects</source>
<target xml:lang="zh">B4XPages Cross-platform projects</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu22" xml:space="preserve">
<source xml:lang="en">B4X CustomViews</source>
<target xml:lang="zh">B4X CustomViews</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu23" xml:space="preserve">
<source xml:lang="en">B4X Graphics</source>
<target xml:lang="zh">B4X Graphics</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu24" xml:space="preserve">
<source xml:lang="en">B4X XUI  B4X User Interface</source>
<target xml:lang="zh">B4X XUI  B4X User Interface</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu25" xml:space="preserve">
<source xml:lang="en">B4X SQLite Database</source>
<target xml:lang="zh">B4X SQLite Database</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu26" xml:space="preserve">
<source xml:lang="en">B4X JavaObject NativeObject</source>
<target xml:lang="zh">B4X JavaObject NativeObject</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu27" xml:space="preserve">
<source xml:lang="en">B4R Example Projects</source>
<target xml:lang="zh">B4R Example Projects</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu28" xml:space="preserve">
<source xml:lang="en">You can consult these booklets online in this link <g id="1">[B4X] Documentation Booklets</g>.</source>
<target xml:lang="zh">You can consult these booklets online in this link <g id="1">[B4X] Documentation Booklets</g>.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu29" xml:space="preserve">
<source xml:lang="en">Be aware that external links don’t work in the online display.</source>
<target xml:lang="zh">Be aware that external links don’t work in the online display.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu30" xml:space="preserve">
<source xml:lang="en">B4X platforms</source>
<target xml:lang="zh">B4X platforms</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu31" xml:space="preserve">
<source xml:lang="en">B4X is a suite of BASIC programming languages for different platforms.</source>
<target xml:lang="zh">B4X is a suite of BASIC programming languages for different platforms.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu32" xml:space="preserve">
<source xml:lang="en">B4X suite supports more platforms than any other tool</source>
<target xml:lang="zh">B4X suite supports more platforms than any other tool</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu33" xml:space="preserve">
<source xml:lang="en">ANDROID | IOS | WINDOWS | MAC | LINUX | ARDUINO | RASPBERRY PI | ESP8266 | AND MORE...</source>
<target xml:lang="zh">ANDROID | IOS | WINDOWS | MAC | LINUX | ARDUINO | RASPBERRY PI | ESP8266 | AND MORE...</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu34" xml:space="preserve">
<source xml:lang="en"><g id="1">B4A<x id="2"/><x id="3"/> <x id="4"/>Android<x id="5"/></g><x id="6"/>B4A is a <g id="7">100% free</g><g id="8"> development tool for Android applications, it includes all the features needed to quickly develop any type of Android app.<x id="9"/></g></source>
<target xml:lang="zh"><g id="1">B4A<x id="2"/><x id="3"/> <x id="4"/>Android<x id="5"/></g><x id="6"/>B4A is a <g id="7">100% free</g><g id="8"> development tool for Android applications, it includes all the features needed to quickly develop any type of Android app.<x id="9"/></g></target>
</trans-unit>
<trans-unit id="NA1D63717-sub1" xml:space="preserve">
<source xml:lang="en">Image 34</source>
<target xml:lang="zh">Image 34</target>
</trans-unit>
<trans-unit id="NA1D63717-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu35" xml:space="preserve">
<source xml:lang="en"><g id="1">B4i<x id="2"/><x id="3"/><x id="4"/>iOS<x id="5"/></g><x id="6"/>B4i is a development tool for native iOS applications.<x id="7"/>B4i follows the same concepts as B4A, allowing you to reuse most of the code and build apps for both Android and iOS.<x id="8"/></source>
<target xml:lang="zh"><g id="1">B4i<x id="2"/><x id="3"/><x id="4"/>iOS<x id="5"/></g><x id="6"/>B4i is a development tool for native iOS applications.<x id="7"/>B4i follows the same concepts as B4A, allowing you to reuse most of the code and build apps for both Android and iOS.<x id="8"/></target>
</trans-unit>
<trans-unit id="NA1D63718-sub1" xml:space="preserve">
<source xml:lang="en">Image 132</source>
<target xml:lang="zh">Image 132</target>
</trans-unit>
<trans-unit id="NA1D63718-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu36" xml:space="preserve">
<source xml:lang="en"><g id="1">B4J<x id="2"/><x id="3"/><x id="4"/>Java / Windows / Mac / Linux / Raspberry PI<x id="5"/></g><x id="6"/>B4J is a <g id="7">100% free</g> development tool for desktop, server and IoT solutions.<x id="8"/>With B4J you can easily create desktop applications (UI), console programs (non-UI) and server solutions.<x id="9"/>The compiled apps can run on Windows, Mac, Linux and ARM boards (such as Raspberry Pi).<x id="10"/></source>
<target xml:lang="zh"><g id="1">B4J<x id="2"/><x id="3"/><x id="4"/>Java / Windows / Mac / Linux / Raspberry PI<x id="5"/></g><x id="6"/>B4J is a <g id="7">100% free</g> development tool for desktop, server and IoT solutions.<x id="8"/>With B4J you can easily create desktop applications (UI), console programs (non-UI) and server solutions.<x id="9"/>The compiled apps can run on Windows, Mac, Linux and ARM boards (such as Raspberry Pi).<x id="10"/></target>
</trans-unit>
<trans-unit id="NA1D63719-sub1" xml:space="preserve">
<source xml:lang="en">Image 1842</source>
<target xml:lang="zh">Image 1842</target>
</trans-unit>
<trans-unit id="NA1D63719-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu37" xml:space="preserve">
<source xml:lang="en"><g id="1">B4R<x id="2"/><x id="3"/> <x id="4"/>Arduino / ESP8266<x id="5"/></g><g id="6">B4R is a <g id="7">100% free</g></g> development tool for native Arduino and ESP8266 programs.<x id="8"/>B4R follows the same concepts of the other B4X tools, providing a simple and powerful development tool.<x id="9"/>B4R, B4A, B4J and B4i together make the best development solution for the Internet of Things (IoT).<x id="10"/></source>
<target xml:lang="zh"><g id="1">B4R<x id="2"/><x id="3"/> <x id="4"/>Arduino / ESP8266<x id="5"/></g><g id="6">B4R is a <g id="7">100% free</g></g> development tool for native Arduino and ESP8266 programs.<x id="8"/>B4R follows the same concepts of the other B4X tools, providing a simple and powerful development tool.<x id="9"/>B4R, B4A, B4J and B4i together make the best development solution for the Internet of Things (IoT).<x id="10"/></target>
</trans-unit>
<trans-unit id="NA1D6371A-sub1" xml:space="preserve">
<source xml:lang="en">Image 142</source>
<target xml:lang="zh">Image 142</target>
</trans-unit>
<trans-unit id="NA1D6371A-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu38" xml:space="preserve">
<source xml:lang="en"><g id="1">B4XPages<x id="2"/></g><x id="3"/>B4XPages is an internal library for B4A, B4i and B4J allowing to develop easily cross-platform programs.<x id="4"/>B4XPages is explained in detail in the B4XPages Cross-platform projects booklet.<x id="5"/>Even, if you want to develop only in one platform it is interesting to use the B4XPages library it makes the program flow simpler especially for B4A.</source>
<target xml:lang="zh"><g id="1">B4XPages<x id="2"/></g><x id="3"/>B4XPages is an internal library for B4A, B4i and B4J allowing to develop easily cross-platform programs.<x id="4"/>B4XPages is explained in detail in the B4XPages Cross-platform projects booklet.<x id="5"/>Even, if you want to develop only in one platform it is interesting to use the B4XPages library it makes the program flow simpler especially for B4A.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu39" xml:space="preserve">
<source xml:lang="en">BASIC</source>
<target xml:lang="zh">BASIC</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu40" xml:space="preserve">
<source xml:lang="en"><g id="1">BASIC</g> (an acronym for <g id="2">B</g>eginner's <g id="3">A</g>ll-purpose <g id="4">S</g>ymbolic <g id="5">I</g>nstruction <g id="6">C</g>ode) is a family of <g id="7">general-purpose</g>, <g id="8">high-level programming languages</g> whose design philosophy emphasizes ease of use. In 1964, John G. Kemeny and Thomas E. Kurtz designed the original BASIC language at Dartmouth College in the U.S. state of New Hampshire. They wanted to enable students in fields other than science and mathematics to use computers. At the time, nearly all use of computers required writing custom software, which was something only scientists and mathematicians tended to learn (source Wikipedia).</source>
<target xml:lang="zh"><g id="1">BASIC</g> (an acronym for <g id="2">B</g>eginner's <g id="3">A</g>ll-purpose <g id="4">S</g>ymbolic <g id="5">I</g>nstruction <g id="6">C</g>ode) is a family of <g id="7">general-purpose</g>, <g id="8">high-level programming languages</g> whose design philosophy emphasizes ease of use. In 1964, John G. Kemeny and Thomas E. Kurtz designed the original BASIC language at Dartmouth College in the U.S. state of New Hampshire. They wanted to enable students in fields other than science and mathematics to use computers. At the time, nearly all use of computers required writing custom software, which was something only scientists and mathematicians tended to learn (source Wikipedia).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu41" xml:space="preserve">
<source xml:lang="en">Variables and objects</source>
<target xml:lang="zh">Variables and objects</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu42" xml:space="preserve">
<source xml:lang="en">A <g id="1">variable</g> is a symbolic name given to some known or unknown quantity or information, for the purpose of allowing the name to be used independently of the information it represents. A variable name in computer source code usually associated with a data storage location and thus also its contents, and these may change during the course of program execution (source Wikipedia).</source>
<target xml:lang="zh">A <g id="1">variable</g> is a symbolic name given to some known or unknown quantity or information, for the purpose of allowing the name to be used independently of the information it represents. A variable name in computer source code usually associated with a data storage location and thus also its contents, and these may change during the course of program execution (source Wikipedia).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu43" xml:space="preserve">
<source xml:lang="en">There are two types of variables: primitives and non-primitives types.</source>
<target xml:lang="zh">There are two types of variables: primitives and non-primitives types.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu44" xml:space="preserve">
<source xml:lang="en">Primitives include the numeric types: Byte, Short, Int, Long, Float and Double.</source>
<target xml:lang="zh">Primitives include the numeric types: Byte, Short, Int, Long, Float and Double.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu45" xml:space="preserve">
<source xml:lang="en">Primitives also include: Boolean and Char.</source>
<target xml:lang="zh">Primitives also include: Boolean and Char.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu46" xml:space="preserve">
<source xml:lang="en">Variable Types</source>
<target xml:lang="zh">Variable Types</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu47" xml:space="preserve">
<source xml:lang="en">B4A, B4i, B4J</source>
<target xml:lang="zh">B4A, B4i, B4J</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu48" xml:space="preserve">
<source xml:lang="en">List of types with their ranges:</source>
<target xml:lang="zh">List of types with their ranges:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu49" xml:space="preserve">
<source xml:lang="en">B4X</source>
<target xml:lang="zh">B4X</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu50" xml:space="preserve">
<source xml:lang="en">Type</source>
<target xml:lang="zh">Type</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu51" xml:space="preserve">
<source xml:lang="en">min value</source>
<target xml:lang="zh">min value</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu52" xml:space="preserve">
<source xml:lang="en">max value</source>
<target xml:lang="zh">max value</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu53" xml:space="preserve">
<source xml:lang="en">Boolean</source>
<target xml:lang="zh">Boolean</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu54" xml:space="preserve">
<source xml:lang="en">boolean</source>
<target xml:lang="zh">boolean</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu55" xml:space="preserve">
<source xml:lang="en">False</source>
<target xml:lang="zh">False</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu56" xml:space="preserve">
<source xml:lang="en">True</source>
<target xml:lang="zh">True</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu57" xml:space="preserve">
<source xml:lang="en">Byte</source>
<target xml:lang="zh">Byte</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu58" xml:space="preserve">
<source xml:lang="en">integer  8 bits</source>
<target xml:lang="zh">integer  8 bits</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu59" xml:space="preserve">
<source xml:lang="en">- 2<g id="1"> 7</g></source>
<target xml:lang="zh">- 2<g id="1"> 7</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu60" xml:space="preserve">
<source xml:lang="en">2<g id="1"> 7</g> - 1</source>
<target xml:lang="zh">2<g id="1"> 7</g> - 1</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu61" xml:space="preserve">
<source xml:lang="en">-128</source>
<target xml:lang="zh">-128</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu62" xml:space="preserve">
<source xml:lang="en">127</source>
<target xml:lang="zh">127</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu63" xml:space="preserve">
<source xml:lang="en">Short</source>
<target xml:lang="zh">Short</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu64" xml:space="preserve">
<source xml:lang="en">integer 16 bits</source>
<target xml:lang="zh">integer 16 bits</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu65" xml:space="preserve">
<source xml:lang="en">- 2<g id="1"> 15</g></source>
<target xml:lang="zh">- 2<g id="1"> 15</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu66" xml:space="preserve">
<source xml:lang="en">2<g id="1"> 15 </g>-1</source>
<target xml:lang="zh">2<g id="1"> 15 </g>-1</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu67" xml:space="preserve">
<source xml:lang="en">- 32768</source>
<target xml:lang="zh">- 32768</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu68" xml:space="preserve">
<source xml:lang="en">32767</source>
<target xml:lang="zh">32767</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu69" xml:space="preserve">
<source xml:lang="en">Int</source>
<target xml:lang="zh">Int</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu70" xml:space="preserve">
<source xml:lang="en">integer 32 bits</source>
<target xml:lang="zh">integer 32 bits</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu71" xml:space="preserve">
<source xml:lang="en">- 2<g id="1"> 31</g></source>
<target xml:lang="zh">- 2<g id="1"> 31</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu72" xml:space="preserve">
<source xml:lang="en">2<g id="1"> 31 </g>-1</source>
<target xml:lang="zh">2<g id="1"> 31 </g>-1</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu73" xml:space="preserve">
<source xml:lang="en">-2147483648</source>
<target xml:lang="zh">-2147483648</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu74" xml:space="preserve">
<source xml:lang="en">2147483647</source>
<target xml:lang="zh">2147483647</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu75" xml:space="preserve">
<source xml:lang="en">Long</source>
<target xml:lang="zh">Long</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu76" xml:space="preserve">
<source xml:lang="en">long integer  64 bits</source>
<target xml:lang="zh">long integer  64 bits</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu77" xml:space="preserve">
<source xml:lang="en">- 2 <g id="1">63</g></source>
<target xml:lang="zh">- 2 <g id="1">63</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu78" xml:space="preserve">
<source xml:lang="en">2<g id="1"> 63 </g>-1</source>
<target xml:lang="zh">2<g id="1"> 63 </g>-1</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu79" xml:space="preserve">
<source xml:lang="en">-9223372036854775808</source>
<target xml:lang="zh">-9223372036854775808</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu80" xml:space="preserve">
<source xml:lang="en">9223372036854775807</source>
<target xml:lang="zh">9223372036854775807</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu81" xml:space="preserve">
<source xml:lang="en">Float</source>
<target xml:lang="zh">Float</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu82" xml:space="preserve">
<source xml:lang="en">floating point number</source>
<target xml:lang="zh">floating point number</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu83" xml:space="preserve">
<source xml:lang="en">32 bits</source>
<target xml:lang="zh">32 bits</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu84" xml:space="preserve">
<source xml:lang="en">- 2 <g id="1">-149</g></source>
<target xml:lang="zh">- 2 <g id="1">-149</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu85" xml:space="preserve">
<source xml:lang="en">(2 -2<g id="1"> -23</g>) * 2<g id="2"> 127</g></source>
<target xml:lang="zh">(2 -2<g id="1"> -23</g>) * 2<g id="2"> 127</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu86" xml:space="preserve">
<source xml:lang="en">1.4E-45</source>
<target xml:lang="zh">1.4E-45</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu87" xml:space="preserve">
<source xml:lang="en">3.4028235 E 38</source>
<target xml:lang="zh">3.4028235 E 38</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu88" xml:space="preserve">
<source xml:lang="en">Double</source>
<target xml:lang="zh">Double</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu89" xml:space="preserve">
<source xml:lang="en">double precision number  </source>
<target xml:lang="zh">double precision number  </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu90" xml:space="preserve">
<source xml:lang="en">64 bits</source>
<target xml:lang="zh">64 bits</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu91" xml:space="preserve">
<source xml:lang="en">- 2<g id="1"> -1074</g></source>
<target xml:lang="zh">- 2<g id="1"> -1074</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu92" xml:space="preserve">
<source xml:lang="en">(2 -2<g id="1"> -52</g>) * 2<g id="2"> 1023</g></source>
<target xml:lang="zh">(2 -2<g id="1"> -52</g>) * 2<g id="2"> 1023</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu93" xml:space="preserve">
<source xml:lang="en">2.2250738585072014 E -308</source>
<target xml:lang="zh">2.2250738585072014 E -308</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu94" xml:space="preserve">
<source xml:lang="en">1.7976931348623157 E 308</source>
<target xml:lang="zh">1.7976931348623157 E 308</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu95" xml:space="preserve">
<source xml:lang="en">Char</source>
<target xml:lang="zh">Char</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu96" xml:space="preserve">
<source xml:lang="en">character</source>
<target xml:lang="zh">character</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu97" xml:space="preserve">
<source xml:lang="en">String</source>
<target xml:lang="zh">String</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu98" xml:space="preserve">
<source xml:lang="en">array of characters</source>
<target xml:lang="zh">array of characters</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu99" xml:space="preserve">
<source xml:lang="en">B4R</source>
<target xml:lang="zh">B4R</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu100" xml:space="preserve">
<source xml:lang="en">List of types with their ranges:</source>
<target xml:lang="zh">List of types with their ranges:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu101" xml:space="preserve">
<source xml:lang="en">Numeric types:<x id="1"/><g id="2">Byte</g><x id="3"/>0 - 255<x id="4"/><g id="5">Int</g> (2 bytes)<x id="6"/>-32768 - 32768. <x id="7"/>Similar to Short type in other B4X tools.<x id="8"/><g id="9">UInt</g> (2 bytes)<x id="10"/>0 - 65535.<x id="11"/>B4R specific.<x id="12"/><g id="13">Long</g> (4 bytes)<x id="14"/>-2,147,483,648 - 2,147,483,647. Similar to Int type in other B4X tools.<x id="15"/><g id="16">ULong</g> (4 bytes)<x id="17"/>0 - 4,294,967,295 B4R specific.<x id="18"/><g id="19">Double</g> (4 bytes)<x id="20"/>4 bytes floating point. Similar to Float in other B4X tools.<x id="21"/>Float is the same as Double. Short is the same as Int.<x id="22"/>The above is true on all boards, including the Arduino Due.<x id="23"/>Other types:<x id="24"/><g id="25">Boolean</g><x id="26"/>True or False. Practically it is saved as a byte with the value of 1 or 0.<x id="27"/><g id="28">String</g><x id="29"/>Strings are made from an array of bytes that end with a null byte (byte with the value of 0).<x id="30"/><g id="31">Object</g><x id="32"/>Objects can hold other types of values.</source>
<target xml:lang="zh">Numeric types:<x id="1"/><g id="2">Byte</g><x id="3"/>0 - 255<x id="4"/><g id="5">Int</g> (2 bytes)<x id="6"/>-32768 - 32768. <x id="7"/>Similar to Short type in other B4X tools.<x id="8"/><g id="9">UInt</g> (2 bytes)<x id="10"/>0 - 65535.<x id="11"/>B4R specific.<x id="12"/><g id="13">Long</g> (4 bytes)<x id="14"/>-2,147,483,648 - 2,147,483,647. Similar to Int type in other B4X tools.<x id="15"/><g id="16">ULong</g> (4 bytes)<x id="17"/>0 - 4,294,967,295 B4R specific.<x id="18"/><g id="19">Double</g> (4 bytes)<x id="20"/>4 bytes floating point. Similar to Float in other B4X tools.<x id="21"/>Float is the same as Double. Short is the same as Int.<x id="22"/>The above is true on all boards, including the Arduino Due.<x id="23"/>Other types:<x id="24"/><g id="25">Boolean</g><x id="26"/>True or False. Practically it is saved as a byte with the value of 1 or 0.<x id="27"/><g id="28">String</g><x id="29"/>Strings are made from an array of bytes that end with a null byte (byte with the value of 0).<x id="30"/><g id="31">Object</g><x id="32"/>Objects can hold other types of values.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu102" xml:space="preserve">
<source xml:lang="en">Primitive types are always passed by value to other subs or when assigned to other variables.</source>
<target xml:lang="zh">Primitive types are always passed by value to other subs or when assigned to other variables.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu103" xml:space="preserve">
<source xml:lang="en">For example:</source>
<target xml:lang="zh">For example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu104" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">S1</g></source>
<target xml:lang="zh">Sub <g id="1">S1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu105" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> A <g id="2">As</g> <g id="3">Int</g></source>
<target xml:lang="zh"><g id="1">Private</g> A <g id="2">As</g> <g id="3">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu106" xml:space="preserve">
<source xml:lang="en"><g id="1"><x id="2"/>A = </g><g id="3">12<x id="4"/></g>The variable A = 12</source>
<target xml:lang="zh"><g id="1"><x id="2"/>A = </g><g id="3">12<x id="4"/></g>The variable A = 12</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu107" xml:space="preserve">
<source xml:lang="en"><g id="1"><x id="2"/>S2(A)<x id="3"/></g>It's passed by value to routine S2</source>
<target xml:lang="zh"><g id="1"><x id="2"/>S2(A)<x id="3"/></g>It's passed by value to routine S2</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu108" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g><g id="2">(A)<x id="3"/></g><g id="4">' Prints 12<x id="5"/></g>Variable A still equals 12, even though B was changed in routine S2.</source>
<target xml:lang="zh"><g id="1">Log</g><g id="2">(A)<x id="3"/></g><g id="4">' Prints 12<x id="5"/></g>Variable A still equals 12, even though B was changed in routine S2.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu109" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu110" xml:space="preserve">
<source xml:lang="en"><g id="1">Sub </g><g id="2">S2</g><g id="3">(B </g><g id="4">As</g><g id="5"> </g><g id="6">Int</g><g id="7">)<x id="8"/></g>Variable B = 12</source>
<target xml:lang="zh"><g id="1">Sub </g><g id="2">S2</g><g id="3">(B </g><g id="4">As</g><g id="5"> </g><g id="6">Int</g><g id="7">)<x id="8"/></g>Variable B = 12</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu111" xml:space="preserve">
<source xml:lang="en"><g id="1"><x id="2"/>B = </g><g id="3">45<x id="4"/></g>Its value is changed to B = 45</source>
<target xml:lang="zh"><g id="1"><x id="2"/>B = </g><g id="3">45<x id="4"/></g>Its value is changed to B = 45</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu112" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu113" xml:space="preserve">
<source xml:lang="en">All other types, including arrays of primitive types and strings are categorized as non-primitive types.</source>
<target xml:lang="zh">All other types, including arrays of primitive types and strings are categorized as non-primitive types.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu114" xml:space="preserve">
<source xml:lang="en">When you pass a non-primitive to a sub or when you assign it to a different variable, a copy of the reference is passed.</source>
<target xml:lang="zh">When you pass a non-primitive to a sub or when you assign it to a different variable, a copy of the reference is passed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu115" xml:space="preserve">
<source xml:lang="en">This means that the data itself isn't duplicated.</source>
<target xml:lang="zh">This means that the data itself isn't duplicated.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu116" xml:space="preserve">
<source xml:lang="en">It is slightly different than passing by reference as you cannot change the reference of the original variable.</source>
<target xml:lang="zh">It is slightly different than passing by reference as you cannot change the reference of the original variable.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu117" xml:space="preserve">
<source xml:lang="en">All types can be treated as Objects.</source>
<target xml:lang="zh">All types can be treated as Objects.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu118" xml:space="preserve">
<source xml:lang="en">Collections like lists and maps work with Objects and therefore can store any value.</source>
<target xml:lang="zh">Collections like lists and maps work with Objects and therefore can store any value.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu119" xml:space="preserve">
<source xml:lang="en">Here is an example of a common mistake, where the developer tries to add several arrays to a list:</source>
<target xml:lang="zh">Here is an example of a common mistake, where the developer tries to add several arrays to a list:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu120" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> are(</g><g id="2">3</g><g id="3">) </g><g id="4">As</g><g id="5"> </g><g id="6">Int</g></source>
<target xml:lang="zh">Private<g id="1"> are(</g><g id="2">3</g><g id="3">) </g><g id="4">As</g><g id="5"> </g><g id="6">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu121" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> List1 </g><g id="2">As</g><g id="3"> </g><g id="4">List</g></source>
<target xml:lang="zh">Private<g id="1"> List1 </g><g id="2">As</g><g id="3"> </g><g id="4">List</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu122" xml:space="preserve">
<source xml:lang="en">List1.Initialize</source>
<target xml:lang="zh">List1.Initialize</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu123" xml:space="preserve">
<source xml:lang="en">For<g id="1"> I = </g><g id="2">1</g><g id="3"> </g>To<g id="4"> </g><g id="5">5</g></source>
<target xml:lang="zh">For<g id="1"> I = </g><g id="2">1</g><g id="3"> </g>To<g id="4"> </g><g id="5">5</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu124" xml:space="preserve">
<source xml:lang="en"><x id="1"/>are(<g id="2">0</g>) = I * <g id="3">2</g></source>
<target xml:lang="zh"><x id="1"/>are(<g id="2">0</g>) = I * <g id="3">2</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu125" xml:space="preserve">
<source xml:lang="en"><x id="1"/>are(<g id="2">1</g>) = I * <g id="3">2</g></source>
<target xml:lang="zh"><x id="1"/>are(<g id="2">1</g>) = I * <g id="3">2</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu126" xml:space="preserve">
<source xml:lang="en"><x id="1"/>are(<g id="2">2</g>) = I * <g id="3">2</g></source>
<target xml:lang="zh"><x id="1"/>are(<g id="2">2</g>) = I * <g id="3">2</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu127" xml:space="preserve">
<source xml:lang="en"><x id="1"/>List1.Add(arr) <x id="2"/><g id="3">'Add the whole array as a single item</g></source>
<target xml:lang="zh"><x id="1"/>List1.Add(arr) <x id="2"/><g id="3">'Add the whole array as a single item</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu128" xml:space="preserve">
<source xml:lang="en">Next</source>
<target xml:lang="zh">Next</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu129" xml:space="preserve">
<source xml:lang="en">arr = List1.Get(<g id="1">0</g>) <x id="2"/><g id="3">'get the first item from the list</g></source>
<target xml:lang="zh">arr = List1.Get(<g id="1">0</g>) <x id="2"/><g id="3">'get the first item from the list</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu130" xml:space="preserve">
<source xml:lang="en">Log<g id="1">(arr(</g><g id="2">0</g><g id="3">))<x id="4"/></g><g id="5">'What will be printed here???</g></source>
<target xml:lang="zh">Log<g id="1">(arr(</g><g id="2">0</g><g id="3">))<x id="4"/></g><g id="5">'What will be printed here???</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu131" xml:space="preserve">
<source xml:lang="en">You may expect it to print 2. However, it will print 10.<x id="1"/>We have created a single array and added 5 references of this array to the list.<x id="2"/>The values in the single array are the values set in the last iteration.<x id="3"/>To fix this we need to create a new array each iteration.<x id="4"/>This is done by calling Private each iteration:</source>
<target xml:lang="zh">You may expect it to print 2. However, it will print 10.<x id="1"/>We have created a single array and added 5 references of this array to the list.<x id="2"/>The values in the single array are the values set in the last iteration.<x id="3"/>To fix this we need to create a new array each iteration.<x id="4"/>This is done by calling Private each iteration:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu132" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> arr(</g><g id="2">3</g><g id="3">) </g><g id="4">As</g><g id="5"> </g><g id="6">Int</g><g id="7"> </g><g id="8">'This call is redundant in this case.</g></source>
<target xml:lang="zh">Private<g id="1"> arr(</g><g id="2">3</g><g id="3">) </g><g id="4">As</g><g id="5"> </g><g id="6">Int</g><g id="7"> </g><g id="8">'This call is redundant in this case.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu133" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> List1 </g><g id="2">As</g><g id="3"> </g><g id="4">List</g></source>
<target xml:lang="zh">Private<g id="1"> List1 </g><g id="2">As</g><g id="3"> </g><g id="4">List</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu134" xml:space="preserve">
<source xml:lang="en">List1.Initialize</source>
<target xml:lang="zh">List1.Initialize</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu135" xml:space="preserve">
<source xml:lang="en">For<g id="1"> i = </g><g id="2">1</g><g id="3"> </g>To<g id="4"> </g><g id="5">5</g></source>
<target xml:lang="zh">For<g id="1"> i = </g><g id="2">1</g><g id="3"> </g>To<g id="4"> </g><g id="5">5</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu136" xml:space="preserve">
<source xml:lang="en"> <x id="1"/><g id="2">Private</g> arr(<g id="3">3</g>) <g id="4">As</g> <g id="5">Int</g></source>
<target xml:lang="zh"> <x id="1"/><g id="2">Private</g> arr(<g id="3">3</g>) <g id="4">As</g> <g id="5">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu137" xml:space="preserve">
<source xml:lang="en"><x id="1"/>arr(<g id="2">0</g>) = i * <g id="3">2</g></source>
<target xml:lang="zh"><x id="1"/>arr(<g id="2">0</g>) = i * <g id="3">2</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu138" xml:space="preserve">
<source xml:lang="en"><x id="1"/>arr(<g id="2">1</g>) = i * <g id="3">2</g></source>
<target xml:lang="zh"><x id="1"/>arr(<g id="2">1</g>) = i * <g id="3">2</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu139" xml:space="preserve">
<source xml:lang="en"><x id="1"/>arr(<g id="2">2</g>) = i * <g id="3">2</g></source>
<target xml:lang="zh"><x id="1"/>arr(<g id="2">2</g>) = i * <g id="3">2</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu140" xml:space="preserve">
<source xml:lang="en"><x id="1"/>List1.Add(arr) <g id="2">'Add the whole array as a single item</g></source>
<target xml:lang="zh"><x id="1"/>List1.Add(arr) <g id="2">'Add the whole array as a single item</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu141" xml:space="preserve">
<source xml:lang="en">Next</source>
<target xml:lang="zh">Next</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu142" xml:space="preserve">
<source xml:lang="en">arr = List1.Get(<g id="1">0</g>) <g id="2">'get the first item from the list</g></source>
<target xml:lang="zh">arr = List1.Get(<g id="1">0</g>) <g id="2">'get the first item from the list</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu143" xml:space="preserve">
<source xml:lang="en">Log<g id="1">(arr(</g><g id="2">0</g><g id="3">)) </g><g id="4">'Will print 2</g></source>
<target xml:lang="zh">Log<g id="1">(arr(</g><g id="2">0</g><g id="3">)) </g><g id="4">'Will print 2</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu144" xml:space="preserve">
<source xml:lang="en">Names of variables</source>
<target xml:lang="zh">Names of variables</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu145" xml:space="preserve">
<source xml:lang="en">It is up to you to give any name to a variable, except reserved words. </source>
<target xml:lang="zh">It is up to you to give any name to a variable, except reserved words. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu146" xml:space="preserve">
<source xml:lang="en">A variable name must begin with a letter and must be composed by the following characters A-Z, a-z, 0-9, and underscore "_", no spaces, no brackets etc.</source>
<target xml:lang="zh">A variable name must begin with a letter and must be composed by the following characters A-Z, a-z, 0-9, and underscore "_", no spaces, no brackets etc.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu147" xml:space="preserve">
<source xml:lang="en">Variable names are case insensitive, that means that Index and index refer to the same variable.</source>
<target xml:lang="zh">Variable names are case insensitive, that means that Index and index refer to the same variable.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu148" xml:space="preserve">
<source xml:lang="en">But it is good practice to give them meaningful names.</source>
<target xml:lang="zh">But it is good practice to give them meaningful names.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu149" xml:space="preserve">
<source xml:lang="en">Example: </source>
<target xml:lang="zh">Example: </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu150" xml:space="preserve">
<source xml:lang="en">Interest = Capital * Rate / 100<x id="1"/>is meaningful </source>
<target xml:lang="zh">Interest = Capital * Rate / 100<x id="1"/>is meaningful </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu151" xml:space="preserve">
<source xml:lang="en">n1 = n2 * n3 / 100<x id="1"/>not meaningful</source>
<target xml:lang="zh">n1 = n2 * n3 / 100<x id="1"/>not meaningful</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu152" xml:space="preserve">
<source xml:lang="en">For Views (B4A, B4i), Nodes (B4J), it is useful to add to the name a three character prefix that defines its type.</source>
<target xml:lang="zh">For Views (B4A, B4i), Nodes (B4J), it is useful to add to the name a three character prefix that defines its type.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu153" xml:space="preserve">
<source xml:lang="en">Examples:</source>
<target xml:lang="zh">Examples:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu154" xml:space="preserve">
<source xml:lang="en"><g id="1">lblCapital</g><x id="2"/>lbl > Label<x id="3"/>Capital > purpose</source>
<target xml:lang="zh"><g id="1">lblCapital</g><x id="2"/>lbl > Label<x id="3"/>Capital > purpose</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu155" xml:space="preserve">
<source xml:lang="en"><g id="1">edtInterest</g><x id="2"/>edt > EditText<x id="3"/>Interest > purpose</source>
<target xml:lang="zh"><g id="1">edtInterest</g><x id="2"/>edt > EditText<x id="3"/>Interest > purpose</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu156" xml:space="preserve">
<source xml:lang="en"><g id="1">btnNext</g><x id="2"/>btn > Button<x id="3"/>Next > purpose</source>
<target xml:lang="zh"><g id="1">btnNext</g><x id="2"/>btn > Button<x id="3"/>Next > purpose</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu157" xml:space="preserve">
<source xml:lang="en"> <x id="1"/>Declaring variables</source>
<target xml:lang="zh"> <x id="1"/>Declaring variables</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu158" xml:space="preserve">
<source xml:lang="en">Simple variables</source>
<target xml:lang="zh">Simple variables</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu159" xml:space="preserve">
<source xml:lang="en">Variables are declared with the <g id="1">Private</g> or the <g id="2">Public</g> keyword followed by the variable name and the  <g id="3">As</g>  keyword and followed by the variable type. For details look at <g id="4">chapter Scope</g>.</source>
<target xml:lang="zh">Variables are declared with the <g id="1">Private</g> or the <g id="2">Public</g> keyword followed by the variable name and the  <g id="3">As</g>  keyword and followed by the variable type. For details look at <g id="4">chapter Scope</g>.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu160" xml:space="preserve">
<source xml:lang="en">There exist the <g id="1">Dim</g>  keyword, this is maintained for compatibility.</source>
<target xml:lang="zh">There exist the <g id="1">Dim</g>  keyword, this is maintained for compatibility.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu161" xml:space="preserve">
<source xml:lang="en">Examples:</source>
<target xml:lang="zh">Examples:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu162" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g><g id="2"> </g><g id="3">Capital</g><g id="4"> </g><g id="5">As</g><g id="6"> </g><g id="7">Double<x id="8"/></g>Declares three variables as Double,</source>
<target xml:lang="zh"><g id="1">Private</g><g id="2"> </g><g id="3">Capital</g><g id="4"> </g><g id="5">As</g><g id="6"> </g><g id="7">Double<x id="8"/></g>Declares three variables as Double,</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu163" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g><g id="2"> </g><g id="3">Interest</g><g id="4"> </g><g id="5">As</g><g id="6"> </g><g id="7">Double<x id="8"/></g>double precision numbers.</source>
<target xml:lang="zh"><g id="1">Private</g><g id="2"> </g><g id="3">Interest</g><g id="4"> </g><g id="5">As</g><g id="6"> </g><g id="7">Double<x id="8"/></g>double precision numbers.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu164" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g><g id="2"> </g><g id="3">Rate</g><g id="4"> </g><g id="5">As</g><g id="6"> </g><g id="7">Double</g></source>
<target xml:lang="zh"><g id="1">Private</g><g id="2"> </g><g id="3">Rate</g><g id="4"> </g><g id="5">As</g><g id="6"> </g><g id="7">Double</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu165" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g><g id="2"> </g><g id="3">i</g><g id="4"> </g><g id="5">As</g><g id="6"> </g><g id="7">Int<x id="8"/></g>Declares three variables as Int, integer numbers.</source>
<target xml:lang="zh"><g id="1">Private</g><g id="2"> </g><g id="3">i</g><g id="4"> </g><g id="5">As</g><g id="6"> </g><g id="7">Int<x id="8"/></g>Declares three variables as Int, integer numbers.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu166" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g><g id="2"> </g><g id="3">j</g><g id="4"> </g><g id="5">As</g><g id="6"> </g><g id="7">Int</g></source>
<target xml:lang="zh"><g id="1">Private</g><g id="2"> </g><g id="3">j</g><g id="4"> </g><g id="5">As</g><g id="6"> </g><g id="7">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu167" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g><g id="2"> </g><g id="3">k</g><g id="4"> </g><g id="5">As</g><g id="6"> </g><g id="7">Int</g></source>
<target xml:lang="zh"><g id="1">Private</g><g id="2"> </g><g id="3">k</g><g id="4"> </g><g id="5">As</g><g id="6"> </g><g id="7">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu168" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g><g id="2"> </g><g id="3">lblCapital</g><g id="4"> </g><g id="5">As</g><g id="6"> </g><g id="7">Label</g></source>
<target xml:lang="zh"><g id="1">Private</g><g id="2"> </g><g id="3">lblCapital</g><g id="4"> </g><g id="5">As</g><g id="6"> </g><g id="7">Label</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu169" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g><g id="2"> </g><g id="3">lblInterest</g><g id="4"> </g><g id="5">As</g><g id="6"> </g><g id="7">Label<x id="8"/></g>Declares three variables as Label views.</source>
<target xml:lang="zh"><g id="1">Private</g><g id="2"> </g><g id="3">lblInterest</g><g id="4"> </g><g id="5">As</g><g id="6"> </g><g id="7">Label<x id="8"/></g>Declares three variables as Label views.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu170" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g><g id="2"> </g><g id="3">lblRate</g><g id="4"> </g><g id="5">As</g><g id="6"> </g><g id="7">Label</g></source>
<target xml:lang="zh"><g id="1">Private</g><g id="2"> </g><g id="3">lblRate</g><g id="4"> </g><g id="5">As</g><g id="6"> </g><g id="7">Label</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu171" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g><g id="2"> </g><g id="3">btnNext</g><g id="4"> </g><g id="5">As</g><g id="6"> </g><g id="7">Button<x id="8"/></g>Declares two variables as Button views.</source>
<target xml:lang="zh"><g id="1">Private</g><g id="2"> </g><g id="3">btnNext</g><g id="4"> </g><g id="5">As</g><g id="6"> </g><g id="7">Button<x id="8"/></g>Declares two variables as Button views.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu172" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g><g id="2"> </g><g id="3">btnPrev</g><g id="4"> </g><g id="5">As</g><g id="6"> </g><g id="7">Button</g></source>
<target xml:lang="zh"><g id="1">Private</g><g id="2"> </g><g id="3">btnPrev</g><g id="4"> </g><g id="5">As</g><g id="6"> </g><g id="7">Button</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu173" xml:space="preserve">
<source xml:lang="en">The same variables can also be declared in a short way.</source>
<target xml:lang="zh">The same variables can also be declared in a short way.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu174" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> <g id="2">Capital</g>, <g id="3">Interest</g>, <g id="4">Rate</g> <g id="5">As</g> <g id="6">Double</g></source>
<target xml:lang="zh"><g id="1">Private</g> <g id="2">Capital</g>, <g id="3">Interest</g>, <g id="4">Rate</g> <g id="5">As</g> <g id="6">Double</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu175" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> <g id="2">i</g>, <g id="3">j</g>, <g id="4">k</g> <g id="5">As</g> <g id="6">Int</g></source>
<target xml:lang="zh"><g id="1">Private</g> <g id="2">i</g>, <g id="3">j</g>, <g id="4">k</g> <g id="5">As</g> <g id="6">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu176" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> <g id="2">lblCapital</g>, <g id="3">lblInterest</g>, <g id="4">lblRate</g> <g id="5">As</g> <g id="6">Label</g></source>
<target xml:lang="zh"><g id="1">Private</g> <g id="2">lblCapital</g>, <g id="3">lblInterest</g>, <g id="4">lblRate</g> <g id="5">As</g> <g id="6">Label</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu177" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> <g id="2">btnNext</g>, <g id="3">btnPrev</g> <g id="4">As</g> <g id="5">Button</g></source>
<target xml:lang="zh"><g id="1">Private</g> <g id="2">btnNext</g>, <g id="3">btnPrev</g> <g id="4">As</g> <g id="5">Button</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu178" xml:space="preserve">
<source xml:lang="en">The names of the variables separated by commas and followed by the type declaration.</source>
<target xml:lang="zh">The names of the variables separated by commas and followed by the type declaration.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu179" xml:space="preserve">
<source xml:lang="en">Following variable declarations are valid:</source>
<target xml:lang="zh">Following variable declarations are valid:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu180" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> </g><g id="2">i</g><g id="3"> = </g><g id="4">0</g><g id="5">, </g><g id="6">j</g><g id="7"> = </g><g id="8">2</g><g id="9">, </g><g id="10">k</g><g id="11"> = </g><g id="12">5</g><g id="13"> </g>As<g id="14"> </g><g id="15">Int</g></source>
<target xml:lang="zh">Private<g id="1"> </g><g id="2">i</g><g id="3"> = </g><g id="4">0</g><g id="5">, </g><g id="6">j</g><g id="7"> = </g><g id="8">2</g><g id="9">, </g><g id="10">k</g><g id="11"> = </g><g id="12">5</g><g id="13"> </g>As<g id="14"> </g><g id="15">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu181" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> </g><g id="2">txt</g><g id="3"> = </g><g id="4">"test"</g><g id="5"> </g>As<g id="6"> </g><g id="7">String</g><g id="8">, </g><g id="9">value</g><g id="10"> = </g><g id="11">1.05</g><g id="12"> </g>As<g id="13"> </g><g id="14">Double</g><g id="15">, </g><g id="16">flag</g><g id="17"> = </g>False<g id="18"> </g>As<g id="19"> </g><g id="20">Boolean</g></source>
<target xml:lang="zh">Private<g id="1"> </g><g id="2">txt</g><g id="3"> = </g><g id="4">"test"</g><g id="5"> </g>As<g id="6"> </g><g id="7">String</g><g id="8">, </g><g id="9">value</g><g id="10"> = </g><g id="11">1.05</g><g id="12"> </g>As<g id="13"> </g><g id="14">Double</g><g id="15">, </g><g id="16">flag</g><g id="17"> = </g>False<g id="18"> </g>As<g id="19"> </g><g id="20">Boolean</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu182" xml:space="preserve">
<source xml:lang="en">View names must be declared if we want to use them in the code.</source>
<target xml:lang="zh">View names must be declared if we want to use them in the code.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu183" xml:space="preserve">
<source xml:lang="en">For example, if we want to change the text in a Label view in the code, like </source>
<target xml:lang="zh">For example, if we want to change the text in a Label view in the code, like </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu184" xml:space="preserve">
<source xml:lang="en"><g id="1">lblCapital.Text = </g><g id="2">"1200"</g>,  </source>
<target xml:lang="zh"><g id="1">lblCapital.Text = </g><g id="2">"1200"</g>,  </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu185" xml:space="preserve">
<source xml:lang="en">we need to reference this Label view by its name <g id="1">lblCapital</g>, this is done with the <g id="2">Private</g> declaration. </source>
<target xml:lang="zh">we need to reference this Label view by its name <g id="1">lblCapital</g>, this is done with the <g id="2">Private</g> declaration. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu186" xml:space="preserve">
<source xml:lang="en">If we never make any reference to this Label view anywhere in the code no declaration is needed. </source>
<target xml:lang="zh">If we never make any reference to this Label view anywhere in the code no declaration is needed. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu187" xml:space="preserve">
<source xml:lang="en">Using an event routine for that view doesn't need a declaration either.</source>
<target xml:lang="zh">Using an event routine for that view doesn't need a declaration either.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu188" xml:space="preserve">
<source xml:lang="en">To allocate a value to a variable write its name followed by the equal sign and followed by the value, like:</source>
<target xml:lang="zh">To allocate a value to a variable write its name followed by the equal sign and followed by the value, like:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu189" xml:space="preserve">
<source xml:lang="en">Capital = <g id="1">1200</g></source>
<target xml:lang="zh">Capital = <g id="1">1200</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu190" xml:space="preserve">
<source xml:lang="en">LastName = <g id="1">"SMITH"</g></source>
<target xml:lang="zh">LastName = <g id="1">"SMITH"</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu191" xml:space="preserve">
<source xml:lang="en">Note that for <g id="1">Capital</g> we wrote just <g id="2">1200</g> because <g id="3">Capital</g> is a number.</source>
<target xml:lang="zh">Note that for <g id="1">Capital</g> we wrote just <g id="2">1200</g> because <g id="3">Capital</g> is a number.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu192" xml:space="preserve">
<source xml:lang="en">But for <g id="1">LastName</g> we wrote <g id="2">"SMITH"</g> because <g id="3">LastName</g><g id="4"> </g>is a string.</source>
<target xml:lang="zh">But for <g id="1">LastName</g> we wrote <g id="2">"SMITH"</g> because <g id="3">LastName</g><g id="4"> </g>is a string.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu193" xml:space="preserve">
<source xml:lang="en">Strings must always be written between double quotes.</source>
<target xml:lang="zh">Strings must always be written between double quotes.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu194" xml:space="preserve">
<source xml:lang="en">Array variables</source>
<target xml:lang="zh">Array variables</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu195" xml:space="preserve">
<source xml:lang="en">Arrays are collections of data or objects that can be selected by indices. Arrays can have multiple dimensions.</source>
<target xml:lang="zh">Arrays are collections of data or objects that can be selected by indices. Arrays can have multiple dimensions.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu196" xml:space="preserve">
<source xml:lang="en">The declaration contains the <g id="1">Private</g> or the <g id="2">Public</g> keyword followed by the variable name <g id="3">LastName</g>, the number of items between brackets <g id="4">(</g><g id="5">50</g><g id="6">)</g>, the keyword <g id="7">As</g> and the variable type <g id="8">String</g>.</source>
<target xml:lang="zh">The declaration contains the <g id="1">Private</g> or the <g id="2">Public</g> keyword followed by the variable name <g id="3">LastName</g>, the number of items between brackets <g id="4">(</g><g id="5">50</g><g id="6">)</g>, the keyword <g id="7">As</g> and the variable type <g id="8">String</g>.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu197" xml:space="preserve">
<source xml:lang="en">For details look at <g id="1">chapter Scope</g>. There exist the <g id="2">Dim</g>  keyword, this is maintained for compatibility.</source>
<target xml:lang="zh">For details look at <g id="1">chapter Scope</g>. There exist the <g id="2">Dim</g>  keyword, this is maintained for compatibility.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu198" xml:space="preserve">
<source xml:lang="en">Note: B4R supports only single dimension arrays !</source>
<target xml:lang="zh">Note: B4R supports only single dimension arrays !</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu199" xml:space="preserve">
<source xml:lang="en">Examples:</source>
<target xml:lang="zh">Examples:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu200" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g><g id="2"> </g><g id="3">LastName</g><g id="4">(</g><g id="5">50</g><g id="6">) </g><g id="7">As</g><g id="8"> </g><g id="9">String<x id="10"/></g>One dimension array of strings, total number of items 50.</source>
<target xml:lang="zh"><g id="1">Public</g><g id="2"> </g><g id="3">LastName</g><g id="4">(</g><g id="5">50</g><g id="6">) </g><g id="7">As</g><g id="8"> </g><g id="9">String<x id="10"/></g>One dimension array of strings, total number of items 50.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu201" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g><g id="2"> </g><g id="3">Matrix</g><g id="4">(</g><g id="5">3</g><g id="6">, </g><g id="7">3</g><g id="8">) </g><g id="9">As</g><g id="10"> </g><g id="11">Double<x id="12"/></g>Two dimensions array of Doubles, total number of items 9.</source>
<target xml:lang="zh"><g id="1">Public</g><g id="2"> </g><g id="3">Matrix</g><g id="4">(</g><g id="5">3</g><g id="6">, </g><g id="7">3</g><g id="8">) </g><g id="9">As</g><g id="10"> </g><g id="11">Double<x id="12"/></g>Two dimensions array of Doubles, total number of items 9.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu202" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g><g id="2"> </g><g id="3">Data</g><g id="4">(</g><g id="5">3</g><g id="6">, </g><g id="7">5</g><g id="8">, </g><g id="9">10</g><g id="10">) </g><g id="11">As</g><g id="12"> </g><g id="13">Int<x id="14"/></g>Three dimensions array of integers, total number of items 150.</source>
<target xml:lang="zh"><g id="1">Public</g><g id="2"> </g><g id="3">Data</g><g id="4">(</g><g id="5">3</g><g id="6">, </g><g id="7">5</g><g id="8">, </g><g id="9">10</g><g id="10">) </g><g id="11">As</g><g id="12"> </g><g id="13">Int<x id="14"/></g>Three dimensions array of integers, total number of items 150.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu203" xml:space="preserve">
<source xml:lang="en">The first index of each dimension in an array is 0.<x id="1"/></source>
<target xml:lang="zh">The first index of each dimension in an array is 0.<x id="1"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu204" xml:space="preserve">
<source xml:lang="en">LastName(0), Matrix(0,0), Data(0,0,0)</source>
<target xml:lang="zh">LastName(0), Matrix(0,0), Data(0,0,0)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu205" xml:space="preserve">
<source xml:lang="en">The last index is equal to the number of items in each dimension minus 1.</source>
<target xml:lang="zh">The last index is equal to the number of items in each dimension minus 1.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu206" xml:space="preserve">
<source xml:lang="en">LastName(49), Matrix(2,2), Data(2,4,9)</source>
<target xml:lang="zh">LastName(49), Matrix(2,2), Data(2,4,9)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu207" xml:space="preserve">
<source xml:lang="en">Public<g id="1"> </g><g id="2">LastName</g><g id="3">(</g><g id="4">10</g><g id="5">) </g>As<g id="6"> </g><g id="7">String</g></source>
<target xml:lang="zh">Public<g id="1"> </g><g id="2">LastName</g><g id="3">(</g><g id="4">10</g><g id="5">) </g>As<g id="6"> </g><g id="7">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu208" xml:space="preserve">
<source xml:lang="en">Public<g id="1"> </g><g id="2">FirstName</g><g id="3">(</g><g id="4">10</g><g id="5">) </g>As<g id="6"> </g><g id="7">String</g></source>
<target xml:lang="zh">Public<g id="1"> </g><g id="2">FirstName</g><g id="3">(</g><g id="4">10</g><g id="5">) </g>As<g id="6"> </g><g id="7">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu209" xml:space="preserve">
<source xml:lang="en">Public<g id="1"> </g><g id="2">Address</g><g id="3">(</g><g id="4">10</g><g id="5">) </g>As<g id="6"> </g><g id="7">String</g></source>
<target xml:lang="zh">Public<g id="1"> </g><g id="2">Address</g><g id="3">(</g><g id="4">10</g><g id="5">) </g>As<g id="6"> </g><g id="7">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu210" xml:space="preserve">
<source xml:lang="en">Public<g id="1"> </g><g id="2">City</g><g id="3">(</g><g id="4">10</g><g id="5">) </g>As<g id="6"> </g><g id="7">String</g></source>
<target xml:lang="zh">Public<g id="1"> </g><g id="2">City</g><g id="3">(</g><g id="4">10</g><g id="5">) </g>As<g id="6"> </g><g id="7">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu211" xml:space="preserve">
<source xml:lang="en">or</source>
<target xml:lang="zh">or</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu212" xml:space="preserve">
<source xml:lang="en">Public<g id="1"> </g><g id="2">LastName</g><g id="3">(</g><g id="4">10</g><g id="5">), </g><g id="6">FirstName</g><g id="7">(</g><g id="8">10</g><g id="9">), </g><g id="10">Address</g><g id="11">(</g><g id="12">10</g><g id="13">), </g><g id="14">City</g><g id="15">(</g><g id="16">10</g><g id="17">) </g>As<g id="18"> </g><g id="19">String</g></source>
<target xml:lang="zh">Public<g id="1"> </g><g id="2">LastName</g><g id="3">(</g><g id="4">10</g><g id="5">), </g><g id="6">FirstName</g><g id="7">(</g><g id="8">10</g><g id="9">), </g><g id="10">Address</g><g id="11">(</g><g id="12">10</g><g id="13">), </g><g id="14">City</g><g id="15">(</g><g id="16">10</g><g id="17">) </g>As<g id="18"> </g><g id="19">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu213" xml:space="preserve">
<source xml:lang="en">This example shows how to access all items in a three dimensional array.</source>
<target xml:lang="zh">This example shows how to access all items in a three dimensional array.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu214" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Public<g id="2"> </g><g id="3">Data</g><g id="4">(</g><g id="5">3</g><g id="6">, </g><g id="7">5</g><g id="8">, </g><g id="9">10</g><g id="10">) </g>As<g id="11"> </g><g id="12">Int</g></source>
<target xml:lang="zh"><x id="1"/>Public<g id="2"> </g><g id="3">Data</g><g id="4">(</g><g id="5">3</g><g id="6">, </g><g id="7">5</g><g id="8">, </g><g id="9">10</g><g id="10">) </g>As<g id="11"> </g><g id="12">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu215" xml:space="preserve">
<source xml:lang="en"><x id="1"/>For<g id="2"> </g><g id="3">i</g><g id="4"> = </g><g id="5">0</g><g id="6"> </g>To<g id="7"> </g><g id="8">2</g></source>
<target xml:lang="zh"><x id="1"/>For<g id="2"> </g><g id="3">i</g><g id="4"> = </g><g id="5">0</g><g id="6"> </g>To<g id="7"> </g><g id="8">2</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu216" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g> <g id="2">j</g> = <g id="3">0</g> <g id="4">To</g> <g id="5">4</g></source>
<target xml:lang="zh"><g id="1">For</g> <g id="2">j</g> = <g id="3">0</g> <g id="4">To</g> <g id="5">4</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu217" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g> <g id="2">k</g> = <g id="3">0</g> <g id="4">To</g> <g id="5">9</g></source>
<target xml:lang="zh"><g id="1">For</g> <g id="2">k</g> = <g id="3">0</g> <g id="4">To</g> <g id="5">9</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu218" xml:space="preserve">
<source xml:lang="en"><g id="1">Data</g>(<g id="2">i</g>, <g id="3">j</g>, <g id="4">k</g>) = ...</source>
<target xml:lang="zh"><g id="1">Data</g>(<g id="2">i</g>, <g id="3">j</g>, <g id="4">k</g>) = ...</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu219" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu220" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu221" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Next</source>
<target xml:lang="zh"><x id="1"/>Next</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu222" xml:space="preserve">
<source xml:lang="en">A more versatile way to declare arrays is to use variables.</source>
<target xml:lang="zh">A more versatile way to declare arrays is to use variables.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu223" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g> <g id="2">NbPers</g> = 10 <g id="3">As</g> <g id="4">Int</g></source>
<target xml:lang="zh"><g id="1">Public</g> <g id="2">NbPers</g> = 10 <g id="3">As</g> <g id="4">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu224" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g> <g id="2">LastName</g>(<g id="3">NbPers</g>) <g id="4">As</g> <g id="5">String</g></source>
<target xml:lang="zh"><g id="1">Public</g> <g id="2">LastName</g>(<g id="3">NbPers</g>) <g id="4">As</g> <g id="5">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu225" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g> <g id="2">FirstName</g>(<g id="3">NbPers</g>) <g id="4">As</g> <g id="5">String</g></source>
<target xml:lang="zh"><g id="1">Public</g> <g id="2">FirstName</g>(<g id="3">NbPers</g>) <g id="4">As</g> <g id="5">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu226" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g> <g id="2">Address</g>(<g id="3">NbPers</g>) <g id="4">As</g> <g id="5">String</g></source>
<target xml:lang="zh"><g id="1">Public</g> <g id="2">Address</g>(<g id="3">NbPers</g>) <g id="4">As</g> <g id="5">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu227" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g> <g id="2">City</g>(<g id="3">NbPers</g>) <g id="4">As</g> <g id="5">String</g></source>
<target xml:lang="zh"><g id="1">Public</g> <g id="2">City</g>(<g id="3">NbPers</g>) <g id="4">As</g> <g id="5">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu228" xml:space="preserve">
<source xml:lang="en">We declare the variable <g id="1">Public</g><g id="2"> </g><g id="3">NbPers</g><g id="4"> = 10 </g><g id="5">As</g><g id="6"> </g><g id="7">Int</g><g id="8"> </g>and set its value to 10.</source>
<target xml:lang="zh">We declare the variable <g id="1">Public</g><g id="2"> </g><g id="3">NbPers</g><g id="4"> = 10 </g><g id="5">As</g><g id="6"> </g><g id="7">Int</g><g id="8"> </g>and set its value to 10.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu229" xml:space="preserve">
<source xml:lang="en">Then we declare the arrays with this variable instead of the number 10 as before.</source>
<target xml:lang="zh">Then we declare the arrays with this variable instead of the number 10 as before.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu230" xml:space="preserve">
<source xml:lang="en"><g id="1">The big advantage is if at some point we need to change the number of items, we change only ONE value</g>.  </source>
<target xml:lang="zh"><g id="1">The big advantage is if at some point we need to change the number of items, we change only ONE value</g>.  </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu231" xml:space="preserve">
<source xml:lang="en">For the Data array we could use the following code.</source>
<target xml:lang="zh">For the Data array we could use the following code.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu232" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g> NbX = 2 <g id="2">As</g> <g id="3">Int</g></source>
<target xml:lang="zh"><g id="1">Public</g> NbX = 2 <g id="2">As</g> <g id="3">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu233" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g> NbY = 5 <g id="2">As</g> <g id="3">Int</g></source>
<target xml:lang="zh"><g id="1">Public</g> NbY = 5 <g id="2">As</g> <g id="3">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu234" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g> NbZ = 10 <g id="2">As</g> <g id="3">Int</g></source>
<target xml:lang="zh"><g id="1">Public</g> NbZ = 10 <g id="2">As</g> <g id="3">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu235" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g> <g id="2">Data</g>(NbX, NbY, NbZ) <g id="3">As</g> <g id="4">Int</g></source>
<target xml:lang="zh"><g id="1">Public</g> <g id="2">Data</g>(NbX, NbY, NbZ) <g id="3">As</g> <g id="4">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu236" xml:space="preserve">
<source xml:lang="en">And the access routine.</source>
<target xml:lang="zh">And the access routine.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu237" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g> <g id="2">i</g> = <g id="3">0</g> <g id="4">To</g> NbX - <g id="5">1</g></source>
<target xml:lang="zh"><g id="1">For</g> <g id="2">i</g> = <g id="3">0</g> <g id="4">To</g> NbX - <g id="5">1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu238" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g> <g id="2">j</g> = <g id="3">0</g> <g id="4">To</g> NbY - <g id="5">1</g></source>
<target xml:lang="zh"><g id="1">For</g> <g id="2">j</g> = <g id="3">0</g> <g id="4">To</g> NbY - <g id="5">1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu239" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g> <g id="2">k</g> = <g id="3">0</g> <g id="4">To</g> NbZ - <g id="5">1</g></source>
<target xml:lang="zh"><g id="1">For</g> <g id="2">k</g> = <g id="3">0</g> <g id="4">To</g> NbZ - <g id="5">1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu240" xml:space="preserve">
<source xml:lang="en"><g id="1">Data</g>(<g id="2">i</g>, <g id="3">j</g>, <g id="4">k</g>) = ...</source>
<target xml:lang="zh"><g id="1">Data</g>(<g id="2">i</g>, <g id="3">j</g>, <g id="4">k</g>) = ...</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu241" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu242" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu243" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu244" xml:space="preserve">
<source xml:lang="en">Filling an array with the Array keyword :</source>
<target xml:lang="zh">Filling an array with the Array keyword :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu245" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g> Name() <g id="2">As</g> <g id="3">String</g></source>
<target xml:lang="zh"><g id="1">Public</g> Name() <g id="2">As</g> <g id="3">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu246" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Name = <g id="2">Array</g> <g id="3">As</g> <g id="4">String</g>(<g id="5">"Miller"</g>, <g id="6">"Smith"</g>, <g id="7">"Johnson"</g>, <g id="8">"<g id="9"><g id="10">Jordan</g></g>"</g>)</source>
<target xml:lang="zh"><x id="1"/>Name = <g id="2">Array</g> <g id="3">As</g> <g id="4">String</g>(<g id="5">"Miller"</g>, <g id="6">"Smith"</g>, <g id="7">"Johnson"</g>, <g id="8">"<g id="9"><g id="10">Jordan</g></g>"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu247" xml:space="preserve">
<source xml:lang="en">Constant variables  Const keyword</source>
<target xml:lang="zh">Constant variables  Const keyword</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu248" xml:space="preserve">
<source xml:lang="en"><g id="1">Const</g> variables are constant variables which cannot be changed anywhere in the code.</source>
<target xml:lang="zh"><g id="1">Const</g> variables are constant variables which cannot be changed anywhere in the code.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu249" xml:space="preserve">
<source xml:lang="en">For this, we use the <g id="1">Const</g> keyworsd after <g id="2">Private</g> or <g id="3">Public</g> like below,</source>
<target xml:lang="zh">For this, we use the <g id="1">Const</g> keyworsd after <g id="2">Private</g> or <g id="3">Public</g> like below,</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu250" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> </g>Const<g id="2"> Size </g>As<g id="3"> </g><g id="4">Int</g><g id="5"> = </g><g id="6">10</g></source>
<target xml:lang="zh">Private<g id="1"> </g>Const<g id="2"> Size </g>As<g id="3"> </g><g id="4">Int</g><g id="5"> = </g><g id="6">10</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu251" xml:space="preserve">
<source xml:lang="en">Public<g id="1"> </g>Const<g id="2"> ItemNumber </g>As<g id="3"> </g><g id="4">Int</g><g id="5"> = </g><g id="6">100</g></source>
<target xml:lang="zh">Public<g id="1"> </g>Const<g id="2"> ItemNumber </g>As<g id="3"> </g><g id="4">Int</g><g id="5"> = </g><g id="6">100</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu252" xml:space="preserve">
<source xml:lang="en">Array of views / nodes (objects)</source>
<target xml:lang="zh">Array of views / nodes (objects)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu253" xml:space="preserve">
<source xml:lang="en">Views / nodes or objects can also be in an Array. The following code shows an example:</source>
<target xml:lang="zh">Views / nodes or objects can also be in an Array. The following code shows an example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu254" xml:space="preserve">
<source xml:lang="en">In B4A and B4i user interface objects are called <g id="1">views</g> and called <g id="2">nodes</g> in B4J.</source>
<target xml:lang="zh">In B4A and B4i user interface objects are called <g id="1">views</g> and called <g id="2">nodes</g> in B4J.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu255" xml:space="preserve">
<source xml:lang="en">In the example below the Buttons are added to the parent view / node by code.</source>
<target xml:lang="zh">In the example below the Buttons are added to the parent view / node by code.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu256" xml:space="preserve">
<source xml:lang="en">B4A</source>
<target xml:lang="zh">B4A</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu257" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Globals</g></source>
<target xml:lang="zh">Sub <g id="1">Globals</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu258" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> <g id="2">Buttons</g>(6) <g id="3">As</g> <g id="4">Button</g></source>
<target xml:lang="zh"><g id="1">Private</g> <g id="2">Buttons</g>(6) <g id="3">As</g> <g id="4">Button</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu259" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu260" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Activity_Create</g><g id="2">(FirstTime </g>As<g id="3"> </g><g id="4">Boolean</g><g id="5">)</g></source>
<target xml:lang="zh">Sub <g id="1">Activity_Create</g><g id="2">(FirstTime </g>As<g id="3"> </g><g id="4">Boolean</g><g id="5">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu261" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> i <g id="2">As</g> <g id="3">Int</g></source>
<target xml:lang="zh"><g id="1">Private</g> i <g id="2">As</g> <g id="3">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu263" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g> i = <g id="2">0</g> <g id="3">To</g> 5</source>
<target xml:lang="zh"><g id="1">For</g> i = <g id="2">0</g> <g id="3">To</g> 5</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu264" xml:space="preserve">
<source xml:lang="en"><g id="1">Buttons</g>(i).Initialize(<g id="2">"Buttons"</g>)</source>
<target xml:lang="zh"><g id="1">Buttons</g>(i).Initialize(<g id="2">"Buttons"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu265" xml:space="preserve">
<source xml:lang="en"><g id="1">Activity</g>.AddView(<g id="2">Buttons</g>(i), <g id="3">10dip</g>, <g id="4">10dip</g> + i * <g id="5">60dip</g>, <g id="6">150dip</g>, <g id="7">50dip</g>)</source>
<target xml:lang="zh"><g id="1">Activity</g>.AddView(<g id="2">Buttons</g>(i), <g id="3">10dip</g>, <g id="4">10dip</g> + i * <g id="5">60dip</g>, <g id="6">150dip</g>, <g id="7">50dip</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu266" xml:space="preserve">
<source xml:lang="en"><g id="1">Buttons</g>(i).Tag = i + <g id="2">1</g></source>
<target xml:lang="zh"><g id="1">Buttons</g>(i).Tag = i + <g id="2">1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu267" xml:space="preserve">
<source xml:lang="en"><g id="1">Buttons</g>(i).Text = <g id="2">"Test "</g> &amp; (i + <g id="3">1</g>)</source>
<target xml:lang="zh"><g id="1">Buttons</g>(i).Text = <g id="2">"Test "</g> &amp; (i + <g id="3">1</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu268" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu269" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu270" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Buttons_Click</g></source>
<target xml:lang="zh">Sub <g id="1">Buttons_Click</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu271" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> btn <g id="2">As</g> <g id="3">Button</g></source>
<target xml:lang="zh"><g id="1">Private</g> btn <g id="2">As</g> <g id="3">Button</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu272" xml:space="preserve">
<source xml:lang="en"><x id="1"/>btn = <g id="2">Sender</g></source>
<target xml:lang="zh"><x id="1"/>btn = <g id="2">Sender</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu273" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g><g id="2">(</g><g id="3">"Button "</g><g id="4"> &amp; btn.Tag &amp; </g><g id="5">" clicked"</g><g id="6">)</g></source>
<target xml:lang="zh"><g id="1">Log</g><g id="2">(</g><g id="3">"Button "</g><g id="4"> &amp; btn.Tag &amp; </g><g id="5">" clicked"</g><g id="6">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu274" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu275" xml:space="preserve">
<source xml:lang="en">B4i</source>
<target xml:lang="zh">B4i</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu276" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">Process_Globals</g></g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">Process_Globals</g></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu277" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> Buttons(<g id="2">6</g>) <g id="3">As</g> <g id="4">Button</g></source>
<target xml:lang="zh"><g id="1">Private</g> Buttons(<g id="2">6</g>) <g id="3">As</g> <g id="4">Button</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu278" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu279" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> </g>Sub<g id="2"> <g id="3">Application_Start</g> (Nav </g>As<g id="4"> </g><g id="5">NavigationController</g><g id="6">)</g></source>
<target xml:lang="zh">Private<g id="1"> </g>Sub<g id="2"> <g id="3">Application_Start</g> (Nav </g>As<g id="4"> </g><g id="5">NavigationController</g><g id="6">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu281" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> i <g id="2">As</g> <g id="3">Int</g></source>
<target xml:lang="zh"><g id="1">Private</g> i <g id="2">As</g> <g id="3">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu282" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g> i = <g id="2">0</g> <g id="3">To</g> <g id="4">5</g></source>
<target xml:lang="zh"><g id="1">For</g> i = <g id="2">0</g> <g id="3">To</g> <g id="4">5</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu283" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Buttons(i).Initialize(<g id="2">"Buttons"</g>)</source>
<target xml:lang="zh"><x id="1"/>Buttons(i).Initialize(<g id="2">"Buttons"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu284" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Page1.RootPanel.AddView(Buttons(i), <g id="2">10dip</g>, <g id="3">10dip</g> + i * <g id="4">60dip</g>, <g id="5">150dip</g>, <g id="6">50dip</g>)</source>
<target xml:lang="zh"><x id="1"/>Page1.RootPanel.AddView(Buttons(i), <g id="2">10dip</g>, <g id="3">10dip</g> + i * <g id="4">60dip</g>, <g id="5">150dip</g>, <g id="6">50dip</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu285" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Buttons(i).Tag = i + <g id="2">1</g></source>
<target xml:lang="zh"><x id="1"/>Buttons(i).Tag = i + <g id="2">1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu286" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Buttons(i).Text = <g id="2">"Test "</g> &amp; (i + <g id="3">1</g>)</source>
<target xml:lang="zh"><x id="1"/>Buttons(i).Text = <g id="2">"Test "</g> &amp; (i + <g id="3">1</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu287" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu288" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu289" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Buttons_Click</g></source>
<target xml:lang="zh">Sub <g id="1">Buttons_Click</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu290" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> btn <g id="2">As</g> <g id="3">Button</g></source>
<target xml:lang="zh"><g id="1">Private</g> btn <g id="2">As</g> <g id="3">Button</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu291" xml:space="preserve">
<source xml:lang="en"><x id="1"/>btn = <g id="2">Sender</g></source>
<target xml:lang="zh"><x id="1"/>btn = <g id="2">Sender</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu292" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g><g id="2">(</g><g id="3">"Button "</g><g id="4"> &amp; btn.Tag &amp; </g><g id="5">" clicked"</g><g id="6">)</g></source>
<target xml:lang="zh"><g id="1">Log</g><g id="2">(</g><g id="3">"Button "</g><g id="4"> &amp; btn.Tag &amp; </g><g id="5">" clicked"</g><g id="6">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu293" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu294" xml:space="preserve">
<source xml:lang="en">B4J</source>
<target xml:lang="zh">B4J</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu295" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">Process_Globals</g></g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">Process_Globals</g></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu297" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> Buttons(<g id="2">6</g>) <g id="3">As</g> <g id="4">Button<x id="5"/></g></source>
<target xml:lang="zh"><g id="1">Private</g> Buttons(<g id="2">6</g>) <g id="3">As</g> <g id="4">Button<x id="5"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu298" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu299" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">AppStart</g> (Form1 </g>As<g id="3"> </g><g id="4">Form</g><g id="5">, Args() </g>As<g id="6"> </g><g id="7">String</g><g id="8">)</g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">AppStart</g> (Form1 </g>As<g id="3"> </g><g id="4">Form</g><g id="5">, Args() </g>As<g id="6"> </g><g id="7">String</g><g id="8">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu301" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> i <g id="2">As</g> <g id="3">Int</g></source>
<target xml:lang="zh"><g id="1">Private</g> i <g id="2">As</g> <g id="3">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu302" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g> i = <g id="2">0</g> <g id="3">To</g> <g id="4">5</g></source>
<target xml:lang="zh"><g id="1">For</g> i = <g id="2">0</g> <g id="3">To</g> <g id="4">5</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu303" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Buttons(i).Initialize(<g id="2">"Buttons"</g>)</source>
<target xml:lang="zh"><x id="1"/>Buttons(i).Initialize(<g id="2">"Buttons"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu304" xml:space="preserve">
<source xml:lang="en"><x id="1"/>MainForm.RootPane.AddNode(Buttons(i), <g id="2">10</g>, <g id="3">10</g> + i * <g id="4">60</g>, <g id="5">150</g>, <g id="6">50</g>)</source>
<target xml:lang="zh"><x id="1"/>MainForm.RootPane.AddNode(Buttons(i), <g id="2">10</g>, <g id="3">10</g> + i * <g id="4">60</g>, <g id="5">150</g>, <g id="6">50</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu305" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Buttons(i).Tag = i + <g id="2">1</g></source>
<target xml:lang="zh"><x id="1"/>Buttons(i).Tag = i + <g id="2">1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu306" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Buttons(i).Text = <g id="2">"Test "</g> &amp; (i + <g id="3">1</g>)</source>
<target xml:lang="zh"><x id="1"/>Buttons(i).Text = <g id="2">"Test "</g> &amp; (i + <g id="3">1</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu307" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu308" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu309" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">Buttons_MouseClicked</g> (EventData </g>As<g id="3"> </g><g id="4">MouseEvent</g><g id="5">)</g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">Buttons_MouseClicked</g> (EventData </g>As<g id="3"> </g><g id="4">MouseEvent</g><g id="5">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu310" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> btn <g id="2">As</g> <g id="3">Button</g></source>
<target xml:lang="zh"><g id="1">Private</g> btn <g id="2">As</g> <g id="3">Button</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu311" xml:space="preserve">
<source xml:lang="en"><x id="1"/>btn = <g id="2">Sender<x id="3"/></g></source>
<target xml:lang="zh"><x id="1"/>btn = <g id="2">Sender<x id="3"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu312" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g>(<g id="2">"Button "</g> &amp; btn.Tag &amp; <g id="3">" clicked"</g>)<x id="4"/></source>
<target xml:lang="zh"><g id="1">Log</g>(<g id="2">"Button "</g> &amp; btn.Tag &amp; <g id="3">" clicked"</g>)<x id="4"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu313" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu314" xml:space="preserve">
<source xml:lang="en">The Buttons could also have been added in a layout file, <g id="1">in that case they must neither be initialized, nor added to the parent view / node</g> and the Text and Tag properties should also be set in the Designer.</source>
<target xml:lang="zh">The Buttons could also have been added in a layout file, <g id="1">in that case they must neither be initialized, nor added to the parent view / node</g> and the Text and Tag properties should also be set in the Designer.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu315" xml:space="preserve">
<source xml:lang="en">In that case the code would look like this:</source>
<target xml:lang="zh">In that case the code would look like this:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu316" xml:space="preserve">
<source xml:lang="en">B4A</source>
<target xml:lang="zh">B4A</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu317" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Globals</g></source>
<target xml:lang="zh">Sub <g id="1">Globals</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu318" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> <g id="2">b1</g>, <g id="3">b2</g>, <g id="4">b3</g>, <g id="5">b4</g>, <g id="6">b5</g>, <g id="7">b6</g>, <g id="8">b7</g> <g id="9">As</g> <g id="10">Button</g></source>
<target xml:lang="zh"><g id="1">Private</g> <g id="2">b1</g>, <g id="3">b2</g>, <g id="4">b3</g>, <g id="5">b4</g>, <g id="6">b5</g>, <g id="7">b6</g>, <g id="8">b7</g> <g id="9">As</g> <g id="10">Button</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu319" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> <g id="2">Buttons</g>() <g id="3">As</g> <g id="4">Button</g></source>
<target xml:lang="zh"><g id="1">Private</g> <g id="2">Buttons</g>() <g id="3">As</g> <g id="4">Button</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu320" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu321" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Activity_Create(FirstTime </g>As<g id="2"> </g><g id="3">Boolean</g><g id="4">)</g></source>
<target xml:lang="zh">Sub <g id="1">Activity_Create(FirstTime </g>As<g id="2"> </g><g id="3">Boolean</g><g id="4">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu323" xml:space="preserve">
<source xml:lang="en"><g id="1">Buttons</g> = <g id="2">Array</g> <g id="3">As</g> <g id="4">Button</g>(<g id="5">b1</g>, <g id="6">b2</g>, <g id="7">b3</g>, <g id="8">b4</g>, <g id="9">b5</g>, <g id="10">b6</g>, <g id="11">b7</g>)</source>
<target xml:lang="zh"><g id="1">Buttons</g> = <g id="2">Array</g> <g id="3">As</g> <g id="4">Button</g>(<g id="5">b1</g>, <g id="6">b2</g>, <g id="7">b3</g>, <g id="8">b4</g>, <g id="9">b5</g>, <g id="10">b6</g>, <g id="11">b7</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu324" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu325" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Buttons_Click</g></source>
<target xml:lang="zh">Sub <g id="1">Buttons_Click</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu326" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> btn <g id="2">As</g> <g id="3">Button<x id="4"/></g></source>
<target xml:lang="zh"><g id="1">Private</g> btn <g id="2">As</g> <g id="3">Button<x id="4"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu327" xml:space="preserve">
<source xml:lang="en"><x id="1"/>btn = <g id="2">Sender</g></source>
<target xml:lang="zh"><x id="1"/>btn = <g id="2">Sender</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu328" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g><g id="2">(</g><g id="3">"Button "</g><g id="4"> &amp; btn.Tag &amp; </g><g id="5">" clicked"</g><g id="6">)</g></source>
<target xml:lang="zh"><g id="1">Log</g><g id="2">(</g><g id="3">"Button "</g><g id="4"> &amp; btn.Tag &amp; </g><g id="5">" clicked"</g><g id="6">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu329" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu330" xml:space="preserve">
<source xml:lang="en">B4i</source>
<target xml:lang="zh">B4i</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu331" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">Process_Globals</g></g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">Process_Globals</g></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu332" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Private<g id="2"> </g><g id="3">b1</g><g id="4">, </g><g id="5">b2</g><g id="6">, </g><g id="7">b3</g><g id="8">, </g><g id="9">b4</g><g id="10">, </g><g id="11">b5</g><g id="12">, </g><g id="13">b6</g><g id="14">, </g><g id="15">b7</g><g id="16"> </g>As<g id="17"> </g><g id="18">Button</g></source>
<target xml:lang="zh"><x id="1"/>Private<g id="2"> </g><g id="3">b1</g><g id="4">, </g><g id="5">b2</g><g id="6">, </g><g id="7">b3</g><g id="8">, </g><g id="9">b4</g><g id="10">, </g><g id="11">b5</g><g id="12">, </g><g id="13">b6</g><g id="14">, </g><g id="15">b7</g><g id="16"> </g>As<g id="17"> </g><g id="18">Button</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu333" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> Buttons(<g id="2">6</g>) <g id="3">As</g> <g id="4">Button</g></source>
<target xml:lang="zh"><g id="1">Private</g> Buttons(<g id="2">6</g>) <g id="3">As</g> <g id="4">Button</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu334" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu335" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> </g>Sub<g id="2"> <g id="3">Application_Start</g> (Nav </g>As<g id="4"> </g><g id="5">NavigationController</g><g id="6">)</g></source>
<target xml:lang="zh">Private<g id="1"> </g>Sub<g id="2"> <g id="3">Application_Start</g> (Nav </g>As<g id="4"> </g><g id="5">NavigationController</g><g id="6">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu337" xml:space="preserve">
<source xml:lang="en"><g id="1">Buttons</g> = <g id="2">Array</g> <g id="3">As</g> <g id="4">Button</g>(<g id="5">b1</g>, <g id="6">b2</g>, <g id="7">b3</g>, <g id="8">b4</g>, <g id="9">b5</g>, <g id="10">b6</g>, <g id="11">b7</g>)</source>
<target xml:lang="zh"><g id="1">Buttons</g> = <g id="2">Array</g> <g id="3">As</g> <g id="4">Button</g>(<g id="5">b1</g>, <g id="6">b2</g>, <g id="7">b3</g>, <g id="8">b4</g>, <g id="9">b5</g>, <g id="10">b6</g>, <g id="11">b7</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu338" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu339" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Buttons_Click</g></source>
<target xml:lang="zh">Sub <g id="1">Buttons_Click</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu340" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> btn <g id="2">As</g> <g id="3">Button</g></source>
<target xml:lang="zh"><g id="1">Private</g> btn <g id="2">As</g> <g id="3">Button</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu341" xml:space="preserve">
<source xml:lang="en"><x id="1"/>btn = <g id="2">Sender</g></source>
<target xml:lang="zh"><x id="1"/>btn = <g id="2">Sender</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu342" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g><g id="2">(</g><g id="3">"Button "</g><g id="4"> &amp; btn.Tag &amp; </g><g id="5">" clicked"</g><g id="6">)</g></source>
<target xml:lang="zh"><g id="1">Log</g><g id="2">(</g><g id="3">"Button "</g><g id="4"> &amp; btn.Tag &amp; </g><g id="5">" clicked"</g><g id="6">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu343" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu344" xml:space="preserve">
<source xml:lang="en">B4J</source>
<target xml:lang="zh">B4J</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu345" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">Process_Globals</g></g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">Process_Globals</g></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu346" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g><g id="2"> </g><g id="3">b1</g><g id="4">, </g><g id="5">b2</g><g id="6">, </g><g id="7">b3</g><g id="8">, </g><g id="9">b4</g><g id="10">, </g><g id="11">b5</g><g id="12">, </g><g id="13">b6</g><g id="14">, </g><g id="15">b7</g><g id="16"> </g><g id="17">As</g><g id="18"> </g><g id="19">Button<x id="20"/></g></source>
<target xml:lang="zh"><g id="1">Private</g><g id="2"> </g><g id="3">b1</g><g id="4">, </g><g id="5">b2</g><g id="6">, </g><g id="7">b3</g><g id="8">, </g><g id="9">b4</g><g id="10">, </g><g id="11">b5</g><g id="12">, </g><g id="13">b6</g><g id="14">, </g><g id="15">b7</g><g id="16"> </g><g id="17">As</g><g id="18"> </g><g id="19">Button<x id="20"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu347" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> Buttons(<g id="2">6</g>) <g id="3">As</g> <g id="4">Button<x id="5"/></g></source>
<target xml:lang="zh"><g id="1">Private</g> Buttons(<g id="2">6</g>) <g id="3">As</g> <g id="4">Button<x id="5"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu348" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu349" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">AppStart</g> (Form1 </g>As<g id="3"> </g><g id="4">Form</g><g id="5">, Args() </g>As<g id="6"> </g><g id="7">String</g><g id="8">)</g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">AppStart</g> (Form1 </g>As<g id="3"> </g><g id="4">Form</g><g id="5">, Args() </g>As<g id="6"> </g><g id="7">String</g><g id="8">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu351" xml:space="preserve">
<source xml:lang="en"><g id="1">Buttons</g> = <g id="2">Array</g> <g id="3">As</g> <g id="4">Button</g>(<g id="5">b1</g>, <g id="6">b2</g>, <g id="7">b3</g>, <g id="8">b4</g>, <g id="9">b5</g>, <g id="10">b6</g>, <g id="11">b7</g>)</source>
<target xml:lang="zh"><g id="1">Buttons</g> = <g id="2">Array</g> <g id="3">As</g> <g id="4">Button</g>(<g id="5">b1</g>, <g id="6">b2</g>, <g id="7">b3</g>, <g id="8">b4</g>, <g id="9">b5</g>, <g id="10">b6</g>, <g id="11">b7</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu352" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu353" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">Buttons_MouseClicked</g> (EventData </g>As<g id="3"> </g><g id="4">MouseEvent</g><g id="5">)</g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">Buttons_MouseClicked</g> (EventData </g>As<g id="3"> </g><g id="4">MouseEvent</g><g id="5">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu354" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> btn <g id="2">As</g> <g id="3">Button</g></source>
<target xml:lang="zh"><g id="1">Private</g> btn <g id="2">As</g> <g id="3">Button</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu355" xml:space="preserve">
<source xml:lang="en"><x id="1"/>btn = <g id="2">Sender<x id="3"/></g></source>
<target xml:lang="zh"><x id="1"/>btn = <g id="2">Sender<x id="3"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu356" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g>(<g id="2">"Button "</g> &amp; btn.Tag &amp; <g id="3">" clicked"</g>)<x id="4"/></source>
<target xml:lang="zh"><g id="1">Log</g>(<g id="2">"Button "</g> &amp; btn.Tag &amp; <g id="3">" clicked"</g>)<x id="4"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu357" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu358" xml:space="preserve">
<source xml:lang="en">Type variables   B4A, B4i and B4J only</source>
<target xml:lang="zh">Type variables   B4A, B4i and B4J only</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu359" xml:space="preserve">
<source xml:lang="en">A Type cannot be private. Once declared it is available everywhere (similar to Class modules).</source>
<target xml:lang="zh">A Type cannot be private. Once declared it is available everywhere (similar to Class modules).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu360" xml:space="preserve">
<source xml:lang="en">The best place to declare them is in the Process_Globals routine in the Main module.</source>
<target xml:lang="zh">The best place to declare them is in the Process_Globals routine in the Main module.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu361" xml:space="preserve">
<source xml:lang="en">Let us reuse the example with the data of a person.</source>
<target xml:lang="zh">Let us reuse the example with the data of a person.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu362" xml:space="preserve">
<source xml:lang="en">Instead of declaring each parameter separately, we can define a personal type variable with the Type keyword:</source>
<target xml:lang="zh">Instead of declaring each parameter separately, we can define a personal type variable with the Type keyword:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu363" xml:space="preserve">
<source xml:lang="en">Public<g id="1"> </g><g id="2">NbUsers</g><g id="3"> = 10 </g>As<g id="4"> </g><g id="5">Int</g></source>
<target xml:lang="zh">Public<g id="1"> </g><g id="2">NbUsers</g><g id="3"> = 10 </g>As<g id="4"> </g><g id="5">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu364" xml:space="preserve">
<source xml:lang="en">Type<g id="1"> </g><g id="2">Person</g><g id="3">(LastName </g>As<g id="4"> </g><g id="5">String</g><g id="6">, FirstName </g>As<g id="7"> </g><g id="8">String</g><g id="9">. Address </g>As<g id="10"> </g><g id="11">String</g><g id="12">, City </g>As<g id="13"> </g><g id="14">String</g><g id="15">)</g></source>
<target xml:lang="zh">Type<g id="1"> </g><g id="2">Person</g><g id="3">(LastName </g>As<g id="4"> </g><g id="5">String</g><g id="6">, FirstName </g>As<g id="7"> </g><g id="8">String</g><g id="9">. Address </g>As<g id="10"> </g><g id="11">String</g><g id="12">, City </g>As<g id="13"> </g><g id="14">String</g><g id="15">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu365" xml:space="preserve">
<source xml:lang="en">Public<g id="1"> </g><g id="2">User</g><g id="3">(</g><g id="4">NbUsers</g><g id="5">) </g>As<g id="6"> </g><g id="7">Person</g></source>
<target xml:lang="zh">Public<g id="1"> </g><g id="2">User</g><g id="3">(</g><g id="4">NbUsers</g><g id="5">) </g>As<g id="6"> </g><g id="7">Person</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu366" xml:space="preserve">
<source xml:lang="en">Public<g id="1"> </g><g id="2">CurrentUser</g><g id="3"> </g>As<g id="4"> </g><g id="5">Person</g></source>
<target xml:lang="zh">Public<g id="1"> </g><g id="2">CurrentUser</g><g id="3"> </g>As<g id="4"> </g><g id="5">Person</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu367" xml:space="preserve">
<source xml:lang="en">The new personal type is <g id="1">Person</g> , then we declare either single variables or arrays of this personal type.</source>
<target xml:lang="zh">The new personal type is <g id="1">Person</g> , then we declare either single variables or arrays of this personal type.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu368" xml:space="preserve">
<source xml:lang="en">To access a particular item use following code.</source>
<target xml:lang="zh">To access a particular item use following code.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu369" xml:space="preserve">
<source xml:lang="en">CurrentUser.FirstName</source>
<target xml:lang="zh">CurrentUser.FirstName</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu370" xml:space="preserve">
<source xml:lang="en">CurrentUser.LastName</source>
<target xml:lang="zh">CurrentUser.LastName</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu372" xml:space="preserve">
<source xml:lang="en">User(<g id="1">1</g>).LastName</source>
<target xml:lang="zh">User(<g id="1">1</g>).LastName</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu373" xml:space="preserve">
<source xml:lang="en">User(<g id="1">1</g>).FirstName</source>
<target xml:lang="zh">User(<g id="1">1</g>).FirstName</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu374" xml:space="preserve">
<source xml:lang="en">The variable name, followed by a dot and the desired parameter.</source>
<target xml:lang="zh">The variable name, followed by a dot and the desired parameter.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu375" xml:space="preserve">
<source xml:lang="en">If the variable is an array then the name is followed by the desired index between brackets.</source>
<target xml:lang="zh">If the variable is an array then the name is followed by the desired index between brackets.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu376" xml:space="preserve">
<source xml:lang="en"> </source>
<target xml:lang="zh"> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu377" xml:space="preserve">
<source xml:lang="en">It is possible to assign a typed variable to another variable of the same type, as shown below.</source>
<target xml:lang="zh">It is possible to assign a typed variable to another variable of the same type, as shown below.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu378" xml:space="preserve">
<source xml:lang="en">CurrentUser<g id="1"> = </g>User<g id="2">(</g><g id="3">1</g><g id="4">)</g></source>
<target xml:lang="zh">CurrentUser<g id="1"> = </g>User<g id="2">(</g><g id="3">1</g><g id="4">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu379" xml:space="preserve">
<source xml:lang="en"> <x id="1"/>Casting</source>
<target xml:lang="zh"> <x id="1"/>Casting</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu380" xml:space="preserve">
<source xml:lang="en">B4X casts types automatically as needed. It also converts numbers to strings and vice versa automatically.</source>
<target xml:lang="zh">B4X casts types automatically as needed. It also converts numbers to strings and vice versa automatically.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu381" xml:space="preserve">
<source xml:lang="en">In many cases you need to explicitly cast an Object to a specific type.</source>
<target xml:lang="zh">In many cases you need to explicitly cast an Object to a specific type.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu382" xml:space="preserve">
<source xml:lang="en">This can be done by assigning the Object to a variable of the required type.</source>
<target xml:lang="zh">This can be done by assigning the Object to a variable of the required type.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu383" xml:space="preserve">
<source xml:lang="en">For example, Sender keyword references an Object which is the object that raised the event.</source>
<target xml:lang="zh">For example, Sender keyword references an Object which is the object that raised the event.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu384" xml:space="preserve">
<source xml:lang="en">The following code changes the color of the pressed button. </source>
<target xml:lang="zh">The following code changes the color of the pressed button. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu385" xml:space="preserve">
<source xml:lang="en">Note that there are multiple buttons that share the same event sub.</source>
<target xml:lang="zh">Note that there are multiple buttons that share the same event sub.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu386" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Globals</g></source>
<target xml:lang="zh">Sub <g id="1">Globals</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu387" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g>  <g id="2">Btn1</g><g id="3">, </g><g id="4">Btn2</g><g id="5">, </g><g id="6">Btn3</g><g id="7"> </g><g id="8">As</g><g id="9"> </g><g id="10">Button</g></source>
<target xml:lang="zh"><g id="1">Private</g>  <g id="2">Btn1</g><g id="3">, </g><g id="4">Btn2</g><g id="5">, </g><g id="6">Btn3</g><g id="7"> </g><g id="8">As</g><g id="9"> </g><g id="10">Button</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu388" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu389" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Activity_Create</g><g id="2">(FirstTime </g>As<g id="3"> </g><g id="4">Boolean</g><g id="5">)</g></source>
<target xml:lang="zh">Sub <g id="1">Activity_Create</g><g id="2">(FirstTime </g>As<g id="3"> </g><g id="4">Boolean</g><g id="5">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu390" xml:space="preserve">
<source xml:lang="en"><g id="1">Btn1</g>.Initialize(<g id="2">"Btn"</g>)</source>
<target xml:lang="zh"><g id="1">Btn1</g>.Initialize(<g id="2">"Btn"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu391" xml:space="preserve">
<source xml:lang="en"><g id="1">Btn2</g>.Initialize(<g id="2">"Btn"</g>)</source>
<target xml:lang="zh"><g id="1">Btn2</g>.Initialize(<g id="2">"Btn"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu392" xml:space="preserve">
<source xml:lang="en"><g id="1">Btn3</g>.Initialize(<g id="2">"Btn"</g>)</source>
<target xml:lang="zh"><g id="1">Btn3</g>.Initialize(<g id="2">"Btn"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu393" xml:space="preserve">
<source xml:lang="en"><g id="1">Activity</g>.AddView(<g id="2">Btn1</g>, <g id="3">10dip</g>, <g id="4">10dip</g>, <g id="5">200dip</g>, <g id="6">50dip</g>)</source>
<target xml:lang="zh"><g id="1">Activity</g>.AddView(<g id="2">Btn1</g>, <g id="3">10dip</g>, <g id="4">10dip</g>, <g id="5">200dip</g>, <g id="6">50dip</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu394" xml:space="preserve">
<source xml:lang="en"><g id="1">Activity</g>.AddView(<g id="2">Btn2</g>, <g id="3">10dip</g>, <g id="4">70dip</g>, <g id="5">200dip</g>, <g id="6">50dip</g>)</source>
<target xml:lang="zh"><g id="1">Activity</g>.AddView(<g id="2">Btn2</g>, <g id="3">10dip</g>, <g id="4">70dip</g>, <g id="5">200dip</g>, <g id="6">50dip</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu395" xml:space="preserve">
<source xml:lang="en"><g id="1">Activity</g>.AddView(<g id="2">Btn3</g>, <g id="3">10dip</g>, <g id="4">130dip</g>, <g id="5">200dip</g>, <g id="6">50dip</g>)</source>
<target xml:lang="zh"><g id="1">Activity</g>.AddView(<g id="2">Btn3</g>, <g id="3">10dip</g>, <g id="4">130dip</g>, <g id="5">200dip</g>, <g id="6">50dip</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu396" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu397" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Btn_Click</g></source>
<target xml:lang="zh">Sub <g id="1">Btn_Click</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu398" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g>  <g id="2">btn </g><g id="3">As</g><g id="4"> </g><g id="5">Button</g></source>
<target xml:lang="zh"><g id="1">Private</g>  <g id="2">btn </g><g id="3">As</g><g id="4"> </g><g id="5">Button</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu399" xml:space="preserve">
<source xml:lang="en"><x id="1"/>btn = <g id="2">Sender<x id="3"/></g><g id="4">' Cast the Object to Button</g></source>
<target xml:lang="zh"><x id="1"/>btn = <g id="2">Sender<x id="3"/></g><g id="4">' Cast the Object to Button</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu400" xml:space="preserve">
<source xml:lang="en"><x id="1"/>btn.Color = <g id="2">Colors</g>.RGB(<g id="3">Rnd</g>(<g id="4">0</g>, <g id="5">255</g>), <g id="6">Rnd</g>(<g id="7">0</g>, <g id="8">255</g>), <g id="9">Rnd</g>(<g id="10">0</g>, <g id="11">255</g>))</source>
<target xml:lang="zh"><x id="1"/>btn.Color = <g id="2">Colors</g>.RGB(<g id="3">Rnd</g>(<g id="4">0</g>, <g id="5">255</g>), <g id="6">Rnd</g>(<g id="7">0</g>, <g id="8">255</g>), <g id="9">Rnd</g>(<g id="10">0</g>, <g id="11">255</g>))</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu401" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu402" xml:space="preserve">
<source xml:lang="en">The above code could also be written more elegantly:</source>
<target xml:lang="zh">The above code could also be written more elegantly:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu403" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Globals</g></source>
<target xml:lang="zh">Sub <g id="1">Globals</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu404" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu405" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Activity_Create</g><g id="2">(FirstTime </g>As<g id="3"> </g><g id="4">Boolean</g><g id="5">)</g></source>
<target xml:lang="zh">Sub <g id="1">Activity_Create</g><g id="2">(FirstTime </g>As<g id="3"> </g><g id="4">Boolean</g><g id="5">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu406" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g>  <g id="2">i </g><g id="3">As</g><g id="4"> </g><g id="5">Int</g></source>
<target xml:lang="zh"><g id="1">Private</g>  <g id="2">i </g><g id="3">As</g><g id="4"> </g><g id="5">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu407" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g> i = <g id="2">0</g> <g id="3">To</g> <g id="4">9<x id="5"/></g><g id="6">' create 10 Buttons</g></source>
<target xml:lang="zh"><g id="1">For</g> i = <g id="2">0</g> <g id="3">To</g> <g id="4">9<x id="5"/></g><g id="6">' create 10 Buttons</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu408" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g>  <g id="2">Btn </g><g id="3">As</g><g id="4"> </g><g id="5">Button</g></source>
<target xml:lang="zh"><g id="1">Private</g>  <g id="2">Btn </g><g id="3">As</g><g id="4"> </g><g id="5">Button</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu409" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Btn.Initialize(<g id="2">"Btn"</g>)</source>
<target xml:lang="zh"><x id="1"/>Btn.Initialize(<g id="2">"Btn"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu410" xml:space="preserve">
<source xml:lang="en"><g id="1">Activity</g>.AddView(Btn, <g id="2">10dip</g>, <g id="3">10dip</g> + <g id="4">60dip</g> * i, <g id="5">200dip</g>, <g id="6">50dip</g>)</source>
<target xml:lang="zh"><g id="1">Activity</g>.AddView(Btn, <g id="2">10dip</g>, <g id="3">10dip</g> + <g id="4">60dip</g> * i, <g id="5">200dip</g>, <g id="6">50dip</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu411" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu412" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu413" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Btn_Click</g></source>
<target xml:lang="zh">Sub <g id="1">Btn_Click</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu414" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g>  <g id="2">btn </g><g id="3">As</g><g id="4"> </g><g id="5">Button</g></source>
<target xml:lang="zh"><g id="1">Private</g>  <g id="2">btn </g><g id="3">As</g><g id="4"> </g><g id="5">Button</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu415" xml:space="preserve">
<source xml:lang="en"><x id="1"/>btn = <g id="2">Sender<x id="3"/></g><g id="4">' Cast the Object to Button</g></source>
<target xml:lang="zh"><x id="1"/>btn = <g id="2">Sender<x id="3"/></g><g id="4">' Cast the Object to Button</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu416" xml:space="preserve">
<source xml:lang="en"><x id="1"/>btn.Color = <g id="2">Colors</g>.RGB(<g id="3">Rnd</g>(<g id="4">0</g>, <g id="5">255</g>), <g id="6">Rnd</g>(<g id="7">0</g>, <g id="8">255</g>), <g id="9">Rnd</g>(<g id="10">0</g>, <g id="11">255</g>))</source>
<target xml:lang="zh"><x id="1"/>btn.Color = <g id="2">Colors</g>.RGB(<g id="3">Rnd</g>(<g id="4">0</g>, <g id="5">255</g>), <g id="6">Rnd</g>(<g id="7">0</g>, <g id="8">255</g>), <g id="9">Rnd</g>(<g id="10">0</g>, <g id="11">255</g>))</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu417" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu418" xml:space="preserve">
<source xml:lang="en"> <x id="1"/>Scope</source>
<target xml:lang="zh"> <x id="1"/>Scope</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu419" xml:space="preserve">
<source xml:lang="en">Process variables<x id="1"/> </source>
<target xml:lang="zh">Process variables<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu420" xml:space="preserve">
<source xml:lang="en">These variables live as long as the process lives.</source>
<target xml:lang="zh">These variables live as long as the process lives.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu421" xml:space="preserve">
<source xml:lang="en">You should declare these variables inside Sub Process_Globals.</source>
<target xml:lang="zh">You should declare these variables inside Sub Process_Globals.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu422" xml:space="preserve">
<source xml:lang="en">This sub is called once when the process starts (this is true for all modules, not just the main module).</source>
<target xml:lang="zh">This sub is called once when the process starts (this is true for all modules, not just the main module).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu423" xml:space="preserve">
<source xml:lang="en">These variables are the only "public" variables. Which means that they can be accessed from other modules as well.</source>
<target xml:lang="zh">These variables are the only "public" variables. Which means that they can be accessed from other modules as well.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu424" xml:space="preserve">
<source xml:lang="en">However, in B4A, not all types of objects can be declared as process variables.</source>
<target xml:lang="zh">However, in B4A, not all types of objects can be declared as process variables.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu425" xml:space="preserve">
<source xml:lang="en">For example, views / nodes cannot be declared as process variables.</source>
<target xml:lang="zh">For example, views / nodes cannot be declared as process variables.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu426" xml:space="preserve">
<source xml:lang="en">The reason is that we do not want to hold a reference to objects that should be destroyed together with the activity.</source>
<target xml:lang="zh">The reason is that we do not want to hold a reference to objects that should be destroyed together with the activity.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu427" xml:space="preserve">
<source xml:lang="en">In other words, once the activity is being destroyed, all of the views which are contained in the activity are being destroyed as well.</source>
<target xml:lang="zh">In other words, once the activity is being destroyed, all of the views which are contained in the activity are being destroyed as well.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu428" xml:space="preserve">
<source xml:lang="en">If we hold a reference to a view, the garbage collector would not be able to free the resource and we will have a memory leak. The compiler enforces this requirement.</source>
<target xml:lang="zh">If we hold a reference to a view, the garbage collector would not be able to free the resource and we will have a memory leak. The compiler enforces this requirement.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu429" xml:space="preserve">
<source xml:lang="en">To access process global variables in other modules than the module where they were declared their names must have the module name they were declared as a prefix.</source>
<target xml:lang="zh">To access process global variables in other modules than the module where they were declared their names must have the module name they were declared as a prefix.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu430" xml:space="preserve">
<source xml:lang="en">Example:</source>
<target xml:lang="zh">Example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu431" xml:space="preserve">
<source xml:lang="en">Variable defined in a module with the name : <g id="1">MyModule</g></source>
<target xml:lang="zh">Variable defined in a module with the name : <g id="1">MyModule</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu432" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Process_Globals</g></source>
<target xml:lang="zh">Sub <g id="1">Process_Globals</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu433" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g> <g id="2">MyVar</g> <g id="3">As</g> <g id="4">String</g></source>
<target xml:lang="zh"><g id="1">Public</g> <g id="2">MyVar</g> <g id="3">As</g> <g id="4">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu434" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu435" xml:space="preserve">
<source xml:lang="en">Accessing the variable in <g id="1">MyModule</g> module:</source>
<target xml:lang="zh">Accessing the variable in <g id="1">MyModule</g> module:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu436" xml:space="preserve">
<source xml:lang="en"><g id="1">MyVar</g><g id="2"> = </g><g id="3">"Text"</g></source>
<target xml:lang="zh"><g id="1">MyVar</g><g id="2"> = </g><g id="3">"Text"</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu437" xml:space="preserve">
<source xml:lang="en">Accessing the variable in any other module:</source>
<target xml:lang="zh">Accessing the variable in any other module:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu438" xml:space="preserve">
<source xml:lang="en"><g id="1">MyModule</g><g id="2">.MyVar = </g><g id="3">"Text"</g></source>
<target xml:lang="zh"><g id="1">MyModule</g><g id="2">.MyVar = </g><g id="3">"Text"</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu439" xml:space="preserve">
<source xml:lang="en">Variables can be declared with:</source>
<target xml:lang="zh">Variables can be declared with:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu440" xml:space="preserve">
<source xml:lang="en">Dim<g id="1"> </g><g id="2">MyVar</g><g id="3"> </g>As<g id="4"> </g><g id="5">String</g></source>
<target xml:lang="zh">Dim<g id="1"> </g><g id="2">MyVar</g><g id="3"> </g>As<g id="4"> </g><g id="5">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu441" xml:space="preserve">
<source xml:lang="en">In this case the variable is public same as Public. </source>
<target xml:lang="zh">In this case the variable is public same as Public. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu442" xml:space="preserve">
<source xml:lang="en">It is good practice to declare the variables like this:</source>
<target xml:lang="zh">It is good practice to declare the variables like this:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu443" xml:space="preserve">
<source xml:lang="en">Public<g id="1"> </g><g id="2">MyVar</g><g id="3"> </g>As<g id="4"> </g><g id="5">String</g></source>
<target xml:lang="zh">Public<g id="1"> </g><g id="2">MyVar</g><g id="3"> </g>As<g id="4"> </g><g id="5">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu444" xml:space="preserve">
<source xml:lang="en">This variable is public.</source>
<target xml:lang="zh">This variable is public.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu445" xml:space="preserve">
<source xml:lang="en">It is possible to declare private variables in Sub Process_Globals like this:</source>
<target xml:lang="zh">It is possible to declare private variables in Sub Process_Globals like this:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu446" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> </g><g id="2">MyVar</g><g id="3"> </g>As<g id="4"> </g><g id="5">String</g></source>
<target xml:lang="zh">Private<g id="1"> </g><g id="2">MyVar</g><g id="3"> </g>As<g id="4"> </g><g id="5">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu447" xml:space="preserve">
<source xml:lang="en">The variable is private to the activity or the module where it is declared.</source>
<target xml:lang="zh">The variable is private to the activity or the module where it is declared.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu448" xml:space="preserve">
<source xml:lang="en">For Activities it is better to declare them in Sub Globals.</source>
<target xml:lang="zh">For Activities it is better to declare them in Sub Globals.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu449" xml:space="preserve">
<source xml:lang="en">For variables declared in Class modules in Sub Class_Globals the same rules as above are valid.</source>
<target xml:lang="zh">For variables declared in Class modules in Sub Class_Globals the same rules as above are valid.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu450" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g> <g id="2">MyVarPublic</g> <g id="3">As</g> <g id="4">String<x id="5"/></g><g id="6">' public</g></source>
<target xml:lang="zh"><g id="1">Public</g> <g id="2">MyVarPublic</g> <g id="3">As</g> <g id="4">String<x id="5"/></g><g id="6">' public</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu451" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> <g id="2">MyVarPublic</g> <g id="3">As</g> <g id="4">String<x id="5"/></g><g id="6">' private</g></source>
<target xml:lang="zh"><g id="1">Private</g> <g id="2">MyVarPublic</g> <g id="3">As</g> <g id="4">String<x id="5"/></g><g id="6">' private</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu452" xml:space="preserve">
<source xml:lang="en"><g id="1">Dim</g> <g id="2">MyVar</g> <g id="3">As</g> <g id="4">String<x id="5"/></g><g id="6">' public like Public</g></source>
<target xml:lang="zh"><g id="1">Dim</g> <g id="2">MyVar</g> <g id="3">As</g> <g id="4">String<x id="5"/></g><g id="6">' public like Public</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu453" xml:space="preserve">
<source xml:lang="en">Using Dim in Sub Class_Globals is not recommended ! </source>
<target xml:lang="zh">Using Dim in Sub Class_Globals is not recommended ! </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu454" xml:space="preserve">
<source xml:lang="en">Activity variables  B4A only</source>
<target xml:lang="zh">Activity variables  B4A only</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu455" xml:space="preserve">
<source xml:lang="en">These variables are contained by the activity.</source>
<target xml:lang="zh">These variables are contained by the activity.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu456" xml:space="preserve">
<source xml:lang="en">You should declare these variables inside Sub Globals.</source>
<target xml:lang="zh">You should declare these variables inside Sub Globals.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu457" xml:space="preserve">
<source xml:lang="en">These variables are "private" and can only be accessed from the current activity module.</source>
<target xml:lang="zh">These variables are "private" and can only be accessed from the current activity module.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu458" xml:space="preserve">
<source xml:lang="en">All object types can be declared as activity variables.</source>
<target xml:lang="zh">All object types can be declared as activity variables.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu459" xml:space="preserve">
<source xml:lang="en">Every time the activity is created, Sub Globals is called (before Activity_Create).</source>
<target xml:lang="zh">Every time the activity is created, Sub Globals is called (before Activity_Create).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu460" xml:space="preserve">
<source xml:lang="en">These variables exist as long as the activity exists.</source>
<target xml:lang="zh">These variables exist as long as the activity exists.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu461" xml:space="preserve">
<source xml:lang="en">Local variables</source>
<target xml:lang="zh">Local variables</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu462" xml:space="preserve">
<source xml:lang="en">Variables declared in a subroutine are local to this subroutine.</source>
<target xml:lang="zh">Variables declared in a subroutine are local to this subroutine.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu463" xml:space="preserve">
<source xml:lang="en">They are "private" and can only be accessed from within the subroutine where they were declared.</source>
<target xml:lang="zh">They are "private" and can only be accessed from within the subroutine where they were declared.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu464" xml:space="preserve">
<source xml:lang="en">All objects types can be declared as local variables.</source>
<target xml:lang="zh">All objects types can be declared as local variables.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu465" xml:space="preserve">
<source xml:lang="en">At each call of the subroutine the local variables are initialized to their default value or to any other value you have defined in the code and are 'destroyed' when the subroutine is exited.</source>
<target xml:lang="zh">At each call of the subroutine the local variables are initialized to their default value or to any other value you have defined in the code and are 'destroyed' when the subroutine is exited.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu466" xml:space="preserve">
<source xml:lang="en"> <x id="1"/>Tips</source>
<target xml:lang="zh"> <x id="1"/>Tips</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu467" xml:space="preserve">
<source xml:lang="en">A view / node can be assigned to a variable so you can easily change the common properties of the view.</source>
<target xml:lang="zh">A view / node can be assigned to a variable so you can easily change the common properties of the view.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu468" xml:space="preserve">
<source xml:lang="en">For example, the following code disables all views that are direct children of a Panel / Pane:</source>
<target xml:lang="zh">For example, the following code disables all views that are direct children of a Panel / Pane:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu469" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g> i = <g id="2">0</g> <g id="3">To</g> <g id="4">MyPanel</g>.NumberOfViews - <g id="5">1</g></source>
<target xml:lang="zh"><g id="1">For</g> i = <g id="2">0</g> <g id="3">To</g> <g id="4">MyPanel</g>.NumberOfViews - <g id="5">1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu470" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g>  <g id="2">v </g><g id="3">As</g><g id="4"> </g><g id="5">View</g></source>
<target xml:lang="zh"><g id="1">Private</g>  <g id="2">v </g><g id="3">As</g><g id="4"> </g><g id="5">View</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu471" xml:space="preserve">
<source xml:lang="en"><x id="1"/>v = <g id="2">MyPanel</g>.GetView(i)</source>
<target xml:lang="zh"><x id="1"/>v = <g id="2">MyPanel</g>.GetView(i)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu472" xml:space="preserve">
<source xml:lang="en"><x id="1"/>v.Enabled = <g id="2">False</g></source>
<target xml:lang="zh"><x id="1"/>v.Enabled = <g id="2">False</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu473" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu474" xml:space="preserve">
<source xml:lang="en">If we only want to disable buttons:</source>
<target xml:lang="zh">If we only want to disable buttons:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu475" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g> i = <g id="2">0</g> <g id="3">To </g><g id="4">MyPanel</g>.NumberOfViews - <g id="5">1</g></source>
<target xml:lang="zh"><g id="1">For</g> i = <g id="2">0</g> <g id="3">To </g><g id="4">MyPanel</g>.NumberOfViews - <g id="5">1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu476" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g>  <g id="2">v </g><g id="3">As</g><g id="4"> </g><g id="5">View</g></source>
<target xml:lang="zh"><g id="1">Private</g>  <g id="2">v </g><g id="3">As</g><g id="4"> </g><g id="5">View</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu477" xml:space="preserve">
<source xml:lang="en"><x id="1"/>v = <g id="2">MyPanel</g>.GetView(i)</source>
<target xml:lang="zh"><x id="1"/>v = <g id="2">MyPanel</g>.GetView(i)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu478" xml:space="preserve">
<source xml:lang="en"><g id="1">If</g> v <g id="2">Is</g> <g id="3">Button</g> <g id="4">Then</g> <g id="5">' check whether it is a Button</g></source>
<target xml:lang="zh"><g id="1">If</g> v <g id="2">Is</g> <g id="3">Button</g> <g id="4">Then</g> <g id="5">' check whether it is a Button</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu479" xml:space="preserve">
<source xml:lang="en"><x id="1"/>v.Enabled = <g id="2">False</g></source>
<target xml:lang="zh"><x id="1"/>v.Enabled = <g id="2">False</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu480" xml:space="preserve">
<source xml:lang="en"><g id="1">End</g> <g id="2">If</g></source>
<target xml:lang="zh"><g id="1">End</g> <g id="2">If</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu481" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu482" xml:space="preserve">
<source xml:lang="en">Note: <g id="1">MyPanel</g> is a <g id="2">Panel</g> in B4A and B4i but it is a <g id="3">Pane</g> in B4J.</source>
<target xml:lang="zh">Note: <g id="1">MyPanel</g> is a <g id="2">Panel</g> in B4A and B4i but it is a <g id="3">Pane</g> in B4J.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu483" xml:space="preserve">
<source xml:lang="en">Program flow / Process life cycle</source>
<target xml:lang="zh">Program flow / Process life cycle</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu484" xml:space="preserve">
<source xml:lang="en">Each platform has its own program flow.</source>
<target xml:lang="zh">Each platform has its own program flow.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu485" xml:space="preserve">
<source xml:lang="en">To make cross-platform projects it is now easier to do with B4XPages.</source>
<target xml:lang="zh">To make cross-platform projects it is now easier to do with B4XPages.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu486" xml:space="preserve">
<source xml:lang="en">B4XPages is explained in detatil in the B4XPages Cross-platform projects booklet. </source>
<target xml:lang="zh">B4XPages is explained in detatil in the B4XPages Cross-platform projects booklet. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu487" xml:space="preserve">
<source xml:lang="en">B4A</source>
<target xml:lang="zh">B4A</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu488" xml:space="preserve">
<source xml:lang="en">Let's start simple:</source>
<target xml:lang="zh">Let's start simple:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu489" xml:space="preserve">
<source xml:lang="en">Each B4A program runs in its own process.</source>
<target xml:lang="zh">Each B4A program runs in its own process.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu490" xml:space="preserve">
<source xml:lang="en">A process has one main thread which is also named the UI thread which lives as long as the process lives. A process can also have more threads which are useful for background tasks.</source>
<target xml:lang="zh">A process has one main thread which is also named the UI thread which lives as long as the process lives. A process can also have more threads which are useful for background tasks.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu491" xml:space="preserve">
<source xml:lang="en">A process starts when the user launches your application, assuming that it is not running already in the background.</source>
<target xml:lang="zh">A process starts when the user launches your application, assuming that it is not running already in the background.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu492" xml:space="preserve">
<source xml:lang="en">The process end is less determinant. It will happen sometime after the user or system has closed all the activities.</source>
<target xml:lang="zh">The process end is less determinant. It will happen sometime after the user or system has closed all the activities.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu493" xml:space="preserve">
<source xml:lang="en">If for example you have one activity and the user pressed on the back key, the activity gets closed. Later when the phone gets low on memory (and eventually it will happen) the process will quit.</source>
<target xml:lang="zh">If for example you have one activity and the user pressed on the back key, the activity gets closed. Later when the phone gets low on memory (and eventually it will happen) the process will quit.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu494" xml:space="preserve">
<source xml:lang="en">If the user launches your program again and the process was not killed then the same process will be reused.</source>
<target xml:lang="zh">If the user launches your program again and the process was not killed then the same process will be reused.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu495" xml:space="preserve">
<source xml:lang="en">A B4A application is made of one or more activities. </source>
<target xml:lang="zh">A B4A application is made of one or more activities. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu496" xml:space="preserve">
<source xml:lang="en">Activities are somewhat similar to Windows Forms.</source>
<target xml:lang="zh">Activities are somewhat similar to Windows Forms.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu497" xml:space="preserve">
<source xml:lang="en">One major difference is that, while an activity is not in the foreground it can be killed in order to preserve memory. Usually you will want to save the state of the activity before it gets lost. Either in a persistent storage or in memory that is associated with the process.</source>
<target xml:lang="zh">One major difference is that, while an activity is not in the foreground it can be killed in order to preserve memory. Usually you will want to save the state of the activity before it gets lost. Either in a persistent storage or in memory that is associated with the process.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu498" xml:space="preserve">
<source xml:lang="en">Later this activity will be recreated when needed.</source>
<target xml:lang="zh">Later this activity will be recreated when needed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu499" xml:space="preserve">
<source xml:lang="en">Another delicate point happens when there is a major configuration change in the device. The most common is an orientation change (the user rotates the device). When such a change occurs the current activities are destroyed and then recreated. Now it is possible to create the activity according to the new configuration (for example, we now know the new screen dimensions).</source>
<target xml:lang="zh">Another delicate point happens when there is a major configuration change in the device. The most common is an orientation change (the user rotates the device). When such a change occurs the current activities are destroyed and then recreated. Now it is possible to create the activity according to the new configuration (for example, we now know the new screen dimensions).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu500" xml:space="preserve">
<source xml:lang="en">Program Start<x id="1"/> </source>
<target xml:lang="zh">Program Start<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu501" xml:space="preserve">
<source xml:lang="en">When we start a new program we get following template:</source>
<target xml:lang="zh">When we start a new program we get following template:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu502" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N98F0B301-sub1" xml:space="preserve">
<source xml:lang="en">Image 393</source>
<target xml:lang="zh">Image 393</target>
</trans-unit>
<trans-unit id="N98F0B301-sub2" xml:space="preserve">
<source xml:lang="en">Picture 32</source>
<target xml:lang="zh">Picture 32</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu503" xml:space="preserve">
<source xml:lang="en">On the top left we see two module Tabs <x id="1"/>: </source>
<target xml:lang="zh">On the top left we see two module Tabs <x id="1"/>: </target>
</trans-unit>
<trans-unit id="N98F0B302-sub1" xml:space="preserve">
<source xml:lang="en">Image 152</source>
<target xml:lang="zh">Image 152</target>
</trans-unit>
<trans-unit id="N98F0B302-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu504" xml:space="preserve">
<source xml:lang="en">Main<x id="1"/>Activity</source>
<target xml:lang="zh">Main<x id="1"/>Activity</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu505" xml:space="preserve">
<source xml:lang="en"><g id="1">Starter<x id="2"/>Service</g></source>
<target xml:lang="zh"><g id="1">Starter<x id="2"/>Service</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu506" xml:space="preserve">
<source xml:lang="en">The Starter Service is used to declare all ProcessGlobal variables and these variables are accessible from any module in the project.</source>
<target xml:lang="zh">The Starter Service is used to declare all ProcessGlobal variables and these variables are accessible from any module in the project.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu507" xml:space="preserve">
<source xml:lang="en">The Main Activity is the starting activity, it cannot be removed.</source>
<target xml:lang="zh">The Main Activity is the starting activity, it cannot be removed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu508" xml:space="preserve">
<source xml:lang="en">Variables can be either global or local. Local variables are variables that are declared inside a sub other than Process_Globals or Globals.</source>
<target xml:lang="zh">Variables can be either global or local. Local variables are variables that are declared inside a sub other than Process_Globals or Globals.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu509" xml:space="preserve">
<source xml:lang="en">Local variables are local to the containing sub or module. Once the sub ends, these variables no longer exist.</source>
<target xml:lang="zh">Local variables are local to the containing sub or module. Once the sub ends, these variables no longer exist.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu510" xml:space="preserve">
<source xml:lang="en">Global variables can be accessed from all subs in the containing module.</source>
<target xml:lang="zh">Global variables can be accessed from all subs in the containing module.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu511" xml:space="preserve">
<source xml:lang="en">There are two types of global variables.</source>
<target xml:lang="zh">There are two types of global variables.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu512" xml:space="preserve">
<source xml:lang="en">Process variables (accessible from all modules) and activity variables (accessible from a single module).</source>
<target xml:lang="zh">Process variables (accessible from all modules) and activity variables (accessible from a single module).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu513" xml:space="preserve">
<source xml:lang="en">Process global variables<x id="1"/> </source>
<target xml:lang="zh">Process global variables<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu514" xml:space="preserve">
<source xml:lang="en">These variables live as long as the process lives.</source>
<target xml:lang="zh">These variables live as long as the process lives.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu515" xml:space="preserve">
<source xml:lang="en">You should declare these variables as Public inside Sub Process_Globals of the Starter Service like.</source>
<target xml:lang="zh">You should declare these variables as Public inside Sub Process_Globals of the Starter Service like.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu516" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">Process_Globals</g></g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">Process_Globals</g></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu517" xml:space="preserve">
<source xml:lang="en"><g id="1">'These global variables will be declared once when the application starts.</g></source>
<target xml:lang="zh"><g id="1">'These global variables will be declared once when the application starts.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu518" xml:space="preserve">
<source xml:lang="en"><g id="1">'These variables can be accessed from all modules.</g></source>
<target xml:lang="zh"><g id="1">'These variables can be accessed from all modules.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu519" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g> MyVariable  = <g id="2">"Test"</g> <g id="3">As</g> <g id="4">String</g></source>
<target xml:lang="zh"><g id="1">Public</g> MyVariable  = <g id="2">"Test"</g> <g id="3">As</g> <g id="4">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu520" xml:space="preserve">
<source xml:lang="en">This sub is called once when the process starts.</source>
<target xml:lang="zh">This sub is called once when the process starts.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu521" xml:space="preserve">
<source xml:lang="en">These variables are the only "public" variables. Which means that they can be accessed from other modules as well.</source>
<target xml:lang="zh">These variables are the only "public" variables. Which means that they can be accessed from other modules as well.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu522" xml:space="preserve">
<source xml:lang="en">There is also a Process_Globals routines in each Activity module.</source>
<target xml:lang="zh">There is also a Process_Globals routines in each Activity module.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu523" xml:space="preserve">
<source xml:lang="en">If you need variables, valid only in the Activity, which are initialized only once when the program is lauched you should put them in the Activity’s Process_Globals routine (this is true for all activities, not just the first activity).</source>
<target xml:lang="zh">If you need variables, valid only in the Activity, which are initialized only once when the program is lauched you should put them in the Activity’s Process_Globals routine (this is true for all activities, not just the first activity).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu524" xml:space="preserve">
<source xml:lang="en">However, not all types of objects can be declared as process variables.</source>
<target xml:lang="zh">However, not all types of objects can be declared as process variables.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu525" xml:space="preserve">
<source xml:lang="en">All of the views for example cannot be declared as process variables.</source>
<target xml:lang="zh">All of the views for example cannot be declared as process variables.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu526" xml:space="preserve">
<source xml:lang="en">The reason is that we do not want to hold a reference to objects that should be destroyed together with the activity.</source>
<target xml:lang="zh">The reason is that we do not want to hold a reference to objects that should be destroyed together with the activity.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu527" xml:space="preserve">
<source xml:lang="en">In other words, when the activity is destroyed, all of the views that are contained in the activity are destroyed as well. If we didn't do this, and kept a reference to a view after the Activity was destroyed, the garbage collector would not be able to free the resource and we would have a memory leak. </source>
<target xml:lang="zh">In other words, when the activity is destroyed, all of the views that are contained in the activity are destroyed as well. If we didn't do this, and kept a reference to a view after the Activity was destroyed, the garbage collector would not be able to free the resource and we would have a memory leak. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu528" xml:space="preserve">
<source xml:lang="en">The compiler enforces this requirement.</source>
<target xml:lang="zh">The compiler enforces this requirement.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu529" xml:space="preserve">
<source xml:lang="en">Activity variables<x id="1"/> </source>
<target xml:lang="zh">Activity variables<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu530" xml:space="preserve">
<source xml:lang="en">These variables are owned by the activity.</source>
<target xml:lang="zh">These variables are owned by the activity.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu531" xml:space="preserve">
<source xml:lang="en">You should declare these variables inside Sub Globals.</source>
<target xml:lang="zh">You should declare these variables inside Sub Globals.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu532" xml:space="preserve">
<source xml:lang="en">These variables are "Private" and can only be accessed from the current activity module.</source>
<target xml:lang="zh">These variables are "Private" and can only be accessed from the current activity module.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu533" xml:space="preserve">
<source xml:lang="en">All object types can be declared as activity variables.</source>
<target xml:lang="zh">All object types can be declared as activity variables.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu534" xml:space="preserve">
<source xml:lang="en">Every time the activity is created, Sub Globals is called (before Activity_Create).</source>
<target xml:lang="zh">Every time the activity is created, Sub Globals is called (before Activity_Create).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu535" xml:space="preserve">
<source xml:lang="en">These variables exist as long as the activity exists.</source>
<target xml:lang="zh">These variables exist as long as the activity exists.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu536" xml:space="preserve">
<source xml:lang="en">Starter service</source>
<target xml:lang="zh">Starter service</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu537" xml:space="preserve">
<source xml:lang="en">One of the challenges that developers of any non-small Android app need to deal with, is the multiple possible entry points.<x id="1"/>During development in almost all cases the application will start from the Main activity.<x id="2"/>Many programs start with code similar to:</source>
<target xml:lang="zh">One of the challenges that developers of any non-small Android app need to deal with, is the multiple possible entry points.<x id="1"/>During development in almost all cases the application will start from the Main activity.<x id="2"/>Many programs start with code similar to:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu538" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">Activity_Create</g> (FirstTime </g>As<g id="3"> </g><g id="4">Boolean</g><g id="5">)</g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">Activity_Create</g> (FirstTime </g>As<g id="3"> </g><g id="4">Boolean</g><g id="5">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu539" xml:space="preserve">
<source xml:lang="en"><g id="1">If</g> FirstTime <g id="2">Then</g></source>
<target xml:lang="zh"><g id="1">If</g> FirstTime <g id="2">Then</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu540" xml:space="preserve">
<source xml:lang="en"><x id="1"/>SQL.Initialize(...)</source>
<target xml:lang="zh"><x id="1"/>SQL.Initialize(...)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu541" xml:space="preserve">
<source xml:lang="en"><x id="1"/>SomeBitmap = <g id="2">LoadBitmap</g>(...)</source>
<target xml:lang="zh"><x id="1"/>SomeBitmap = <g id="2">LoadBitmap</g>(...)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu542" xml:space="preserve">
<source xml:lang="en"><g id="1">'additional code that loads application-wide resources</g></source>
<target xml:lang="zh"><g id="1">'additional code that loads application-wide resources</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu543" xml:space="preserve">
<source xml:lang="en"><g id="1">End</g> <g id="2">If</g></source>
<target xml:lang="zh"><g id="1">End</g> <g id="2">If</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu544" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu545" xml:space="preserve">
<source xml:lang="en">Everything seems to work fine during development. However the app "strangely" crashes from time to time on the end user device.<x id="1"/>The reason for those crashes is that the OS can start the process from a different activity or service. For example if you use StartServiceAt and the OS kills the process while it is in the background.<x id="2"/>Now the SQL object and the other resources will not be initialized.<x id="3"/>Starting from B4A v5.20 there is a new feature named Starter service that provides a single and consistent entry point. If the Starter service exists then the process will always start from this service.<x id="4"/>The Starter service will be created and started, and only then, the activity or service that were supposed to be started will start.<x id="5"/>This means that the Starter service is the best place to initialize all the application-wide resources.<x id="6"/>Other modules can safely access these resources.<x id="7"/>The Starter service should be the default location for all the public process global variables. SQL objects, data read from files and bitmaps used by multiple activities should all be initialized in the Service_Create sub of the Starter service.<x id="8"/><g id="9">Notes</g></source>
<target xml:lang="zh">Everything seems to work fine during development. However the app "strangely" crashes from time to time on the end user device.<x id="1"/>The reason for those crashes is that the OS can start the process from a different activity or service. For example if you use StartServiceAt and the OS kills the process while it is in the background.<x id="2"/>Now the SQL object and the other resources will not be initialized.<x id="3"/>Starting from B4A v5.20 there is a new feature named Starter service that provides a single and consistent entry point. If the Starter service exists then the process will always start from this service.<x id="4"/>The Starter service will be created and started, and only then, the activity or service that were supposed to be started will start.<x id="5"/>This means that the Starter service is the best place to initialize all the application-wide resources.<x id="6"/>Other modules can safely access these resources.<x id="7"/>The Starter service should be the default location for all the public process global variables. SQL objects, data read from files and bitmaps used by multiple activities should all be initialized in the Service_Create sub of the Starter service.<x id="8"/><g id="9">Notes</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu546" xml:space="preserve">
<source xml:lang="en">The Starter service is identified by its name. You can add a new service named Starter to an existing project and it will be the program entry point.<x id="1"/>This is done by selecting Project > Add New Module > Service Module.</source>
<target xml:lang="zh">The Starter service is identified by its name. You can add a new service named Starter to an existing project and it will be the program entry point.<x id="1"/>This is done by selecting Project > Add New Module > Service Module.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu547" xml:space="preserve">
<source xml:lang="en">This is an optional feature. You can remove the Starter service.</source>
<target xml:lang="zh">This is an optional feature. You can remove the Starter service.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu548" xml:space="preserve">
<source xml:lang="en">You can call StopService(Me) in Service_Start if you don't want the service to keep on running. However this means that the service will not be able to handle events (for example you will not be able to use the asynchronous SQL methods).</source>
<target xml:lang="zh">You can call StopService(Me) in Service_Start if you don't want the service to keep on running. However this means that the service will not be able to handle events (for example you will not be able to use the asynchronous SQL methods).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu549" xml:space="preserve">
<source xml:lang="en">The starter service should be excluded from compiled libraries. Its #ExcludeFromLibrary attribute is set to True by default in the Service Attributes region.</source>
<target xml:lang="zh">The starter service should be excluded from compiled libraries. Its #ExcludeFromLibrary attribute is set to True by default in the Service Attributes region.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu550" xml:space="preserve">
<source xml:lang="en">Program flow</source>
<target xml:lang="zh">Program flow</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu551" xml:space="preserve">
<source xml:lang="en">The program flow is the following:</source>
<target xml:lang="zh">The program flow is the following:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu552" xml:space="preserve">
<source xml:lang="en"><g id="1">Main Process_Globals</g><x id="2"/>Process_Globals routines of the Main modules <x id="3"/>Here we declare all Private variables and objects for the Main module.<x id="4"/></source>
<target xml:lang="zh"><g id="1">Main Process_Globals</g><x id="2"/>Process_Globals routines of the Main modules <x id="3"/>Here we declare all Private variables and objects for the Main module.<x id="4"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu553" xml:space="preserve">
<source xml:lang="en"><g id="1">Starter Sevice Process_Globals</g><x id="2"/>If the service exists, it is run.<x id="3"/>Here we declare all Public Process Global variables and objects like SQL, Bitmaps etc.<x id="4"/></source>
<target xml:lang="zh"><g id="1">Starter Sevice Process_Globals</g><x id="2"/>If the service exists, it is run.<x id="3"/>Here we declare all Public Process Global variables and objects like SQL, Bitmaps etc.<x id="4"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu554" xml:space="preserve">
<source xml:lang="en"><g id="1">Other Activity Main Process_Globals</g><x id="2"/>Process_Globals routines of other modules <x id="3"/>Here we declare all Private variables and objects for the given module.<x id="4"/></source>
<target xml:lang="zh"><g id="1">Other Activity Main Process_Globals</g><x id="2"/>Process_Globals routines of other modules <x id="3"/>Here we declare all Private variables and objects for the given module.<x id="4"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu555" xml:space="preserve">
<source xml:lang="en"><g id="1">Starter Service Service_Create</g><x id="2"/>If the service exists, it is run.<x id="3"/>Here we initialize all Public Process Global variables and objects like SQL, Bitmaps etc.<x id="4"/></source>
<target xml:lang="zh"><g id="1">Starter Service Service_Create</g><x id="2"/>If the service exists, it is run.<x id="3"/>Here we initialize all Public Process Global variables and objects like SQL, Bitmaps etc.<x id="4"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu556" xml:space="preserve">
<source xml:lang="en"><g id="1">Starter Sevice Service_Start</g><x id="2"/>If the service exists, it is run.<x id="3"/>We can leave this routine empty.<x id="4"/></source>
<target xml:lang="zh"><g id="1">Starter Sevice Service_Start</g><x id="2"/>If the service exists, it is run.<x id="3"/>We can leave this routine empty.<x id="4"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu557" xml:space="preserve">
<source xml:lang="en"><g id="1">Globals</g><x id="2"/>Here we declare all Private variables for the given Activity.<x id="3"/></source>
<target xml:lang="zh"><g id="1">Globals</g><x id="2"/>Here we declare all Private variables for the given Activity.<x id="3"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu558" xml:space="preserve">
<source xml:lang="en"><g id="1">Sub Activity_Create</g><x id="2"/>Here we load layouts and initialize activity objects added by code<x id="3"/></source>
<target xml:lang="zh"><g id="1">Sub Activity_Create</g><x id="2"/>Here we load layouts and initialize activity objects added by code<x id="3"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu559" xml:space="preserve">
<source xml:lang="en"><g id="1">Activity_Resume</g><x id="2"/>This routine is run every time the activity changes its state.<x id="3"/></source>
<target xml:lang="zh"><g id="1">Activity_Resume</g><x id="2"/>This routine is run every time the activity changes its state.<x id="3"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu560" xml:space="preserve">
<source xml:lang="en"><g id="1">Activity_Pause</g><g id="2"> </g><x id="3"/>This routine is run when the Activity is paused, like orientation change, lauch of another activity etc.</source>
<target xml:lang="zh"><g id="1">Activity_Pause</g><g id="2"> </g><x id="3"/>This routine is run when the Activity is paused, like orientation change, lauch of another activity etc.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu561" xml:space="preserve">
<source xml:lang="en">Sub Process_Globals / Sub Globals</source>
<target xml:lang="zh">Sub Process_Globals / Sub Globals</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu562" xml:space="preserve">
<source xml:lang="en">In any Activity, Process_Globals and Globals should be used to declare variables. </source>
<target xml:lang="zh">In any Activity, Process_Globals and Globals should be used to declare variables. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu563" xml:space="preserve">
<source xml:lang="en">You can also set the values of "simple" variables (numeric, strings and booleans).<x id="1"/>You should not put any other code there.<x id="2"/>You should instead put the code in Activity_Create.</source>
<target xml:lang="zh">You can also set the values of "simple" variables (numeric, strings and booleans).<x id="1"/>You should not put any other code there.<x id="2"/>You should instead put the code in Activity_Create.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu564" xml:space="preserve">
<source xml:lang="en">Sub Activity_Create (FirstTime As Boolean)</source>
<target xml:lang="zh">Sub Activity_Create (FirstTime As Boolean)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu565" xml:space="preserve">
<source xml:lang="en">This sub is called when the activity is created.</source>
<target xml:lang="zh">This sub is called when the activity is created.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu566" xml:space="preserve">
<source xml:lang="en">The activity is created </source>
<target xml:lang="zh">The activity is created </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu567" xml:space="preserve">
<source xml:lang="en">when the user first launches the application</source>
<target xml:lang="zh">when the user first launches the application</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu568" xml:space="preserve">
<source xml:lang="en">the device configuration has changed (user rotated the device) and the activity was destroyed</source>
<target xml:lang="zh">the device configuration has changed (user rotated the device) and the activity was destroyed</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu569" xml:space="preserve">
<source xml:lang="en">when the activity was in the background and the OS decided to destroy it in order to free memory.</source>
<target xml:lang="zh">when the activity was in the background and the OS decided to destroy it in order to free memory.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu570" xml:space="preserve">
<source xml:lang="en">The primary purpose of this sub is to load or create the layout (among other uses).</source>
<target xml:lang="zh">The primary purpose of this sub is to load or create the layout (among other uses).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu571" xml:space="preserve">
<source xml:lang="en">The FirstTime parameter tells us if this is the first time that this activity is created. First time relates to the current process.</source>
<target xml:lang="zh">The FirstTime parameter tells us if this is the first time that this activity is created. First time relates to the current process.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu572" xml:space="preserve">
<source xml:lang="en">You can use FirstTime to run all kinds of initializations related to the process variables.</source>
<target xml:lang="zh">You can use FirstTime to run all kinds of initializations related to the process variables.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu573" xml:space="preserve">
<source xml:lang="en">For example if you have a file with a list of values that you need to read, you can read it if FirstTime is True and store the list as a process variable by declaring the list in Sub Process_Globals</source>
<target xml:lang="zh">For example if you have a file with a list of values that you need to read, you can read it if FirstTime is True and store the list as a process variable by declaring the list in Sub Process_Globals</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu574" xml:space="preserve">
<source xml:lang="en">Now we know that this list will be available as long as the process lives and there is no need to reload it even when the activity is recreated.</source>
<target xml:lang="zh">Now we know that this list will be available as long as the process lives and there is no need to reload it even when the activity is recreated.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu575" xml:space="preserve">
<source xml:lang="en">To summarize, you can test whether FirstTime is True and then initialize the process variables that are declared in the Activity’s Sub Process_Globals.</source>
<target xml:lang="zh">To summarize, you can test whether FirstTime is True and then initialize the process variables that are declared in the Activity’s Sub Process_Globals.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu576" xml:space="preserve">
<source xml:lang="en">Variable declaration summary</source>
<target xml:lang="zh">Variable declaration summary</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu577" xml:space="preserve">
<source xml:lang="en">Which variable should we declare where and where do we initialize our variables:</source>
<target xml:lang="zh">Which variable should we declare where and where do we initialize our variables:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu578" xml:space="preserve">
<source xml:lang="en">Variables and none user interface objects you want to access from several modules.<x id="1"/>Like SQL, Maps, Lists, Bitmaps etc.<x id="2"/>These must be declared as Public in Starter Process_Globals like:<x id="3"/><g id="4">Sub</g><g id="5"> <g id="6">Process_Globals<x id="7"/></g></g><g id="8"> <x id="9"/><g id="10">Public</g><g id="11"> SQL1 </g><g id="12">As</g><g id="13"> </g><g id="14">SQL<x id="15"/> <x id="16"/></g><g id="17">Public</g><g id="18"> Origin = </g><g id="19">0</g><g id="20"> </g><g id="21">As</g><g id="22"> </g><g id="23">Int<x id="24"/> <x id="25"/></g><g id="26">Public</g><g id="27"> MyBitmap </g><g id="28">As</g><g id="29"> </g><g id="30">Bitmap<x id="31"/></g><g id="32">End</g><g id="33"> </g><g id="34">Sub<x id="35"/></g></g><x id="36"/>And initialized in Starter Service_Create like:<x id="37"/><g id="38">Sub</g><g id="39"> <g id="40">Service_Create<x id="41"/> <x id="42"/></g>SQL1.Initialize(...)<x id="43"/></g><g id="44"> <x id="45"/><g id="46">MyBitmap.Initialize(...)<x id="47"/></g><g id="48">End</g><g id="49"> </g><g id="50">Sub<x id="51"/></g></g></source>
<target xml:lang="zh">Variables and none user interface objects you want to access from several modules.<x id="1"/>Like SQL, Maps, Lists, Bitmaps etc.<x id="2"/>These must be declared as Public in Starter Process_Globals like:<x id="3"/><g id="4">Sub</g><g id="5"> <g id="6">Process_Globals<x id="7"/></g></g><g id="8"> <x id="9"/><g id="10">Public</g><g id="11"> SQL1 </g><g id="12">As</g><g id="13"> </g><g id="14">SQL<x id="15"/> <x id="16"/></g><g id="17">Public</g><g id="18"> Origin = </g><g id="19">0</g><g id="20"> </g><g id="21">As</g><g id="22"> </g><g id="23">Int<x id="24"/> <x id="25"/></g><g id="26">Public</g><g id="27"> MyBitmap </g><g id="28">As</g><g id="29"> </g><g id="30">Bitmap<x id="31"/></g><g id="32">End</g><g id="33"> </g><g id="34">Sub<x id="35"/></g></g><x id="36"/>And initialized in Starter Service_Create like:<x id="37"/><g id="38">Sub</g><g id="39"> <g id="40">Service_Create<x id="41"/> <x id="42"/></g>SQL1.Initialize(...)<x id="43"/></g><g id="44"> <x id="45"/><g id="46">MyBitmap.Initialize(...)<x id="47"/></g><g id="48">End</g><g id="49"> </g><g id="50">Sub<x id="51"/></g></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu579" xml:space="preserve">
<source xml:lang="en">Variables accessible from all Subs in an Activity which should be initialized only once.<x id="1"/>These must be declared as Private in Activity Process_Globals like:<x id="2"/><g id="3">Sub</g><g id="4"> <g id="5">Process_Globals<x id="6"/></g></g><g id="7"> <x id="8"/><g id="9">Private</g><g id="10"> MyList </g><g id="11">As</g><g id="12"> </g><g id="13">List<x id="14"/> <x id="15"/></g><g id="16">Private</g><g id="17"> MyMap </g><g id="18">As</g><g id="19"> </g><g id="20">Map<x id="21"/></g><g id="22">End</g><g id="23"> </g><g id="24">Sub</g></g><x id="25"/>And initialized in Activty_Create like:<x id="26"/><g id="27">Sub</g><g id="28"> <g id="29">Activity_Create<x id="30"/> <x id="31"/></g>MyList.Initialize<x id="32"/></g><g id="33"> <x id="34"/><g id="35">MyMap.Initialize<x id="36"/></g><g id="37">End</g><g id="38"> </g><g id="39">Sub<x id="40"/></g></g></source>
<target xml:lang="zh">Variables accessible from all Subs in an Activity which should be initialized only once.<x id="1"/>These must be declared as Private in Activity Process_Globals like:<x id="2"/><g id="3">Sub</g><g id="4"> <g id="5">Process_Globals<x id="6"/></g></g><g id="7"> <x id="8"/><g id="9">Private</g><g id="10"> MyList </g><g id="11">As</g><g id="12"> </g><g id="13">List<x id="14"/> <x id="15"/></g><g id="16">Private</g><g id="17"> MyMap </g><g id="18">As</g><g id="19"> </g><g id="20">Map<x id="21"/></g><g id="22">End</g><g id="23"> </g><g id="24">Sub</g></g><x id="25"/>And initialized in Activty_Create like:<x id="26"/><g id="27">Sub</g><g id="28"> <g id="29">Activity_Create<x id="30"/> <x id="31"/></g>MyList.Initialize<x id="32"/></g><g id="33"> <x id="34"/><g id="35">MyMap.Initialize<x id="36"/></g><g id="37">End</g><g id="38"> </g><g id="39">Sub<x id="40"/></g></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu580" xml:space="preserve">
<source xml:lang="en">Variables in a Class or Code module<x id="1"/>These are mostly declared as Private, you can declare them as Public if you want them being accessible from outsides the Class or Code module. <x id="2"/>Class modules are explained in detail in the <g id="3">B4X Booklet CustomViews<g id="4"> Booklet</g></g>.<x id="5"/></source>
<target xml:lang="zh">Variables in a Class or Code module<x id="1"/>These are mostly declared as Private, you can declare them as Public if you want them being accessible from outsides the Class or Code module. <x id="2"/>Class modules are explained in detail in the <g id="3">B4X Booklet CustomViews<g id="4"> Booklet</g></g>.<x id="5"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu581" xml:space="preserve">
<source xml:lang="en">User interface objects<x id="1"/>These must be declared in the Activity module where they are used in Globals like:<x id="2"/><g id="3">Sub</g><g id="4"> <g id="5">Globals<x id="6"/></g></g><g id="7"> <x id="8"/><g id="9">Private</g><g id="10"> btnGoToAct2, btnChangeValues </g><g id="11">As</g><g id="12"> </g><g id="13">Button<x id="14"/> <x id="15"/></g><g id="16">Private</g><g id="17"> lblCapital, lblInterest, lblRate  </g><g id="18">As</g><g id="19"> </g><g id="20">Label<x id="21"/></g><g id="22">End</g><g id="23"> </g><g id="24">Sub</g></g><g id="25"><x id="26"/> <x id="27"/></g></source>
<target xml:lang="zh">User interface objects<x id="1"/>These must be declared in the Activity module where they are used in Globals like:<x id="2"/><g id="3">Sub</g><g id="4"> <g id="5">Globals<x id="6"/></g></g><g id="7"> <x id="8"/><g id="9">Private</g><g id="10"> btnGoToAct2, btnChangeValues </g><g id="11">As</g><g id="12"> </g><g id="13">Button<x id="14"/> <x id="15"/></g><g id="16">Private</g><g id="17"> lblCapital, lblInterest, lblRate  </g><g id="18">As</g><g id="19"> </g><g id="20">Label<x id="21"/></g><g id="22">End</g><g id="23"> </g><g id="24">Sub</g></g><g id="25"><x id="26"/> <x id="27"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu582" xml:space="preserve">
<source xml:lang="en">Simple variables like Int, Double String and Boolean can be initialized directly in the declaration line, even in Process_Globals routines. </source>
<target xml:lang="zh">Simple variables like Int, Double String and Boolean can be initialized directly in the declaration line, even in Process_Globals routines. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu583" xml:space="preserve">
<source xml:lang="en">Example: </source>
<target xml:lang="zh">Example: </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu584" xml:space="preserve">
<source xml:lang="en">Public<g id="1"> Origin = </g><g id="2">0</g><g id="3"> </g>as<g id="4"> </g><g id="5">Int</g></source>
<target xml:lang="zh">Public<g id="1"> Origin = </g><g id="2">0</g><g id="3"> </g>as<g id="4"> </g><g id="5">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu585" xml:space="preserve">
<source xml:lang="en">No code should be written in Process_Globals routines !</source>
<target xml:lang="zh">No code should be written in Process_Globals routines !</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu586" xml:space="preserve">
<source xml:lang="en">Sub Activity_Resume<x id="1"/>Sub Activity_Pause (UserClosed As Boolean)</source>
<target xml:lang="zh">Sub Activity_Resume<x id="1"/>Sub Activity_Pause (UserClosed As Boolean)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu587" xml:space="preserve">
<source xml:lang="en">Activity_Resume is called right after Activity_Create finishes or after resuming a paused activity (activity moved to the background and now it returns to the foreground).</source>
<target xml:lang="zh">Activity_Resume is called right after Activity_Create finishes or after resuming a paused activity (activity moved to the background and now it returns to the foreground).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu588" xml:space="preserve">
<source xml:lang="en">Note that when you open a different activity (by calling StartActivity), the current activity is first paused and then the other activity will be created if needed and (always) resumed.</source>
<target xml:lang="zh">Note that when you open a different activity (by calling StartActivity), the current activity is first paused and then the other activity will be created if needed and (always) resumed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu589" xml:space="preserve">
<source xml:lang="en">Each time the activity moves from the foreground to the background Activity_Pause is called.</source>
<target xml:lang="zh">Each time the activity moves from the foreground to the background Activity_Pause is called.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu590" xml:space="preserve">
<source xml:lang="en">Activity_Pause is also called when the activity is in the foreground and a configuration change occurs (which leads to the activity getting paused and then destroyed).</source>
<target xml:lang="zh">Activity_Pause is also called when the activity is in the foreground and a configuration change occurs (which leads to the activity getting paused and then destroyed).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu591" xml:space="preserve">
<source xml:lang="en">Activity_Pause is the last place to save important information.</source>
<target xml:lang="zh">Activity_Pause is the last place to save important information.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu592" xml:space="preserve">
<source xml:lang="en">Generally there are two types of mechanisms that allow you to save the activity state.</source>
<target xml:lang="zh">Generally there are two types of mechanisms that allow you to save the activity state.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu593" xml:space="preserve">
<source xml:lang="en">Information that is only relevant to the current application instance can be stored in one or more process variables.</source>
<target xml:lang="zh">Information that is only relevant to the current application instance can be stored in one or more process variables.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu594" xml:space="preserve">
<source xml:lang="en">Other information should be stored in a persistent storage (file or database).</source>
<target xml:lang="zh">Other information should be stored in a persistent storage (file or database).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu595" xml:space="preserve">
<source xml:lang="en">For example, if the user changed some settings you should save the changes to a persistent storage at this point. Otherwise the changes may be lost.</source>
<target xml:lang="zh">For example, if the user changed some settings you should save the changes to a persistent storage at this point. Otherwise the changes may be lost.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu596" xml:space="preserve">
<source xml:lang="en">Activity_Pause is called every time the activity moves from the foreground to the background. This can happen because:</source>
<target xml:lang="zh">Activity_Pause is called every time the activity moves from the foreground to the background. This can happen because:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu597" xml:space="preserve">
<source xml:lang="en">A different activity was started.</source>
<target xml:lang="zh">A different activity was started.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu598" xml:space="preserve">
<source xml:lang="en">The Home button was pressed.</source>
<target xml:lang="zh">The Home button was pressed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu599" xml:space="preserve">
<source xml:lang="en">A configuration changed event was raised (orientation changed for example).</source>
<target xml:lang="zh">A configuration changed event was raised (orientation changed for example).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu600" xml:space="preserve">
<source xml:lang="en">The Back button was pressed.</source>
<target xml:lang="zh">The Back button was pressed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu601" xml:space="preserve">
<source xml:lang="en">In scenarios 1 and 2, the activity will be paused and for now kept in memory as it is expected to be reused later.</source>
<target xml:lang="zh">In scenarios 1 and 2, the activity will be paused and for now kept in memory as it is expected to be reused later.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu602" xml:space="preserve">
<source xml:lang="en">In scenario 3 the activity will be paused, destroyed and then created (and resumed) again.</source>
<target xml:lang="zh">In scenario 3 the activity will be paused, destroyed and then created (and resumed) again.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu603" xml:space="preserve">
<source xml:lang="en">In scenario 4 the activity will be paused and destroyed. <g id="1">Pressing on the Back button is similar to closing the activity</g>. In this case you do <g id="2">not</g> need to save any instance specific information (the position of pacman in a PacMan game for example).</source>
<target xml:lang="zh">In scenario 4 the activity will be paused and destroyed. <g id="1">Pressing on the Back button is similar to closing the activity</g>. In this case you do <g id="2">not</g> need to save any instance specific information (the position of pacman in a PacMan game for example).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu604" xml:space="preserve">
<source xml:lang="en">The UserClosed parameter will be true in this scenario and false in all other. Note that it will also be true when you call Activity.Finish. This method pauses and destroys the current activity, similar to the Back button.</source>
<target xml:lang="zh">The UserClosed parameter will be true in this scenario and false in all other. Note that it will also be true when you call Activity.Finish. This method pauses and destroys the current activity, similar to the Back button.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu605" xml:space="preserve">
<source xml:lang="en">You can use UserClosed parameter to decide which data to save and also whether to reset any related process variables to their initial state (move pacman position to the center if the position is a process variable).</source>
<target xml:lang="zh">You can use UserClosed parameter to decide which data to save and also whether to reset any related process variables to their initial state (move pacman position to the center if the position is a process variable).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu606" xml:space="preserve">
<source xml:lang="en">Activity.Finish  /  ExitApplication</source>
<target xml:lang="zh">Activity.Finish  /  ExitApplication</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu607" xml:space="preserve">
<source xml:lang="en">Some explanations on how and when to use Activity.Finish and ExitApplication.</source>
<target xml:lang="zh">Some explanations on how and when to use Activity.Finish and ExitApplication.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu608" xml:space="preserve">
<source xml:lang="en">An interesting article about the functioning of Android can be found here: </source>
<target xml:lang="zh">An interesting article about the functioning of Android can be found here: </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu609" xml:space="preserve">
<source xml:lang="en"><g id="1">Multitasking the Android way</g>.</source>
<target xml:lang="zh"><g id="1">Multitasking the Android way</g>.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu610" xml:space="preserve">
<source xml:lang="en">Most applications should not use ExitApplication but prefer Activity.Finish which lets the OS decide when the process is killed. </source>
<target xml:lang="zh">Most applications should not use ExitApplication but prefer Activity.Finish which lets the OS decide when the process is killed. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu611" xml:space="preserve">
<source xml:lang="en">You should use it only if you really need to fully kill the process.</source>
<target xml:lang="zh">You should use it only if you really need to fully kill the process.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu612" xml:space="preserve">
<source xml:lang="en">When should we use Activity.Finish and when not ?</source>
<target xml:lang="zh">When should we use Activity.Finish and when not ?</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu613" xml:space="preserve">
<source xml:lang="en">Let us consider following example without any Activity.Finish:</source>
<target xml:lang="zh">Let us consider following example without any Activity.Finish:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu614" xml:space="preserve">
<source xml:lang="en">Main activity</source>
<target xml:lang="zh">Main activity</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu615" xml:space="preserve">
<source xml:lang="en">StartActivity(SecondActivity)</source>
<target xml:lang="zh">StartActivity(SecondActivity)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu616" xml:space="preserve">
<source xml:lang="en">SecondActivity activity</source>
<target xml:lang="zh">SecondActivity activity</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu617" xml:space="preserve">
<source xml:lang="en">StartActivity(ThirdActivity)</source>
<target xml:lang="zh">StartActivity(ThirdActivity)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu618" xml:space="preserve">
<source xml:lang="en">ThirdActivity activity</source>
<target xml:lang="zh">ThirdActivity activity</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu619" xml:space="preserve">
<source xml:lang="en">Click on Back button</source>
<target xml:lang="zh">Click on Back button</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu620" xml:space="preserve">
<source xml:lang="en">The OS goes back to previous activity, SecondActivity</source>
<target xml:lang="zh">The OS goes back to previous activity, SecondActivity</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu621" xml:space="preserve">
<source xml:lang="en">SecondActivity activity</source>
<target xml:lang="zh">SecondActivity activity</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu622" xml:space="preserve">
<source xml:lang="en">Click on Back button</source>
<target xml:lang="zh">Click on Back button</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu623" xml:space="preserve">
<source xml:lang="en">The OS goes back to previous activity, <g id="1">Main</g></source>
<target xml:lang="zh">The OS goes back to previous activity, <g id="1">Main</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu624" xml:space="preserve">
<source xml:lang="en">Main activity</source>
<target xml:lang="zh">Main activity</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu625" xml:space="preserve">
<source xml:lang="en">Click on Back button</source>
<target xml:lang="zh">Click on Back button</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu626" xml:space="preserve">
<source xml:lang="en">The OS leaves the program</source>
<target xml:lang="zh">The OS leaves the program</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu627" xml:space="preserve">
<source xml:lang="en">Let us now consider following example with Activity.Finish before each StartActivity:</source>
<target xml:lang="zh">Let us now consider following example with Activity.Finish before each StartActivity:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu628" xml:space="preserve">
<source xml:lang="en">Main activity</source>
<target xml:lang="zh">Main activity</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu629" xml:space="preserve">
<source xml:lang="en">Activity.Finish</source>
<target xml:lang="zh">Activity.Finish</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu630" xml:space="preserve">
<source xml:lang="en">StartActivity(SecondActivity)</source>
<target xml:lang="zh">StartActivity(SecondActivity)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu631" xml:space="preserve">
<source xml:lang="en">SecondActivity activity</source>
<target xml:lang="zh">SecondActivity activity</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu632" xml:space="preserve">
<source xml:lang="en">Activity.Finish</source>
<target xml:lang="zh">Activity.Finish</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu633" xml:space="preserve">
<source xml:lang="en">StartActivity(ThirdActivity)</source>
<target xml:lang="zh">StartActivity(ThirdActivity)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu634" xml:space="preserve">
<source xml:lang="en">ThirdActivity activity</source>
<target xml:lang="zh">ThirdActivity activity</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu635" xml:space="preserve">
<source xml:lang="en">Click on Back button</source>
<target xml:lang="zh">Click on Back button</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu636" xml:space="preserve">
<source xml:lang="en">The OS leaves the program</source>
<target xml:lang="zh">The OS leaves the program</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu637" xml:space="preserve">
<source xml:lang="en">We should use Activity.Finish before starting another activity only if we don't want to go back to this activity with the Back button.</source>
<target xml:lang="zh">We should use Activity.Finish before starting another activity only if we don't want to go back to this activity with the Back button.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu638" xml:space="preserve">
<source xml:lang="en">Program flow B4i</source>
<target xml:lang="zh">Program flow B4i</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu639" xml:space="preserve">
<source xml:lang="en">The program flow in B4i is much more simple than the B4A program flow.</source>
<target xml:lang="zh">The program flow in B4i is much more simple than the B4A program flow.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu640" xml:space="preserve">
<source xml:lang="en">When we run a new project we get the template below:</source>
<target xml:lang="zh">When we run a new project we get the template below:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu641" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">Process_Globals</g></g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">Process_Globals</g></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu642" xml:space="preserve">
<source xml:lang="en"><g id="1">'These global variables will be declared once when the application starts.</g></source>
<target xml:lang="zh"><g id="1">'These global variables will be declared once when the application starts.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu643" xml:space="preserve">
<source xml:lang="en"><g id="1">'Public variables can be accessed from all modules.</g></source>
<target xml:lang="zh"><g id="1">'Public variables can be accessed from all modules.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu644" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g> App <g id="2">As</g> <g id="3">Application</g></source>
<target xml:lang="zh"><g id="1">Public</g> App <g id="2">As</g> <g id="3">Application</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu645" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g> NavControl <g id="2">As</g> <g id="3">NavigationController</g></source>
<target xml:lang="zh"><g id="1">Public</g> NavControl <g id="2">As</g> <g id="3">NavigationController</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu646" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> Page1 <g id="2">As</g> <g id="3">Page</g></source>
<target xml:lang="zh"><g id="1">Private</g> Page1 <g id="2">As</g> <g id="3">Page</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu647" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu648" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> </g>Sub<g id="2"> <g id="3">Application_Start</g> (Nav </g>As<g id="4"> </g><g id="5">NavigationController</g><g id="6">)</g></source>
<target xml:lang="zh">Private<g id="1"> </g>Sub<g id="2"> <g id="3">Application_Start</g> (Nav </g>As<g id="4"> </g><g id="5">NavigationController</g><g id="6">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu649" xml:space="preserve">
<source xml:lang="en"><g id="1">'SetDebugAutoFlushLogs(True) 'Uncomment if program crashes before all logs are printed.</g></source>
<target xml:lang="zh"><g id="1">'SetDebugAutoFlushLogs(True) 'Uncomment if program crashes before all logs are printed.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu650" xml:space="preserve">
<source xml:lang="en"><x id="1"/>NavControl = Nav</source>
<target xml:lang="zh"><x id="1"/>NavControl = Nav</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu651" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Page1.Initialize(<g id="2">"Page1"</g>)</source>
<target xml:lang="zh"><x id="1"/>Page1.Initialize(<g id="2">"Page1"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu652" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Page1.Title = <g id="2">"Page 1"</g></source>
<target xml:lang="zh"><x id="1"/>Page1.Title = <g id="2">"Page 1"</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu653" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Page1.RootPanel.Color = <g id="2">Colors</g>.White</source>
<target xml:lang="zh"><x id="1"/>Page1.RootPanel.Color = <g id="2">Colors</g>.White</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu654" xml:space="preserve">
<source xml:lang="en"><x id="1"/>NavControl.ShowPage(Page1)</source>
<target xml:lang="zh"><x id="1"/>NavControl.ShowPage(Page1)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu655" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu656" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> </g>Sub<g id="2"> <g id="3">Page1_Resize</g>(Width </g>As<g id="4"> </g><g id="5">Int</g><g id="6">, Height </g>As<g id="7"> </g><g id="8">Int</g><g id="9">)</g></source>
<target xml:lang="zh">Private<g id="1"> </g>Sub<g id="2"> <g id="3">Page1_Resize</g>(Width </g>As<g id="4"> </g><g id="5">Int</g><g id="6">, Height </g>As<g id="7"> </g><g id="8">Int</g><g id="9">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu658" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu659" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> </g>Sub<g id="2"> <g id="3">Application_Background</g></g></source>
<target xml:lang="zh">Private<g id="1"> </g>Sub<g id="2"> <g id="3">Application_Background</g></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu661" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu662" xml:space="preserve">
<source xml:lang="en">When you start the program, the routines are executed in the order above.</source>
<target xml:lang="zh">When you start the program, the routines are executed in the order above.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu663" xml:space="preserve">
<source xml:lang="en">Be aware that the dimensions of Page1 are not known in Application_Start, they are only known in the Page1_Resize routine in the Width and Height parameters.</source>
<target xml:lang="zh">Be aware that the dimensions of Page1 are not known in Application_Start, they are only known in the Page1_Resize routine in the Width and Height parameters.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu664" xml:space="preserve">
<source xml:lang="en">If you want to adjust views you must do it here.</source>
<target xml:lang="zh">If you want to adjust views you must do it here.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu665" xml:space="preserve">
<source xml:lang="en">Program flow B4J</source>
<target xml:lang="zh">Program flow B4J</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu666" xml:space="preserve">
<source xml:lang="en">The program flow in B4J is much more simple than the B4A program flow, similar to B4i.</source>
<target xml:lang="zh">The program flow in B4J is much more simple than the B4A program flow, similar to B4i.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu667" xml:space="preserve">
<source xml:lang="en">When we run a new project we get the template below:</source>
<target xml:lang="zh">When we run a new project we get the template below:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu668" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">Process_Globals</g></g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">Process_Globals</g></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu669" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> fx <g id="2">As</g> <g id="3">JFX</g></source>
<target xml:lang="zh"><g id="1">Private</g> fx <g id="2">As</g> <g id="3">JFX</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu670" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> MainForm <g id="2">As</g> <g id="3">Form</g></source>
<target xml:lang="zh"><g id="1">Private</g> MainForm <g id="2">As</g> <g id="3">Form</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu671" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu672" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">AppStart</g> (Form1 </g>As<g id="3"> </g><g id="4">Form</g><g id="5">, Args() </g>As<g id="6"> </g><g id="7">String</g><g id="8">)</g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">AppStart</g> (Form1 </g>As<g id="3"> </g><g id="4">Form</g><g id="5">, Args() </g>As<g id="6"> </g><g id="7">String</g><g id="8">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu673" xml:space="preserve">
<source xml:lang="en"><x id="1"/>MainForm = Form1</source>
<target xml:lang="zh"><x id="1"/>MainForm = Form1</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu674" xml:space="preserve">
<source xml:lang="en"><g id="1">'MainForm.RootPane.LoadLayout("Layout1") 'Load the layout file.</g></source>
<target xml:lang="zh"><g id="1">'MainForm.RootPane.LoadLayout("Layout1") 'Load the layout file.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu675" xml:space="preserve">
<source xml:lang="en"><x id="1"/>MainForm.Show</source>
<target xml:lang="zh"><x id="1"/>MainForm.Show</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu676" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu677" xml:space="preserve">
<source xml:lang="en">'Return true to allow the default exceptions handler to handle the uncaught exception.</source>
<target xml:lang="zh">'Return true to allow the default exceptions handler to handle the uncaught exception.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu678" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">Application_Error</g> (Error </g>As<g id="3"> </g><g id="4">Exception</g><g id="5">, StackTrace </g>As<g id="6"> </g><g id="7">String</g><g id="8">) </g>As<g id="9"> </g><g id="10">Boolean</g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">Application_Error</g> (Error </g>As<g id="3"> </g><g id="4">Exception</g><g id="5">, StackTrace </g>As<g id="6"> </g><g id="7">String</g><g id="8">) </g>As<g id="9"> </g><g id="10">Boolean</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu679" xml:space="preserve">
<source xml:lang="en"><g id="1">Return</g> <g id="2">True</g></source>
<target xml:lang="zh"><g id="1">Return</g> <g id="2">True</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu680" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu681" xml:space="preserve">
<source xml:lang="en">When you start the program, the routines are executed in the order above.</source>
<target xml:lang="zh">When you start the program, the routines are executed in the order above.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu682" xml:space="preserve">
<source xml:lang="en">If you want to adjust Nodes when the user resizes a form you must add a Resize routine for this form, like: </source>
<target xml:lang="zh">If you want to adjust Nodes when the user resizes a form you must add a Resize routine for this form, like: </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu683" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> </g>Sub<g id="2"> <g id="3">MainForm_Resize</g> (Width </g>As<g id="4"> </g><g id="5">Double</g><g id="6">, Height </g>As<g id="7"> </g><g id="8">Double</g><g id="9">)</g></source>
<target xml:lang="zh">Private<g id="1"> </g>Sub<g id="2"> <g id="3">MainForm_Resize</g> (Width </g>As<g id="4"> </g><g id="5">Double</g><g id="6">, Height </g>As<g id="7"> </g><g id="8">Double</g><g id="9">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu684" xml:space="preserve">
<source xml:lang="en"><g id="1">' Your code</g></source>
<target xml:lang="zh"><g id="1">' Your code</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu685" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu686" xml:space="preserve">
<source xml:lang="en">Program flow B4R</source>
<target xml:lang="zh">Program flow B4R</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu687" xml:space="preserve">
<source xml:lang="en">The program flow in B4R is straight forward.</source>
<target xml:lang="zh">The program flow in B4R is straight forward.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu688" xml:space="preserve">
<source xml:lang="en">When we run a new project we find this code template:</source>
<target xml:lang="zh">When we run a new project we find this code template:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu689" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">Process_Globals</g></g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">Process_Globals</g></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu690" xml:space="preserve">
<source xml:lang="en"><g id="1">'These global variables will be declared once when the application starts.</g></source>
<target xml:lang="zh"><g id="1">'These global variables will be declared once when the application starts.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu691" xml:space="preserve">
<source xml:lang="en"><g id="1">'Public variables can be accessed from all modules.</g></source>
<target xml:lang="zh"><g id="1">'Public variables can be accessed from all modules.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu692" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g> Serial1 <g id="2">As</g> <g id="3">Serial</g></source>
<target xml:lang="zh"><g id="1">Public</g> Serial1 <g id="2">As</g> <g id="3">Serial</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu693" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu694" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> </g>Sub<g id="2"> <g id="3">AppStart</g></g></source>
<target xml:lang="zh">Private<g id="1"> </g>Sub<g id="2"> <g id="3">AppStart</g></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu695" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Serial1.Initialize(<g id="2">115200</g>)</source>
<target xml:lang="zh"><x id="1"/>Serial1.Initialize(<g id="2">115200</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu696" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g>(<g id="2">"AppStart"</g>)</source>
<target xml:lang="zh"><g id="1">Log</g>(<g id="2">"AppStart"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu697" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu698" xml:space="preserve">
<source xml:lang="en">When you run the program, Process_Globals and then AppStart are executed.</source>
<target xml:lang="zh">When you run the program, Process_Globals and then AppStart are executed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu699" xml:space="preserve">
<source xml:lang="en"><g id="1">Serial1.Initialize(</g><g id="2">115200</g><g id="3">)</g><x id="4"/>Initializes the bit rate.</source>
<target xml:lang="zh"><g id="1">Serial1.Initialize(</g><g id="2">115200</g><g id="3">)</g><x id="4"/>Initializes the bit rate.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu700" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g><g id="2">(</g><g id="3">"AppStart"</g><g id="4">)</g><x id="5"/>Writes “AppStart” in the Logs.</source>
<target xml:lang="zh"><g id="1">Log</g><g id="2">(</g><g id="3">"AppStart"</g><g id="4">)</g><x id="5"/>Writes “AppStart” in the Logs.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu701" xml:space="preserve">
<source xml:lang="en">Program flow comparison  B4A / B4i / B4J</source>
<target xml:lang="zh">Program flow comparison  B4A / B4i / B4J</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu702" xml:space="preserve">
<source xml:lang="en">Program start  B4A / B4i / B4J</source>
<target xml:lang="zh">Program start  B4A / B4i / B4J</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu703" xml:space="preserve">
<source xml:lang="en">B4A<x id="1"/>B4i<x id="2"/>B4J</source>
<target xml:lang="zh">B4A<x id="1"/>B4i<x id="2"/>B4J</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu704" xml:space="preserve">
<source xml:lang="en">Main Process_Globals<x id="1"/>Main<g id="2"> Process_Globals <x id="3"/>Main Process_Globals</g></source>
<target xml:lang="zh">Main Process_Globals<x id="1"/>Main<g id="2"> Process_Globals <x id="3"/>Main Process_Globals</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu705" xml:space="preserve">
<source xml:lang="en">Starter Process_Globals<x id="1"/></source>
<target xml:lang="zh">Starter Process_Globals<x id="1"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu706" xml:space="preserve">
<source xml:lang="en">Other modules Process_Globals<x id="1"/>Other modules Process_Globals<x id="2"/>Other modules Process_Globals</source>
<target xml:lang="zh">Other modules Process_Globals<x id="1"/>Other modules Process_Globals<x id="2"/>Other modules Process_Globals</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu707" xml:space="preserve">
<source xml:lang="en">Starter Service_Create<x id="1"/>Main <g id="2">Application_Start<x id="3"/>Main AppStart</g></source>
<target xml:lang="zh">Starter Service_Create<x id="1"/>Main <g id="2">Application_Start<x id="3"/>Main AppStart</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu708" xml:space="preserve">
<source xml:lang="en">Starter Service_Start<x id="1"/>Main <g id="2">Page1_Resize<x id="3"/>Main MainForm_Resize</g></source>
<target xml:lang="zh">Starter Service_Start<x id="1"/>Main <g id="2">Page1_Resize<x id="3"/>Main MainForm_Resize</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu709" xml:space="preserve">
<source xml:lang="en">Main Globals</source>
<target xml:lang="zh">Main Globals</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu710" xml:space="preserve">
<source xml:lang="en">Main Activity_Create</source>
<target xml:lang="zh">Main Activity_Create</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu711" xml:space="preserve">
<source xml:lang="en">FirstTime = True</source>
<target xml:lang="zh">FirstTime = True</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu712" xml:space="preserve">
<source xml:lang="en">Main Activity_Resume</source>
<target xml:lang="zh">Main Activity_Resume</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu713" xml:space="preserve">
<source xml:lang="en">Rotating device  B4A / B4i</source>
<target xml:lang="zh">Rotating device  B4A / B4i</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu714" xml:space="preserve">
<source xml:lang="en">B4A<x id="1"/>B4i<x id="2"/></source>
<target xml:lang="zh">B4A<x id="1"/>B4i<x id="2"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu715" xml:space="preserve">
<source xml:lang="en">Main Activity_Pause</source>
<target xml:lang="zh">Main Activity_Pause</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu716" xml:space="preserve">
<source xml:lang="en">Main Globals<x id="1"/>Main Page1_Resize</source>
<target xml:lang="zh">Main Globals<x id="1"/>Main Page1_Resize</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu717" xml:space="preserve">
<source xml:lang="en">Main Activity_Create</source>
<target xml:lang="zh">Main Activity_Create</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu718" xml:space="preserve">
<source xml:lang="en">FirstTime = False</source>
<target xml:lang="zh">FirstTime = False</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu719" xml:space="preserve">
<source xml:lang="en">Main Activity_Resume</source>
<target xml:lang="zh">Main Activity_Resume</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu720" xml:space="preserve">
<source xml:lang="en">B4XPages program flow</source>
<target xml:lang="zh">B4XPages program flow</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu721" xml:space="preserve">
<source xml:lang="en">For cross-platform projects with the B4XPages library the program flow is the same for all three platforms. All the platform specific code is hidden in the B4XPages library and transparent to the programmer.</source>
<target xml:lang="zh">For cross-platform projects with the B4XPages library the program flow is the same for all three platforms. All the platform specific code is hidden in the B4XPages library and transparent to the programmer.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu722" xml:space="preserve">
<source xml:lang="en">The B4XPagesThreePages project in the B4XPages Cross-platform projects booklet shows the program flow when navigating between Pages.</source>
<target xml:lang="zh">The B4XPagesThreePages project in the B4XPages Cross-platform projects booklet shows the program flow when navigating between Pages.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu723" xml:space="preserve">
<source xml:lang="en">Examples:</source>
<target xml:lang="zh">Examples:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu724" xml:space="preserve">
<source xml:lang="en">Start of the project, the routines below are executed:</source>
<target xml:lang="zh">Start of the project, the routines below are executed:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu725" xml:space="preserve">
<source xml:lang="en">MainPage Create</source>
<target xml:lang="zh">MainPage Create</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu726" xml:space="preserve">
<source xml:lang="en">MainPage Foreground</source>
<target xml:lang="zh">MainPage Foreground</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu727" xml:space="preserve">
<source xml:lang="en">MainPage Appear</source>
<target xml:lang="zh">MainPage Appear</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu728" xml:space="preserve">
<source xml:lang="en">MainPage Resize</source>
<target xml:lang="zh">MainPage Resize</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu729" xml:space="preserve">
<source xml:lang="en">Opening a Page, Page2 in the example:</source>
<target xml:lang="zh">Opening a Page, Page2 in the example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu730" xml:space="preserve">
<source xml:lang="en">Page2 Create</source>
<target xml:lang="zh">Page2 Create</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu731" xml:space="preserve">
<source xml:lang="en">Page2 Foreground</source>
<target xml:lang="zh">Page2 Foreground</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu732" xml:space="preserve">
<source xml:lang="en">Page2 Appear</source>
<target xml:lang="zh">Page2 Appear</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu733" xml:space="preserve">
<source xml:lang="en">Closing a Page, Page2 in the example:</source>
<target xml:lang="zh">Closing a Page, Page2 in the example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu734" xml:space="preserve">
<source xml:lang="en">Page2 Disappear</source>
<target xml:lang="zh">Page2 Disappear</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu735" xml:space="preserve">
<source xml:lang="en">Basic language</source>
<target xml:lang="zh">Basic language</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu736" xml:space="preserve">
<source xml:lang="en">Expressions</source>
<target xml:lang="zh">Expressions</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu737" xml:space="preserve">
<source xml:lang="en">An <g id="1">expression</g> in a programming language is a combination of explicit values, constants, variables, operators, and functions that are interpreted according to the particular rules of precedence and of association for a particular programming language, which computes and then produces (returns) another value. This process, like for mathematical expressions, is called evaluation. The value can be of various types, such as numerical, string, and logical (source Wikipedia).</source>
<target xml:lang="zh">An <g id="1">expression</g> in a programming language is a combination of explicit values, constants, variables, operators, and functions that are interpreted according to the particular rules of precedence and of association for a particular programming language, which computes and then produces (returns) another value. This process, like for mathematical expressions, is called evaluation. The value can be of various types, such as numerical, string, and logical (source Wikipedia).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu738" xml:space="preserve">
<source xml:lang="en">For example, 2 + 3 is an arithmetic and programming expression which evaluates to 5. A variable is an expression because it is a pointer to a value in memory, so y + 6 is an expression. An example of a relational expression is 4 = 4 which evaluates to True (source Wikipedia).</source>
<target xml:lang="zh">For example, 2 + 3 is an arithmetic and programming expression which evaluates to 5. A variable is an expression because it is a pointer to a value in memory, so y + 6 is an expression. An example of a relational expression is 4 = 4 which evaluates to True (source Wikipedia).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu739" xml:space="preserve">
<source xml:lang="en">Mathematical expressions</source>
<target xml:lang="zh">Mathematical expressions</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu740" xml:space="preserve">
<source xml:lang="en">Operator</source>
<target xml:lang="zh">Operator</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu741" xml:space="preserve">
<source xml:lang="en">Example</source>
<target xml:lang="zh">Example</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu742" xml:space="preserve">
<source xml:lang="en">Precedence level</source>
<target xml:lang="zh">Precedence level</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu743" xml:space="preserve">
<source xml:lang="en">Operation</source>
<target xml:lang="zh">Operation</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu744" xml:space="preserve">
<source xml:lang="en">+ </source>
<target xml:lang="zh">+ </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu745" xml:space="preserve">
<source xml:lang="en">x + y</source>
<target xml:lang="zh">x + y</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu746" xml:space="preserve">
<source xml:lang="en">3</source>
<target xml:lang="zh">3</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu747" xml:space="preserve">
<source xml:lang="en">Addition </source>
<target xml:lang="zh">Addition </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu748" xml:space="preserve">
<source xml:lang="en">-</source>
<target xml:lang="zh">-</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu749" xml:space="preserve">
<source xml:lang="en">x - y</source>
<target xml:lang="zh">x - y</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu750" xml:space="preserve">
<source xml:lang="en">3</source>
<target xml:lang="zh">3</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu751" xml:space="preserve">
<source xml:lang="en">Subtraction</source>
<target xml:lang="zh">Subtraction</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu752" xml:space="preserve">
<source xml:lang="en">*</source>
<target xml:lang="zh">*</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu753" xml:space="preserve">
<source xml:lang="en">x * y</source>
<target xml:lang="zh">x * y</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu754" xml:space="preserve">
<source xml:lang="en">2</source>
<target xml:lang="zh">2</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu755" xml:space="preserve">
<source xml:lang="en">Multiplication</source>
<target xml:lang="zh">Multiplication</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu756" xml:space="preserve">
<source xml:lang="en">/</source>
<target xml:lang="zh">/</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu757" xml:space="preserve">
<source xml:lang="en">x / y</source>
<target xml:lang="zh">x / y</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu758" xml:space="preserve">
<source xml:lang="en">2</source>
<target xml:lang="zh">2</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu759" xml:space="preserve">
<source xml:lang="en">Division</source>
<target xml:lang="zh">Division</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu760" xml:space="preserve">
<source xml:lang="en">Mod</source>
<target xml:lang="zh">Mod</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu761" xml:space="preserve">
<source xml:lang="en">x Mod y</source>
<target xml:lang="zh">x Mod y</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu762" xml:space="preserve">
<source xml:lang="en">2</source>
<target xml:lang="zh">2</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu763" xml:space="preserve">
<source xml:lang="en">Modulo</source>
<target xml:lang="zh">Modulo</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu764" xml:space="preserve">
<source xml:lang="en">Power</source>
<target xml:lang="zh">Power</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu765" xml:space="preserve">
<source xml:lang="en">Power(x,y) x<g id="1">y</g></source>
<target xml:lang="zh">Power(x,y) x<g id="1">y</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu766" xml:space="preserve">
<source xml:lang="en">1</source>
<target xml:lang="zh">1</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu767" xml:space="preserve">
<source xml:lang="en">Power of</source>
<target xml:lang="zh">Power of</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu768" xml:space="preserve">
<source xml:lang="en">Precedence level: In an expression, operations with level 1 are evaluated before operations with level 2, which are evaluated before operations with level 3.</source>
<target xml:lang="zh">Precedence level: In an expression, operations with level 1 are evaluated before operations with level 2, which are evaluated before operations with level 3.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu769" xml:space="preserve">
<source xml:lang="en">Examples:</source>
<target xml:lang="zh">Examples:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu770" xml:space="preserve">
<source xml:lang="en"><g id="1">4 + 5 * 3 + 2 = 21<x id="2"/></g>><g id="3">   4 + 15 + 2</g></source>
<target xml:lang="zh"><g id="1">4 + 5 * 3 + 2 = 21<x id="2"/></g>><g id="3">   4 + 15 + 2</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu771" xml:space="preserve">
<source xml:lang="en"><g id="1">(4 + 5) * (3 + 2)  =  45<x id="2"/></g>><g id="3">   9 * 5</g></source>
<target xml:lang="zh"><g id="1">(4 + 5) * (3 + 2)  =  45<x id="2"/></g>><g id="3">   9 * 5</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu772" xml:space="preserve">
<source xml:lang="en"><g id="1">(4 + 5)<g id="2">2</g> * (3 + 2)  =  405<x id="3"/></g>><g id="4">  9<g id="5">2</g> * 5<x id="6"/></g>><g id="7">  81 * 5</g></source>
<target xml:lang="zh"><g id="1">(4 + 5)<g id="2">2</g> * (3 + 2)  =  405<x id="3"/></g>><g id="4">  9<g id="5">2</g> * 5<x id="6"/></g>><g id="7">  81 * 5</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu773" xml:space="preserve">
<source xml:lang="en">Power(4 + 5, 2) * (3 + 2)</source>
<target xml:lang="zh">Power(4 + 5, 2) * (3 + 2)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu774" xml:space="preserve">
<source xml:lang="en"><g id="1">11 Mod 4 = 3</g><x id="2"/>>   Mod is the remainder of 11 / 4 </source>
<target xml:lang="zh"><g id="1">11 Mod 4 = 3</g><x id="2"/>>   Mod is the remainder of 11 / 4 </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu775" xml:space="preserve">
<source xml:lang="en"><g id="1">23<g id="2">3</g><x id="3"/>Power(23, 3)</g><x id="4"/>>   23 at the power of 3</source>
<target xml:lang="zh"><g id="1">23<g id="2">3</g><x id="3"/>Power(23, 3)</g><x id="4"/>>   23 at the power of 3</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu776" xml:space="preserve">
<source xml:lang="en">- 2<g id="1">2</g> = - 4</source>
<target xml:lang="zh">- 2<g id="1">2</g> = - 4</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu777" xml:space="preserve">
<source xml:lang="en">(-2)<g id="1">2</g> = 4</source>
<target xml:lang="zh">(-2)<g id="1">2</g> = 4</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu778" xml:space="preserve">
<source xml:lang="en">Relational expressions</source>
<target xml:lang="zh">Relational expressions</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu779" xml:space="preserve">
<source xml:lang="en">In computer science in relational expressions an operator tests some kind of relation between two entities. These include numerical equality (e.g., 5 = 5) and inequalities (e.g., 4 >= 3). </source>
<target xml:lang="zh">In computer science in relational expressions an operator tests some kind of relation between two entities. These include numerical equality (e.g., 5 = 5) and inequalities (e.g., 4 >= 3). </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu780" xml:space="preserve">
<source xml:lang="en">In B4X these operators return <g id="1">True</g> or <g id="2">False</g>, depending on whether the conditional relationship between the two operands holds or not.</source>
<target xml:lang="zh">In B4X these operators return <g id="1">True</g> or <g id="2">False</g>, depending on whether the conditional relationship between the two operands holds or not.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu781" xml:space="preserve">
<source xml:lang="en">Operator</source>
<target xml:lang="zh">Operator</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu782" xml:space="preserve">
<source xml:lang="en">Example</source>
<target xml:lang="zh">Example</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu783" xml:space="preserve">
<source xml:lang="en">Used to test</source>
<target xml:lang="zh">Used to test</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu784" xml:space="preserve">
<source xml:lang="en">=</source>
<target xml:lang="zh">=</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu785" xml:space="preserve">
<source xml:lang="en">x = y</source>
<target xml:lang="zh">x = y</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu786" xml:space="preserve">
<source xml:lang="en">the equivalence of two values</source>
<target xml:lang="zh">the equivalence of two values</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu787" xml:space="preserve">
<source xml:lang="en">&lt;></source>
<target xml:lang="zh">&lt;></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu788" xml:space="preserve">
<source xml:lang="en">x &lt;> y</source>
<target xml:lang="zh">x &lt;> y</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu789" xml:space="preserve">
<source xml:lang="en">the negated equivalence of two values</source>
<target xml:lang="zh">the negated equivalence of two values</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu790" xml:space="preserve">
<source xml:lang="en">></source>
<target xml:lang="zh">></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu791" xml:space="preserve">
<source xml:lang="en">x > y</source>
<target xml:lang="zh">x > y</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu792" xml:space="preserve">
<source xml:lang="en">if the value of the left expression is greater than that of the right</source>
<target xml:lang="zh">if the value of the left expression is greater than that of the right</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu793" xml:space="preserve">
<source xml:lang="en">&lt;</source>
<target xml:lang="zh">&lt;</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu794" xml:space="preserve">
<source xml:lang="en">x &lt; y</source>
<target xml:lang="zh">x &lt; y</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu795" xml:space="preserve">
<source xml:lang="en">if the value of the left expression is less than that of the right</source>
<target xml:lang="zh">if the value of the left expression is less than that of the right</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu796" xml:space="preserve">
<source xml:lang="en">>=</source>
<target xml:lang="zh">>=</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu797" xml:space="preserve">
<source xml:lang="en">x >= y</source>
<target xml:lang="zh">x >= y</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu798" xml:space="preserve">
<source xml:lang="en">if the value of the left expression is greater than or equal to that of the right</source>
<target xml:lang="zh">if the value of the left expression is greater than or equal to that of the right</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu799" xml:space="preserve">
<source xml:lang="en">&lt;=</source>
<target xml:lang="zh">&lt;=</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu800" xml:space="preserve">
<source xml:lang="en">x &lt;= y</source>
<target xml:lang="zh">x &lt;= y</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu801" xml:space="preserve">
<source xml:lang="en">if the value of the left expression is less than or equal to that of the right</source>
<target xml:lang="zh">if the value of the left expression is less than or equal to that of the right</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu802" xml:space="preserve">
<source xml:lang="en">Boolean expressions</source>
<target xml:lang="zh">Boolean expressions</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu803" xml:space="preserve">
<source xml:lang="en">In computer science, a Boolean expression is an expression that produces a Boolean value when evaluated, i.e. one of <g id="1">True</g> or <g id="2">False</g>. A Boolean expression may be composed of a combination of the Boolean constants <g id="3">True</g> or <g id="4">False</g>, Boolean-typed variables, Boolean-valued operators, and Boolean-valued functions (source Wikipedia).</source>
<target xml:lang="zh">In computer science, a Boolean expression is an expression that produces a Boolean value when evaluated, i.e. one of <g id="1">True</g> or <g id="2">False</g>. A Boolean expression may be composed of a combination of the Boolean constants <g id="3">True</g> or <g id="4">False</g>, Boolean-typed variables, Boolean-valued operators, and Boolean-valued functions (source Wikipedia).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu804" xml:space="preserve">
<source xml:lang="en">Boolean operators are used in conditional statements such as IF-Then and Select-Case.</source>
<target xml:lang="zh">Boolean operators are used in conditional statements such as IF-Then and Select-Case.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu805" xml:space="preserve">
<source xml:lang="en">Operator</source>
<target xml:lang="zh">Operator</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu806" xml:space="preserve">
<source xml:lang="en">Comment</source>
<target xml:lang="zh">Comment</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu807" xml:space="preserve">
<source xml:lang="en">Or</source>
<target xml:lang="zh">Or</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu808" xml:space="preserve">
<source xml:lang="en">Boolean Or       Z = X Or Y     Z = True if X or Y is equal to True or both are True</source>
<target xml:lang="zh">Boolean Or       Z = X Or Y     Z = True if X or Y is equal to True or both are True</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu809" xml:space="preserve">
<source xml:lang="en">And</source>
<target xml:lang="zh">And</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu810" xml:space="preserve">
<source xml:lang="en">Boolean And    Z = X And Y   Z = True if X and Y are both equal to True</source>
<target xml:lang="zh">Boolean And    Z = X And Y   Z = True if X and Y are both equal to True</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu811" xml:space="preserve">
<source xml:lang="en">Not ( )</source>
<target xml:lang="zh">Not ( )</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu812" xml:space="preserve">
<source xml:lang="en">Boolean Not     X = True    Y = Not(X)   >  Y = False</source>
<target xml:lang="zh">Boolean Not     X = True    Y = Not(X)   >  Y = False</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu813" xml:space="preserve">
<source xml:lang="en">Or</source>
<target xml:lang="zh">Or</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu814" xml:space="preserve">
<source xml:lang="en">And</source>
<target xml:lang="zh">And</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu815" xml:space="preserve">
<source xml:lang="en">X</source>
<target xml:lang="zh">X</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu816" xml:space="preserve">
<source xml:lang="en">Y</source>
<target xml:lang="zh">Y</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu817" xml:space="preserve">
<source xml:lang="en">Z</source>
<target xml:lang="zh">Z</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu818" xml:space="preserve">
<source xml:lang="en">Z</source>
<target xml:lang="zh">Z</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu819" xml:space="preserve">
<source xml:lang="en">False</source>
<target xml:lang="zh">False</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu820" xml:space="preserve">
<source xml:lang="en">False</source>
<target xml:lang="zh">False</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu821" xml:space="preserve">
<source xml:lang="en">False</source>
<target xml:lang="zh">False</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu822" xml:space="preserve">
<source xml:lang="en">False</source>
<target xml:lang="zh">False</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu823" xml:space="preserve">
<source xml:lang="en">True</source>
<target xml:lang="zh">True</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu824" xml:space="preserve">
<source xml:lang="en">False</source>
<target xml:lang="zh">False</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu825" xml:space="preserve">
<source xml:lang="en">True</source>
<target xml:lang="zh">True</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu826" xml:space="preserve">
<source xml:lang="en">False</source>
<target xml:lang="zh">False</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu827" xml:space="preserve">
<source xml:lang="en">False</source>
<target xml:lang="zh">False</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu828" xml:space="preserve">
<source xml:lang="en">True</source>
<target xml:lang="zh">True</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu829" xml:space="preserve">
<source xml:lang="en">True</source>
<target xml:lang="zh">True</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu830" xml:space="preserve">
<source xml:lang="en">False</source>
<target xml:lang="zh">False</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu831" xml:space="preserve">
<source xml:lang="en">True</source>
<target xml:lang="zh">True</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu832" xml:space="preserve">
<source xml:lang="en">True</source>
<target xml:lang="zh">True</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu833" xml:space="preserve">
<source xml:lang="en">True</source>
<target xml:lang="zh">True</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu834" xml:space="preserve">
<source xml:lang="en">True</source>
<target xml:lang="zh">True</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu835" xml:space="preserve">
<source xml:lang="en">Standard keywords</source>
<target xml:lang="zh">Standard keywords</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu836" xml:space="preserve">
<source xml:lang="en">Not all keywords are available in B4R.</source>
<target xml:lang="zh">Not all keywords are available in B4R.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu837" xml:space="preserve">
<source xml:lang="en"><x id="1"/>  <g id="2">Abs</g> (<g id="3">Number</g> <g id="4">As</g> <g id="5">Double</g>) <g id="6">As</g> <g id="7">Double<x id="8"/><x id="9"/></g>  <x id="10"/>ACos<x id="11"/> (<g id="12">Value</g> <g id="13">As</g> <g id="14">Double</g>) <g id="15">As</g> <g id="16">Double<x id="17"/><x id="18"/></g>  <x id="19"/>ACosD<x id="20"/> (<g id="21">Value</g> <g id="22">As</g> <g id="23">Double</g>) <g id="24">As</g> <g id="25">Double<x id="26"/><x id="27"/></g>  <g id="28">Array</g><x id="29"/><x id="30"/>  <x id="31"/>Asc<x id="32"/> (<g id="33">Char</g> <g id="34">As</g> <g id="35">Char</g>) <g id="36">As</g> <g id="37">Int<x id="38"/><x id="39"/></g>  <x id="40"/>ASin<x id="41"/> (<g id="42">Value</g> <g id="43">As</g> <g id="44">Double</g>) <g id="45">As</g> <g id="46">Double<x id="47"/><x id="48"/></g>  <x id="49"/>ASinD<x id="50"/> (<g id="51">Value</g> <g id="52">As</g> <g id="53">Double</g>) <g id="54">As</g> <g id="55">Double<x id="56"/><x id="57"/></g>  <x id="58"/>ATan<x id="59"/> (<g id="60">Value</g> <g id="61">As</g> <g id="62">Double</g>) <g id="63">As</g> <g id="64">Double<x id="65"/><x id="66"/></g>  <g id="67">ATan2</g> (<g id="68">Y</g> <g id="69">As</g> <g id="70">Double</g>, <g id="71">X</g> <g id="72">As</g> <g id="73">Double</g>) <g id="74">As</g> <g id="75">Double<x id="76"/><x id="77"/></g>  <g id="78">ATan2D</g> (<g id="79">Y</g> <g id="80">As</g> <g id="81">Double</g>, <g id="82">X</g> <g id="83">As</g> <g id="84">Double</g>) <g id="85">As</g> <g id="86">Double<x id="87"/><x id="88"/></g>  <x id="89"/>ATanD<x id="90"/> (<g id="91">Value</g> <g id="92">As</g> <g id="93">Double</g>) <g id="94">As</g> <g id="95">Double<x id="96"/><x id="97"/></g>  <x id="98"/>BytesToString<x id="99"/> (<g id="100">Data</g>() <g id="101">As</g> <g id="102">Byte</g>, <g id="103">StartOffset</g> <g id="104">As</g> <g id="105">Int</g>, <g id="106">Length</g> <g id="107">As</g> <g id="108">Int</g>, <g id="109">CharSet</g> <g id="110">As</g> <g id="111">String</g>) <g id="112">As</g> <g id="113">String<x id="114"/><x id="115"/></g>  <g id="116">CallSub</g> (<g id="117">Component</g> <g id="118">As</g> <g id="119">Object</g>, <g id="120">Sub</g> <g id="121">As</g> <g id="122">String</g>) <g id="123">As</g> <g id="124">Object<x id="125"/><x id="126"/></g>  <g id="127">CallSub2</g> (<g id="128">Component</g> <g id="129">As</g> <g id="130">Object</g>, <g id="131">Sub</g> <g id="132">As</g> <g id="133">String</g>, <g id="134">Argument</g> <g id="135">As</g> <g id="136">Object</g>) <g id="137">As</g> <g id="138">Object<x id="139"/><x id="140"/></g>  <g id="141">CallSub3</g> (<g id="142">Component</g> <g id="143">As</g> <g id="144">Object</g>, <g id="145">Sub</g> <g id="146">As</g> <g id="147">String</g>, <g id="148">Argument1</g> <g id="149">As</g> <g id="150">Object</g>, <g id="151">Argument2</g> <g id="152">As</g> <g id="153">Object</g>) <g id="154">As</g> <g id="155">Object<x id="156"/><x id="157"/></g>  <x id="158"/>CallSub<x id="159"/><g id="160">Delayed</g> (<g id="161">Component</g> <g id="162">As</g> <g id="163">Object</g>, <g id="164">Sub</g> <g id="165">As</g> <g id="166">String</g>) <x id="167"/><x id="168"/>  <x id="169"/>CallSubDelayed<x id="170"/> 2<x id="171"/> (<g id="172">Component</g> <g id="173">As</g> <g id="174">Object</g>, <g id="175">Sub</g> <g id="176">As</g> <g id="177">String</g>, <g id="178">Argument</g> <g id="179">As</g> <g id="180">Object</g>) <x id="181"/><x id="182"/>  <x id="183"/>CallSubDelayed<x id="184"/> 3<x id="185"/> (<g id="186">Component</g> <g id="187">As</g> <g id="188">Object</g>, <g id="189">Sub</g> <g id="190">As</g> <g id="191">String</g>, <g id="192">Argument1</g> <g id="193">As</g> <g id="194">Object</g>, <g id="195">Argument2</g> <g id="196">As</g> <g id="197">Object</g>)<x id="198"/><x id="199"/>  <g id="200">Catch</g><x id="201"/><x id="202"/>  <x id="203"/>cE<x id="204"/> <g id="205">As</g> <g id="206">Double<x id="207"/><x id="208"/></g>  <g id="209">Ceil</g> (<g id="210">Number</g> <g id="211">As</g> <g id="212">Double</g>) <g id="213">As</g> <g id="214">Double<x id="215"/><x id="216"/></g>  <x id="217"/>CharsToString<x id="218"/> (<g id="219">Chars</g>() <g id="220">As</g> <g id="221">Char</g>, <g id="222">StartOffset</g> <g id="223">As</g> <g id="224">Int</g>, <g id="225">Length</g> <g id="226">As</g> <g id="227">Int</g>) <g id="228">As</g> <g id="229">String<x id="230"/><x id="231"/></g>  <x id="232"/>Chr<x id="233"/> (<g id="234">UnicodeValue</g> <g id="235">As</g> <g id="236">Int</g>) <g id="237">As</g> <g id="238">Char<x id="239"/><x id="240"/></g>  <g id="241">Continue</g><x id="242"/><x id="243"/>  <g id="244">Cos</g> (<g id="245">Radians</g> <g id="246">As</g> <g id="247">Double</g>) <g id="248">As</g> <g id="249">Double<x id="250"/><x id="251"/></g>  <x id="252"/>CosD<x id="253"/> (<g id="254">Degrees</g> <g id="255">As</g> <g id="256">Double</g>) <g id="257">As</g> <g id="258">Double<x id="259"/><x id="260"/></g>  <x id="261"/>cPI<x id="262"/> <g id="263">As</g> <g id="264">Double<x id="265"/><x id="266"/></g>  <x id="267"/>CreateMap<x id="268"/><x id="269"/><x id="270"/>  <g id="271">CRLF</g> <g id="272">As</g> <g id="273">String<x id="274"/><x id="275"/></g>  <g id="276">Dim</g><x id="277"/><x id="278"/>  <g id="279">Exit</g><x id="280"/><x id="281"/>  <g id="282">False</g> <g id="283">As</g> <g id="284">Boolean<x id="285"/><x id="286"/></g>  <g id="287">Floor</g> (<g id="288">Number</g> <g id="289">As</g> <g id="290">Double</g>) <g id="291">As</g> <g id="292">Double<x id="293"/><x id="294"/></g>  <g id="295">For</g><x id="296"/><x id="297"/>  <x id="298"/>GetType<x id="299"/> (<g id="300">object</g> <g id="301">As</g> <g id="302">Object</g>) <g id="303">As</g> <g id="304">String<x id="305"/><x id="306"/></g>  <g id="307">If</g><x id="308"/><x id="309"/>  <g id="310">Is</g><x id="311"/><x id="312"/>  <x id="313"/>IsNumber<x id="314"/> (<g id="315">Text</g> <g id="316">As</g> <g id="317">String</g>) <g id="318">As</g> <g id="319">Boolean<x id="320"/><x id="321"/></g>  <x id="322"/>LoadBitmap<x id="323"/> (<g id="324">Dir</g> <g id="325">As</g> <g id="326">String</g>, <g id="327">FileName</g> <g id="328">As</g> <g id="329">String</g>) <g id="330">As</g> <g id="331">Bitmap<x id="332"/><x id="333"/></g>  <x id="334"/>LoadBitmapResize<x id="335"/> (<g id="336">Dir</g> <g id="337">As</g> <g id="338">String</g>, <g id="339">FileName</g> <g id="340">As</g> <g id="341">String</g>, <g id="342">Width</g> <g id="343">As</g> <g id="344">Int</g>, <g id="345">Height</g> <g id="346">As</g> <g id="347">Int</g>, <g id="348">KeepAspectRatio</g> <g id="349">As</g> <g id="350">Boolean</g>) <g id="351">As</g> <g id="352">Bitmap<x id="353"/></g></source>
<target xml:lang="zh"><x id="1"/>  <g id="2">Abs</g> (<g id="3">Number</g> <g id="4">As</g> <g id="5">Double</g>) <g id="6">As</g> <g id="7">Double<x id="8"/><x id="9"/></g>  <x id="10"/>ACos<x id="11"/> (<g id="12">Value</g> <g id="13">As</g> <g id="14">Double</g>) <g id="15">As</g> <g id="16">Double<x id="17"/><x id="18"/></g>  <x id="19"/>ACosD<x id="20"/> (<g id="21">Value</g> <g id="22">As</g> <g id="23">Double</g>) <g id="24">As</g> <g id="25">Double<x id="26"/><x id="27"/></g>  <g id="28">Array</g><x id="29"/><x id="30"/>  <x id="31"/>Asc<x id="32"/> (<g id="33">Char</g> <g id="34">As</g> <g id="35">Char</g>) <g id="36">As</g> <g id="37">Int<x id="38"/><x id="39"/></g>  <x id="40"/>ASin<x id="41"/> (<g id="42">Value</g> <g id="43">As</g> <g id="44">Double</g>) <g id="45">As</g> <g id="46">Double<x id="47"/><x id="48"/></g>  <x id="49"/>ASinD<x id="50"/> (<g id="51">Value</g> <g id="52">As</g> <g id="53">Double</g>) <g id="54">As</g> <g id="55">Double<x id="56"/><x id="57"/></g>  <x id="58"/>ATan<x id="59"/> (<g id="60">Value</g> <g id="61">As</g> <g id="62">Double</g>) <g id="63">As</g> <g id="64">Double<x id="65"/><x id="66"/></g>  <g id="67">ATan2</g> (<g id="68">Y</g> <g id="69">As</g> <g id="70">Double</g>, <g id="71">X</g> <g id="72">As</g> <g id="73">Double</g>) <g id="74">As</g> <g id="75">Double<x id="76"/><x id="77"/></g>  <g id="78">ATan2D</g> (<g id="79">Y</g> <g id="80">As</g> <g id="81">Double</g>, <g id="82">X</g> <g id="83">As</g> <g id="84">Double</g>) <g id="85">As</g> <g id="86">Double<x id="87"/><x id="88"/></g>  <x id="89"/>ATanD<x id="90"/> (<g id="91">Value</g> <g id="92">As</g> <g id="93">Double</g>) <g id="94">As</g> <g id="95">Double<x id="96"/><x id="97"/></g>  <x id="98"/>BytesToString<x id="99"/> (<g id="100">Data</g>() <g id="101">As</g> <g id="102">Byte</g>, <g id="103">StartOffset</g> <g id="104">As</g> <g id="105">Int</g>, <g id="106">Length</g> <g id="107">As</g> <g id="108">Int</g>, <g id="109">CharSet</g> <g id="110">As</g> <g id="111">String</g>) <g id="112">As</g> <g id="113">String<x id="114"/><x id="115"/></g>  <g id="116">CallSub</g> (<g id="117">Component</g> <g id="118">As</g> <g id="119">Object</g>, <g id="120">Sub</g> <g id="121">As</g> <g id="122">String</g>) <g id="123">As</g> <g id="124">Object<x id="125"/><x id="126"/></g>  <g id="127">CallSub2</g> (<g id="128">Component</g> <g id="129">As</g> <g id="130">Object</g>, <g id="131">Sub</g> <g id="132">As</g> <g id="133">String</g>, <g id="134">Argument</g> <g id="135">As</g> <g id="136">Object</g>) <g id="137">As</g> <g id="138">Object<x id="139"/><x id="140"/></g>  <g id="141">CallSub3</g> (<g id="142">Component</g> <g id="143">As</g> <g id="144">Object</g>, <g id="145">Sub</g> <g id="146">As</g> <g id="147">String</g>, <g id="148">Argument1</g> <g id="149">As</g> <g id="150">Object</g>, <g id="151">Argument2</g> <g id="152">As</g> <g id="153">Object</g>) <g id="154">As</g> <g id="155">Object<x id="156"/><x id="157"/></g>  <x id="158"/>CallSub<x id="159"/><g id="160">Delayed</g> (<g id="161">Component</g> <g id="162">As</g> <g id="163">Object</g>, <g id="164">Sub</g> <g id="165">As</g> <g id="166">String</g>) <x id="167"/><x id="168"/>  <x id="169"/>CallSubDelayed<x id="170"/> 2<x id="171"/> (<g id="172">Component</g> <g id="173">As</g> <g id="174">Object</g>, <g id="175">Sub</g> <g id="176">As</g> <g id="177">String</g>, <g id="178">Argument</g> <g id="179">As</g> <g id="180">Object</g>) <x id="181"/><x id="182"/>  <x id="183"/>CallSubDelayed<x id="184"/> 3<x id="185"/> (<g id="186">Component</g> <g id="187">As</g> <g id="188">Object</g>, <g id="189">Sub</g> <g id="190">As</g> <g id="191">String</g>, <g id="192">Argument1</g> <g id="193">As</g> <g id="194">Object</g>, <g id="195">Argument2</g> <g id="196">As</g> <g id="197">Object</g>)<x id="198"/><x id="199"/>  <g id="200">Catch</g><x id="201"/><x id="202"/>  <x id="203"/>cE<x id="204"/> <g id="205">As</g> <g id="206">Double<x id="207"/><x id="208"/></g>  <g id="209">Ceil</g> (<g id="210">Number</g> <g id="211">As</g> <g id="212">Double</g>) <g id="213">As</g> <g id="214">Double<x id="215"/><x id="216"/></g>  <x id="217"/>CharsToString<x id="218"/> (<g id="219">Chars</g>() <g id="220">As</g> <g id="221">Char</g>, <g id="222">StartOffset</g> <g id="223">As</g> <g id="224">Int</g>, <g id="225">Length</g> <g id="226">As</g> <g id="227">Int</g>) <g id="228">As</g> <g id="229">String<x id="230"/><x id="231"/></g>  <x id="232"/>Chr<x id="233"/> (<g id="234">UnicodeValue</g> <g id="235">As</g> <g id="236">Int</g>) <g id="237">As</g> <g id="238">Char<x id="239"/><x id="240"/></g>  <g id="241">Continue</g><x id="242"/><x id="243"/>  <g id="244">Cos</g> (<g id="245">Radians</g> <g id="246">As</g> <g id="247">Double</g>) <g id="248">As</g> <g id="249">Double<x id="250"/><x id="251"/></g>  <x id="252"/>CosD<x id="253"/> (<g id="254">Degrees</g> <g id="255">As</g> <g id="256">Double</g>) <g id="257">As</g> <g id="258">Double<x id="259"/><x id="260"/></g>  <x id="261"/>cPI<x id="262"/> <g id="263">As</g> <g id="264">Double<x id="265"/><x id="266"/></g>  <x id="267"/>CreateMap<x id="268"/><x id="269"/><x id="270"/>  <g id="271">CRLF</g> <g id="272">As</g> <g id="273">String<x id="274"/><x id="275"/></g>  <g id="276">Dim</g><x id="277"/><x id="278"/>  <g id="279">Exit</g><x id="280"/><x id="281"/>  <g id="282">False</g> <g id="283">As</g> <g id="284">Boolean<x id="285"/><x id="286"/></g>  <g id="287">Floor</g> (<g id="288">Number</g> <g id="289">As</g> <g id="290">Double</g>) <g id="291">As</g> <g id="292">Double<x id="293"/><x id="294"/></g>  <g id="295">For</g><x id="296"/><x id="297"/>  <x id="298"/>GetType<x id="299"/> (<g id="300">object</g> <g id="301">As</g> <g id="302">Object</g>) <g id="303">As</g> <g id="304">String<x id="305"/><x id="306"/></g>  <g id="307">If</g><x id="308"/><x id="309"/>  <g id="310">Is</g><x id="311"/><x id="312"/>  <x id="313"/>IsNumber<x id="314"/> (<g id="315">Text</g> <g id="316">As</g> <g id="317">String</g>) <g id="318">As</g> <g id="319">Boolean<x id="320"/><x id="321"/></g>  <x id="322"/>LoadBitmap<x id="323"/> (<g id="324">Dir</g> <g id="325">As</g> <g id="326">String</g>, <g id="327">FileName</g> <g id="328">As</g> <g id="329">String</g>) <g id="330">As</g> <g id="331">Bitmap<x id="332"/><x id="333"/></g>  <x id="334"/>LoadBitmapResize<x id="335"/> (<g id="336">Dir</g> <g id="337">As</g> <g id="338">String</g>, <g id="339">FileName</g> <g id="340">As</g> <g id="341">String</g>, <g id="342">Width</g> <g id="343">As</g> <g id="344">Int</g>, <g id="345">Height</g> <g id="346">As</g> <g id="347">Int</g>, <g id="348">KeepAspectRatio</g> <g id="349">As</g> <g id="350">Boolean</g>) <g id="351">As</g> <g id="352">Bitmap<x id="353"/></g></target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub1" xml:space="preserve">
<source xml:lang="en">Image 101</source>
<target xml:lang="zh">Image 101</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub2" xml:space="preserve">
<source xml:lang="en">Picture 2</source>
<target xml:lang="zh">Picture 2</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub3" xml:space="preserve">
<source xml:lang="en">Image 100</source>
<target xml:lang="zh">Image 100</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub4" xml:space="preserve">
<source xml:lang="en">Picture 3</source>
<target xml:lang="zh">Picture 3</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub5" xml:space="preserve">
<source xml:lang="en">Image 99</source>
<target xml:lang="zh">Image 99</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub6" xml:space="preserve">
<source xml:lang="en">Picture 4</source>
<target xml:lang="zh">Picture 4</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub7" xml:space="preserve">
<source xml:lang="en">Image 98</source>
<target xml:lang="zh">Image 98</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub8" xml:space="preserve">
<source xml:lang="en">Picture 5</source>
<target xml:lang="zh">Picture 5</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub9" xml:space="preserve">
<source xml:lang="en">Image 97</source>
<target xml:lang="zh">Image 97</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub10" xml:space="preserve">
<source xml:lang="en">Picture 6</source>
<target xml:lang="zh">Picture 6</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub11" xml:space="preserve">
<source xml:lang="en">Image 96</source>
<target xml:lang="zh">Image 96</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub12" xml:space="preserve">
<source xml:lang="en">Picture 7</source>
<target xml:lang="zh">Picture 7</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub13" xml:space="preserve">
<source xml:lang="en">Image 95</source>
<target xml:lang="zh">Image 95</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub14" xml:space="preserve">
<source xml:lang="en">Picture 8</source>
<target xml:lang="zh">Picture 8</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub15" xml:space="preserve">
<source xml:lang="en">Image 94</source>
<target xml:lang="zh">Image 94</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub16" xml:space="preserve">
<source xml:lang="en">Picture 9</source>
<target xml:lang="zh">Picture 9</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub17" xml:space="preserve">
<source xml:lang="en">Image 93</source>
<target xml:lang="zh">Image 93</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub18" xml:space="preserve">
<source xml:lang="en">Picture 10</source>
<target xml:lang="zh">Picture 10</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub19" xml:space="preserve">
<source xml:lang="en">Image 92</source>
<target xml:lang="zh">Image 92</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub20" xml:space="preserve">
<source xml:lang="en">Picture 11</source>
<target xml:lang="zh">Picture 11</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub21" xml:space="preserve">
<source xml:lang="en">Image 91</source>
<target xml:lang="zh">Image 91</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub22" xml:space="preserve">
<source xml:lang="en">Picture 12</source>
<target xml:lang="zh">Picture 12</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub23" xml:space="preserve">
<source xml:lang="en">Image 90</source>
<target xml:lang="zh">Image 90</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub24" xml:space="preserve">
<source xml:lang="en">Picture 13</source>
<target xml:lang="zh">Picture 13</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub25" xml:space="preserve">
<source xml:lang="en">Image 89</source>
<target xml:lang="zh">Image 89</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub26" xml:space="preserve">
<source xml:lang="en">Picture 14</source>
<target xml:lang="zh">Picture 14</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub27" xml:space="preserve">
<source xml:lang="en">Image 88</source>
<target xml:lang="zh">Image 88</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub28" xml:space="preserve">
<source xml:lang="en">Picture 15</source>
<target xml:lang="zh">Picture 15</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub29" xml:space="preserve">
<source xml:lang="en">Image 1879</source>
<target xml:lang="zh">Image 1879</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub30" xml:space="preserve">
<source xml:lang="en">Picture 13</source>
<target xml:lang="zh">Picture 13</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub31" xml:space="preserve">
<source xml:lang="en">Image 1880</source>
<target xml:lang="zh">Image 1880</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub32" xml:space="preserve">
<source xml:lang="en">Picture 14</source>
<target xml:lang="zh">Picture 14</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub33" xml:space="preserve">
<source xml:lang="en">Image 1881</source>
<target xml:lang="zh">Image 1881</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub34" xml:space="preserve">
<source xml:lang="en">Picture 15</source>
<target xml:lang="zh">Picture 15</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub35" xml:space="preserve">
<source xml:lang="en">Image 83</source>
<target xml:lang="zh">Image 83</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub36" xml:space="preserve">
<source xml:lang="en">Picture 20</source>
<target xml:lang="zh">Picture 20</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub37" xml:space="preserve">
<source xml:lang="en">Image 82</source>
<target xml:lang="zh">Image 82</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub38" xml:space="preserve">
<source xml:lang="en">Picture 21</source>
<target xml:lang="zh">Picture 21</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub39" xml:space="preserve">
<source xml:lang="en">Image 81</source>
<target xml:lang="zh">Image 81</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub40" xml:space="preserve">
<source xml:lang="en">Picture 22</source>
<target xml:lang="zh">Picture 22</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub41" xml:space="preserve">
<source xml:lang="en">Image 80</source>
<target xml:lang="zh">Image 80</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub42" xml:space="preserve">
<source xml:lang="en">Picture 23</source>
<target xml:lang="zh">Picture 23</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub43" xml:space="preserve">
<source xml:lang="en">Image 79</source>
<target xml:lang="zh">Image 79</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub44" xml:space="preserve">
<source xml:lang="en">Picture 24</source>
<target xml:lang="zh">Picture 24</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub45" xml:space="preserve">
<source xml:lang="en">Image 77</source>
<target xml:lang="zh">Image 77</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub46" xml:space="preserve">
<source xml:lang="en">Picture 26</source>
<target xml:lang="zh">Picture 26</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub47" xml:space="preserve">
<source xml:lang="en">Image 76</source>
<target xml:lang="zh">Image 76</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub48" xml:space="preserve">
<source xml:lang="en">Picture 27</source>
<target xml:lang="zh">Picture 27</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub49" xml:space="preserve">
<source xml:lang="en">Image 75</source>
<target xml:lang="zh">Image 75</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub50" xml:space="preserve">
<source xml:lang="en">Picture 28</source>
<target xml:lang="zh">Picture 28</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub51" xml:space="preserve">
<source xml:lang="en">Image 74</source>
<target xml:lang="zh">Image 74</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub52" xml:space="preserve">
<source xml:lang="en">Picture 29</source>
<target xml:lang="zh">Picture 29</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub53" xml:space="preserve">
<source xml:lang="en">Image 1882</source>
<target xml:lang="zh">Image 1882</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub54" xml:space="preserve">
<source xml:lang="en">Picture 20</source>
<target xml:lang="zh">Picture 20</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub55" xml:space="preserve">
<source xml:lang="en">Image 72</source>
<target xml:lang="zh">Image 72</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub56" xml:space="preserve">
<source xml:lang="en">Picture 31</source>
<target xml:lang="zh">Picture 31</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub57" xml:space="preserve">
<source xml:lang="en">Image 70</source>
<target xml:lang="zh">Image 70</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub58" xml:space="preserve">
<source xml:lang="en">Picture 33</source>
<target xml:lang="zh">Picture 33</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub59" xml:space="preserve">
<source xml:lang="en">Image 67</source>
<target xml:lang="zh">Image 67</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub60" xml:space="preserve">
<source xml:lang="en">Picture 36</source>
<target xml:lang="zh">Picture 36</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub61" xml:space="preserve">
<source xml:lang="en">Image 65</source>
<target xml:lang="zh">Image 65</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub62" xml:space="preserve">
<source xml:lang="en">Picture 38</source>
<target xml:lang="zh">Picture 38</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub63" xml:space="preserve">
<source xml:lang="en">Image 63</source>
<target xml:lang="zh">Image 63</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub64" xml:space="preserve">
<source xml:lang="en">Picture 40</source>
<target xml:lang="zh">Picture 40</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub65" xml:space="preserve">
<source xml:lang="en">Image 62</source>
<target xml:lang="zh">Image 62</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub66" xml:space="preserve">
<source xml:lang="en">Picture 41</source>
<target xml:lang="zh">Picture 41</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub67" xml:space="preserve">
<source xml:lang="en">Image 60</source>
<target xml:lang="zh">Image 60</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub68" xml:space="preserve">
<source xml:lang="en">Picture 43</source>
<target xml:lang="zh">Picture 43</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub69" xml:space="preserve">
<source xml:lang="en">Image 59</source>
<target xml:lang="zh">Image 59</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub70" xml:space="preserve">
<source xml:lang="en">Picture 44</source>
<target xml:lang="zh">Picture 44</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub71" xml:space="preserve">
<source xml:lang="en">Image 55</source>
<target xml:lang="zh">Image 55</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub72" xml:space="preserve">
<source xml:lang="en">Picture 48</source>
<target xml:lang="zh">Picture 48</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub73" xml:space="preserve">
<source xml:lang="en">Image 52</source>
<target xml:lang="zh">Image 52</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub74" xml:space="preserve">
<source xml:lang="en">Picture 51</source>
<target xml:lang="zh">Picture 51</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub75" xml:space="preserve">
<source xml:lang="en">Image 49</source>
<target xml:lang="zh">Image 49</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub76" xml:space="preserve">
<source xml:lang="en">Picture 54</source>
<target xml:lang="zh">Picture 54</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub77" xml:space="preserve">
<source xml:lang="en">Image 1861</source>
<target xml:lang="zh">Image 1861</target>
</trans-unit>
<trans-unit id="N98F0BEA6-sub78" xml:space="preserve">
<source xml:lang="en">Picture 8</source>
<target xml:lang="zh">Picture 8</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu838" xml:space="preserve">
<source xml:lang="en">  <x id="1"/>LoadBitmapSample<x id="2"/> (<g id="3">Dir</g> <g id="4">As</g> <g id="5">String</g>, <g id="6">FileName</g> <g id="7">As</g> <g id="8">String</g>, <g id="9">MaxWidth</g> <g id="10">As</g> <g id="11">Int</g>, <g id="12">MaxHeight</g> <g id="13">As</g> <g id="14">Int</g>) <g id="15">As</g> <g id="16">Bitmap<x id="17"/><x id="18"/></g>  <g id="19">Log</g> (<g id="20">Message</g> <g id="21">As</g> <g id="22">String</g>)<x id="23"/><x id="24"/>  <g id="25">Logarithm</g> (<g id="26">Number</g> <g id="27">As</g> <g id="28">Double</g>, <g id="29">Base</g> <g id="30">As</g> <g id="31">Double</g>) <g id="32">As</g> <g id="33">Double<x id="34"/><x id="35"/></g>  <x id="36"/>LogColor<x id="37"/> (<g id="38">Message</g> <g id="39">As</g> <g id="40">String</g>, <g id="41">Color</g> <g id="42">As</g> <g id="43">Int</g>)<x id="44"/><x id="45"/>  <g id="46">Max</g> (<g id="47">Number1</g> <g id="48">As</g> <g id="49">Double</g>, <g id="50">Number2</g> <g id="51">As</g> <g id="52">Double</g>) <g id="53">As</g> <g id="54">Double<x id="55"/><x id="56"/></g>  <g id="57">Me</g> <g id="58">As</g> <g id="59">Object<x id="60"/><x id="61"/></g>  <g id="62">Min</g> (<g id="63">Number1</g> <g id="64">As</g> <g id="65">Double</g>, <g id="66">Number2</g> <g id="67">As</g> <g id="68">Double</g>) <g id="69">As</g> <g id="70">Double<x id="71"/><x id="72"/></g>  <g id="73">Not</g> (<g id="74">Value</g> <g id="75">As</g> <g id="76">Boolean</g>) <g id="77">As</g> <g id="78">Boolean</g><x id="79"/>  <g id="80">Null</g> <g id="81">As</g> <g id="82">Object<x id="83"/><x id="84"/></g>  <x id="85"/>NumberFormat<x id="86"/> (<g id="87">Number</g> <g id="88">As</g> <g id="89">Double</g>, <g id="90">MinimumIntegers</g> <g id="91">As</g> <g id="92">Int</g>, <g id="93">MaximumFractions</g> <g id="94">As</g> <g id="95">Int</g>) <g id="96">As</g> <g id="97">String<x id="98"/><x id="99"/></g>  <g id="100">NumberFormat2</g> (<g id="101">Number</g> <g id="102">As</g> <g id="103">Double</g>, <g id="104">MinimumIntegers</g> <g id="105">As</g> <g id="106">Int</g>, <g id="107">MaximumFractions</g> <g id="108">As</g> <g id="109">Int</g>, <g id="110">MinimumFractions</g> <g id="111">As</g> <g id="112">Int</g>, <g id="113">GroupingUsed</g> <g id="114">As</g> <g id="115">Boolean</g>) <g id="116">As</g> <g id="117">String<x id="118"/><x id="119"/></g>  <g id="120">Power</g> (<g id="121">Base</g> <g id="122">As</g> <g id="123">Double</g>, <g id="124">Exponent</g> <g id="125">As</g> <g id="126">Double</g>) <g id="127">As</g> <g id="128">Double<x id="129"/><x id="130"/></g>  <g id="131">QUOTE</g> <g id="132">As</g> <g id="133">String<x id="134"/><x id="135"/></g>  <g id="136">Regex</g> <g id="137">As</g> <g id="138">Regex<x id="139"/><x id="140"/></g>  <g id="141">Return</g><x id="142"/><x id="143"/>  <x id="144"/>Rnd<x id="145"/> (<g id="146">Min</g> <g id="147">As</g> <g id="148">Int</g>, <g id="149">Max</g> <g id="150">As</g> <g id="151">Int</g>) <g id="152">As</g> <g id="153">Int<x id="154"/><x id="155"/></g>  <x id="156"/>RndSeed<x id="157"/> (<g id="158">Seed</g> <g id="159">As</g> <g id="160">Long</g>)<x id="161"/><x id="162"/>  <g id="163">Round</g> (<g id="164">Number</g> <g id="165">As</g> <g id="166">Double</g>) <g id="167">As</g> <g id="168">Long<x id="169"/><x id="170"/></g>  <g id="171">Round2</g> (<g id="172">Number</g> <g id="173">As</g> <g id="174">Double</g>, <g id="175">DecimalPlaces</g> <g id="176">As</g> <g id="177">Int</g>) <g id="178">As</g> <g id="179">Double<x id="180"/><x id="181"/></g>  <g id="182">Select</g><x id="183"/><x id="184"/>  <g id="185">Sender</g> <g id="186">As</g> <g id="187">Object<x id="188"/><x id="189"/></g>  <g id="190">Sin</g> (<g id="191">Radians</g> <g id="192">As</g> <g id="193">Double</g>) <g id="194">As</g> <g id="195">Double<x id="196"/><x id="197"/></g>  <x id="198"/>SinD<x id="199"/> (<g id="200">Degrees</g> <g id="201">As</g> <g id="202">Double</g>) <g id="203">As</g> <g id="204">Double</g></source>
<target xml:lang="zh">  <x id="1"/>LoadBitmapSample<x id="2"/> (<g id="3">Dir</g> <g id="4">As</g> <g id="5">String</g>, <g id="6">FileName</g> <g id="7">As</g> <g id="8">String</g>, <g id="9">MaxWidth</g> <g id="10">As</g> <g id="11">Int</g>, <g id="12">MaxHeight</g> <g id="13">As</g> <g id="14">Int</g>) <g id="15">As</g> <g id="16">Bitmap<x id="17"/><x id="18"/></g>  <g id="19">Log</g> (<g id="20">Message</g> <g id="21">As</g> <g id="22">String</g>)<x id="23"/><x id="24"/>  <g id="25">Logarithm</g> (<g id="26">Number</g> <g id="27">As</g> <g id="28">Double</g>, <g id="29">Base</g> <g id="30">As</g> <g id="31">Double</g>) <g id="32">As</g> <g id="33">Double<x id="34"/><x id="35"/></g>  <x id="36"/>LogColor<x id="37"/> (<g id="38">Message</g> <g id="39">As</g> <g id="40">String</g>, <g id="41">Color</g> <g id="42">As</g> <g id="43">Int</g>)<x id="44"/><x id="45"/>  <g id="46">Max</g> (<g id="47">Number1</g> <g id="48">As</g> <g id="49">Double</g>, <g id="50">Number2</g> <g id="51">As</g> <g id="52">Double</g>) <g id="53">As</g> <g id="54">Double<x id="55"/><x id="56"/></g>  <g id="57">Me</g> <g id="58">As</g> <g id="59">Object<x id="60"/><x id="61"/></g>  <g id="62">Min</g> (<g id="63">Number1</g> <g id="64">As</g> <g id="65">Double</g>, <g id="66">Number2</g> <g id="67">As</g> <g id="68">Double</g>) <g id="69">As</g> <g id="70">Double<x id="71"/><x id="72"/></g>  <g id="73">Not</g> (<g id="74">Value</g> <g id="75">As</g> <g id="76">Boolean</g>) <g id="77">As</g> <g id="78">Boolean</g><x id="79"/>  <g id="80">Null</g> <g id="81">As</g> <g id="82">Object<x id="83"/><x id="84"/></g>  <x id="85"/>NumberFormat<x id="86"/> (<g id="87">Number</g> <g id="88">As</g> <g id="89">Double</g>, <g id="90">MinimumIntegers</g> <g id="91">As</g> <g id="92">Int</g>, <g id="93">MaximumFractions</g> <g id="94">As</g> <g id="95">Int</g>) <g id="96">As</g> <g id="97">String<x id="98"/><x id="99"/></g>  <g id="100">NumberFormat2</g> (<g id="101">Number</g> <g id="102">As</g> <g id="103">Double</g>, <g id="104">MinimumIntegers</g> <g id="105">As</g> <g id="106">Int</g>, <g id="107">MaximumFractions</g> <g id="108">As</g> <g id="109">Int</g>, <g id="110">MinimumFractions</g> <g id="111">As</g> <g id="112">Int</g>, <g id="113">GroupingUsed</g> <g id="114">As</g> <g id="115">Boolean</g>) <g id="116">As</g> <g id="117">String<x id="118"/><x id="119"/></g>  <g id="120">Power</g> (<g id="121">Base</g> <g id="122">As</g> <g id="123">Double</g>, <g id="124">Exponent</g> <g id="125">As</g> <g id="126">Double</g>) <g id="127">As</g> <g id="128">Double<x id="129"/><x id="130"/></g>  <g id="131">QUOTE</g> <g id="132">As</g> <g id="133">String<x id="134"/><x id="135"/></g>  <g id="136">Regex</g> <g id="137">As</g> <g id="138">Regex<x id="139"/><x id="140"/></g>  <g id="141">Return</g><x id="142"/><x id="143"/>  <x id="144"/>Rnd<x id="145"/> (<g id="146">Min</g> <g id="147">As</g> <g id="148">Int</g>, <g id="149">Max</g> <g id="150">As</g> <g id="151">Int</g>) <g id="152">As</g> <g id="153">Int<x id="154"/><x id="155"/></g>  <x id="156"/>RndSeed<x id="157"/> (<g id="158">Seed</g> <g id="159">As</g> <g id="160">Long</g>)<x id="161"/><x id="162"/>  <g id="163">Round</g> (<g id="164">Number</g> <g id="165">As</g> <g id="166">Double</g>) <g id="167">As</g> <g id="168">Long<x id="169"/><x id="170"/></g>  <g id="171">Round2</g> (<g id="172">Number</g> <g id="173">As</g> <g id="174">Double</g>, <g id="175">DecimalPlaces</g> <g id="176">As</g> <g id="177">Int</g>) <g id="178">As</g> <g id="179">Double<x id="180"/><x id="181"/></g>  <g id="182">Select</g><x id="183"/><x id="184"/>  <g id="185">Sender</g> <g id="186">As</g> <g id="187">Object<x id="188"/><x id="189"/></g>  <g id="190">Sin</g> (<g id="191">Radians</g> <g id="192">As</g> <g id="193">Double</g>) <g id="194">As</g> <g id="195">Double<x id="196"/><x id="197"/></g>  <x id="198"/>SinD<x id="199"/> (<g id="200">Degrees</g> <g id="201">As</g> <g id="202">Double</g>) <g id="203">As</g> <g id="204">Double</g></target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub1" xml:space="preserve">
<source xml:lang="en">Image 48</source>
<target xml:lang="zh">Image 48</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub2" xml:space="preserve">
<source xml:lang="en">Picture 55</source>
<target xml:lang="zh">Picture 55</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub3" xml:space="preserve">
<source xml:lang="en">Image 47</source>
<target xml:lang="zh">Image 47</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub4" xml:space="preserve">
<source xml:lang="en">Picture 56</source>
<target xml:lang="zh">Picture 56</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub5" xml:space="preserve">
<source xml:lang="en">Image 46</source>
<target xml:lang="zh">Image 46</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub6" xml:space="preserve">
<source xml:lang="en">Picture 57</source>
<target xml:lang="zh">Picture 57</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub7" xml:space="preserve">
<source xml:lang="en">Image 45</source>
<target xml:lang="zh">Image 45</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub8" xml:space="preserve">
<source xml:lang="en">Picture 58</source>
<target xml:lang="zh">Picture 58</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub9" xml:space="preserve">
<source xml:lang="en">Image 44</source>
<target xml:lang="zh">Image 44</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub10" xml:space="preserve">
<source xml:lang="en">Picture 59</source>
<target xml:lang="zh">Picture 59</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub11" xml:space="preserve">
<source xml:lang="en">Image 43</source>
<target xml:lang="zh">Image 43</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub12" xml:space="preserve">
<source xml:lang="en">Picture 60</source>
<target xml:lang="zh">Picture 60</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub13" xml:space="preserve">
<source xml:lang="en">Image 42</source>
<target xml:lang="zh">Image 42</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub14" xml:space="preserve">
<source xml:lang="en">Picture 61</source>
<target xml:lang="zh">Picture 61</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub15" xml:space="preserve">
<source xml:lang="en">Image 39</source>
<target xml:lang="zh">Image 39</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub16" xml:space="preserve">
<source xml:lang="en">Picture 64</source>
<target xml:lang="zh">Picture 64</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub17" xml:space="preserve">
<source xml:lang="en">Image 37</source>
<target xml:lang="zh">Image 37</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub18" xml:space="preserve">
<source xml:lang="en">Picture 66</source>
<target xml:lang="zh">Picture 66</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub19" xml:space="preserve">
<source xml:lang="en">Image 36</source>
<target xml:lang="zh">Image 36</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub20" xml:space="preserve">
<source xml:lang="en">Picture 67</source>
<target xml:lang="zh">Picture 67</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub21" xml:space="preserve">
<source xml:lang="en">Image 33</source>
<target xml:lang="zh">Image 33</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub22" xml:space="preserve">
<source xml:lang="en">Picture 70</source>
<target xml:lang="zh">Picture 70</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub23" xml:space="preserve">
<source xml:lang="en">Image 29</source>
<target xml:lang="zh">Image 29</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub24" xml:space="preserve">
<source xml:lang="en">Picture 74</source>
<target xml:lang="zh">Picture 74</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub25" xml:space="preserve">
<source xml:lang="en">Image 28</source>
<target xml:lang="zh">Image 28</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub26" xml:space="preserve">
<source xml:lang="en">Picture 75</source>
<target xml:lang="zh">Picture 75</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub27" xml:space="preserve">
<source xml:lang="en">Image 27</source>
<target xml:lang="zh">Image 27</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub28" xml:space="preserve">
<source xml:lang="en">Picture 76</source>
<target xml:lang="zh">Picture 76</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub29" xml:space="preserve">
<source xml:lang="en">Image 26</source>
<target xml:lang="zh">Image 26</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub30" xml:space="preserve">
<source xml:lang="en">Picture 77</source>
<target xml:lang="zh">Picture 77</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub31" xml:space="preserve">
<source xml:lang="en">Image 25</source>
<target xml:lang="zh">Image 25</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub32" xml:space="preserve">
<source xml:lang="en">Picture 78</source>
<target xml:lang="zh">Picture 78</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub33" xml:space="preserve">
<source xml:lang="en">Image 24</source>
<target xml:lang="zh">Image 24</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub34" xml:space="preserve">
<source xml:lang="en">Picture 79</source>
<target xml:lang="zh">Picture 79</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub35" xml:space="preserve">
<source xml:lang="en">Image 23</source>
<target xml:lang="zh">Image 23</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub36" xml:space="preserve">
<source xml:lang="en">Picture 80</source>
<target xml:lang="zh">Picture 80</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub37" xml:space="preserve">
<source xml:lang="en">Image 22</source>
<target xml:lang="zh">Image 22</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub38" xml:space="preserve">
<source xml:lang="en">Picture 81</source>
<target xml:lang="zh">Picture 81</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub39" xml:space="preserve">
<source xml:lang="en">Image 21</source>
<target xml:lang="zh">Image 21</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub40" xml:space="preserve">
<source xml:lang="en">Picture 82</source>
<target xml:lang="zh">Picture 82</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub41" xml:space="preserve">
<source xml:lang="en">Image 20</source>
<target xml:lang="zh">Image 20</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub42" xml:space="preserve">
<source xml:lang="en">Picture 83</source>
<target xml:lang="zh">Picture 83</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub43" xml:space="preserve">
<source xml:lang="en">Image 19</source>
<target xml:lang="zh">Image 19</target>
</trans-unit>
<trans-unit id="N98F0BEA7-sub44" xml:space="preserve">
<source xml:lang="en">Picture 84</source>
<target xml:lang="zh">Picture 84</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu839" xml:space="preserve">
<source xml:lang="en">  <g id="1">Sleep</g> (<g id="2">Milliseconds</g> <g id="3">As</g> <g id="4">Int</g>)<x id="5"/><x id="6"/>  <x id="7"/>SmartStringFormatter<x id="8"/> (<g id="9">Format</g> <g id="10">As</g> <g id="11">String</g>, <g id="12">Value</g> <g id="13">As</g> <g id="14">Object</g>) <g id="15">As</g> <g id="16">String<x id="17"/><x id="18"/></g>  <g id="19">Sqrt</g> (<g id="20">Value</g> <g id="21">As</g> <g id="22">Double</g>) <g id="23">As</g> <g id="24">Double<x id="25"/><x id="26"/></g>  <g id="27">Sub</g><x id="28"/><x id="29"/>  <x id="30"/>SubExists<x id="31"/> (<g id="32">Object</g> <g id="33">As</g> <g id="34">Object</g>, <g id="35">Sub</g> <g id="36">As</g> <g id="37">String</g>) <g id="38">As</g> <g id="39">Boolean<x id="40"/><x id="41"/></g>  <g id="42">TAB</g> <g id="43">As</g> <g id="44">String<x id="45"/><x id="46"/></g>  <g id="47">Tan</g> (<g id="48">Radians</g> <g id="49">As</g> <g id="50">Double</g>) <g id="51">As</g> <g id="52">Double<x id="53"/><x id="54"/></g>  <x id="55"/>TanD<x id="56"/> (<g id="57">Degrees</g> <g id="58">As</g> <g id="59">Double</g>) <g id="60">As</g> <g id="61">Double<x id="62"/><x id="63"/></g>  <g id="64">True</g> <g id="65">As</g> <g id="66">Boolean<x id="67"/><x id="68"/></g>  <g id="69">Try</g><x id="70"/><x id="71"/>  <g id="72">Type</g><x id="73"/><x id="74"/>  <g id="75">Until</g><x id="76"/><x id="77"/>  <g id="78">While</g></source>
<target xml:lang="zh">  <g id="1">Sleep</g> (<g id="2">Milliseconds</g> <g id="3">As</g> <g id="4">Int</g>)<x id="5"/><x id="6"/>  <x id="7"/>SmartStringFormatter<x id="8"/> (<g id="9">Format</g> <g id="10">As</g> <g id="11">String</g>, <g id="12">Value</g> <g id="13">As</g> <g id="14">Object</g>) <g id="15">As</g> <g id="16">String<x id="17"/><x id="18"/></g>  <g id="19">Sqrt</g> (<g id="20">Value</g> <g id="21">As</g> <g id="22">Double</g>) <g id="23">As</g> <g id="24">Double<x id="25"/><x id="26"/></g>  <g id="27">Sub</g><x id="28"/><x id="29"/>  <x id="30"/>SubExists<x id="31"/> (<g id="32">Object</g> <g id="33">As</g> <g id="34">Object</g>, <g id="35">Sub</g> <g id="36">As</g> <g id="37">String</g>) <g id="38">As</g> <g id="39">Boolean<x id="40"/><x id="41"/></g>  <g id="42">TAB</g> <g id="43">As</g> <g id="44">String<x id="45"/><x id="46"/></g>  <g id="47">Tan</g> (<g id="48">Radians</g> <g id="49">As</g> <g id="50">Double</g>) <g id="51">As</g> <g id="52">Double<x id="53"/><x id="54"/></g>  <x id="55"/>TanD<x id="56"/> (<g id="57">Degrees</g> <g id="58">As</g> <g id="59">Double</g>) <g id="60">As</g> <g id="61">Double<x id="62"/><x id="63"/></g>  <g id="64">True</g> <g id="65">As</g> <g id="66">Boolean<x id="67"/><x id="68"/></g>  <g id="69">Try</g><x id="70"/><x id="71"/>  <g id="72">Type</g><x id="73"/><x id="74"/>  <g id="75">Until</g><x id="76"/><x id="77"/>  <g id="78">While</g></target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub1" xml:space="preserve">
<source xml:lang="en">Image 155</source>
<target xml:lang="zh">Image 155</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub2" xml:space="preserve">
<source xml:lang="en">Picture 6</source>
<target xml:lang="zh">Picture 6</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub3" xml:space="preserve">
<source xml:lang="en">Image 18</source>
<target xml:lang="zh">Image 18</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub4" xml:space="preserve">
<source xml:lang="en">Picture 85</source>
<target xml:lang="zh">Picture 85</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub5" xml:space="preserve">
<source xml:lang="en">Image 17</source>
<target xml:lang="zh">Image 17</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub6" xml:space="preserve">
<source xml:lang="en">Picture 86</source>
<target xml:lang="zh">Picture 86</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub7" xml:space="preserve">
<source xml:lang="en">Image 11</source>
<target xml:lang="zh">Image 11</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub8" xml:space="preserve">
<source xml:lang="en">Picture 92</source>
<target xml:lang="zh">Picture 92</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub9" xml:space="preserve">
<source xml:lang="en">Image 10</source>
<target xml:lang="zh">Image 10</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub10" xml:space="preserve">
<source xml:lang="en">Picture 93</source>
<target xml:lang="zh">Picture 93</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub11" xml:space="preserve">
<source xml:lang="en">Image 12</source>
<target xml:lang="zh">Image 12</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub12" xml:space="preserve">
<source xml:lang="en">Picture 94</source>
<target xml:lang="zh">Picture 94</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub13" xml:space="preserve">
<source xml:lang="en">Image 13</source>
<target xml:lang="zh">Image 13</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub14" xml:space="preserve">
<source xml:lang="en">Picture 95</source>
<target xml:lang="zh">Picture 95</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub15" xml:space="preserve">
<source xml:lang="en">Image 14</source>
<target xml:lang="zh">Image 14</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub16" xml:space="preserve">
<source xml:lang="en">Picture 96</source>
<target xml:lang="zh">Picture 96</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub17" xml:space="preserve">
<source xml:lang="en">Image 15</source>
<target xml:lang="zh">Image 15</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub18" xml:space="preserve">
<source xml:lang="en">Picture 98</source>
<target xml:lang="zh">Picture 98</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub19" xml:space="preserve">
<source xml:lang="en">Image 16</source>
<target xml:lang="zh">Image 16</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub20" xml:space="preserve">
<source xml:lang="en">Picture 99</source>
<target xml:lang="zh">Picture 99</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub21" xml:space="preserve">
<source xml:lang="en">Image 30</source>
<target xml:lang="zh">Image 30</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub22" xml:space="preserve">
<source xml:lang="en">Picture 100</source>
<target xml:lang="zh">Picture 100</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub23" xml:space="preserve">
<source xml:lang="en">Image 2</source>
<target xml:lang="zh">Image 2</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub24" xml:space="preserve">
<source xml:lang="en">Picture 101</source>
<target xml:lang="zh">Picture 101</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub25" xml:space="preserve">
<source xml:lang="en">Image 31</source>
<target xml:lang="zh">Image 31</target>
</trans-unit>
<trans-unit id="N98F0BEA8-sub26" xml:space="preserve">
<source xml:lang="en">Picture 102</source>
<target xml:lang="zh">Picture 102</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu840" xml:space="preserve">
<source xml:lang="en">Abs<g id="1"> (<g id="2">Number</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></source>
<target xml:lang="zh">Abs<g id="1"> (<g id="2">Number</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0BEBE-sub1" xml:space="preserve">
<source xml:lang="en">Image 204</source>
<target xml:lang="zh">Image 204</target>
</trans-unit>
<trans-unit id="N98F0BEBE-sub2" xml:space="preserve">
<source xml:lang="en">Picture 205</source>
<target xml:lang="zh">Picture 205</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu841" xml:space="preserve">
<source xml:lang="en">Returns the absolute value.<x id="1"/> </source>
<target xml:lang="zh">Returns the absolute value.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu842" xml:space="preserve">
<source xml:lang="en">ACos<g id="1"> (<g id="2">Value</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></source>
<target xml:lang="zh">ACos<g id="1"> (<g id="2">Value</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0BEC0-sub1" xml:space="preserve">
<source xml:lang="en">Image 203</source>
<target xml:lang="zh">Image 203</target>
</trans-unit>
<trans-unit id="N98F0BEC0-sub2" xml:space="preserve">
<source xml:lang="en">Picture 206</source>
<target xml:lang="zh">Picture 206</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu843" xml:space="preserve">
<source xml:lang="en">Calculates the trigonometric arccosine function. Returns the angle measured with radians.<x id="1"/> </source>
<target xml:lang="zh">Calculates the trigonometric arccosine function. Returns the angle measured with radians.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu844" xml:space="preserve">
<source xml:lang="en">ACosD<g id="1"> (<g id="2">Value</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></source>
<target xml:lang="zh">ACosD<g id="1"> (<g id="2">Value</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0BEC2-sub1" xml:space="preserve">
<source xml:lang="en">Image 202</source>
<target xml:lang="zh">Image 202</target>
</trans-unit>
<trans-unit id="N98F0BEC2-sub2" xml:space="preserve">
<source xml:lang="en">Picture 207</source>
<target xml:lang="zh">Picture 207</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu845" xml:space="preserve">
<source xml:lang="en">Calculates the trigonometric arccosine function. Returns the angle measured with degrees.<x id="1"/> </source>
<target xml:lang="zh">Calculates the trigonometric arccosine function. Returns the angle measured with degrees.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu846" xml:space="preserve">
<source xml:lang="en"><g id="1">Array</g></source>
<target xml:lang="zh"><g id="1">Array</g></target>
</trans-unit>
<trans-unit id="N98F0BEC4-sub1" xml:space="preserve">
<source xml:lang="en">Image 201</source>
<target xml:lang="zh">Image 201</target>
</trans-unit>
<trans-unit id="N98F0BEC4-sub2" xml:space="preserve">
<source xml:lang="en">Picture 208</source>
<target xml:lang="zh">Picture 208</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu847" xml:space="preserve">
<source xml:lang="en">Creates a single dimension array of the specified type.<x id="1"/>The syntax is: Array [As type] (list of values).<x id="2"/>If the type is ommitted then an array of objects will be created.<x id="3"/>Example: <x id="4"/><g id="5">Dim</g><g id="6"> <g id="7">Days</g>() <g id="8">As</g> <g id="9">String</g> <x id="10"/><g id="11">Days</g> = <g id="12">Array</g> <g id="13">As</g> <g id="14">String</g>(<g id="15">"Sunday"</g>, <g id="16">"Monday"</g>, ...)<x id="17"/> </g></source>
<target xml:lang="zh">Creates a single dimension array of the specified type.<x id="1"/>The syntax is: Array [As type] (list of values).<x id="2"/>If the type is ommitted then an array of objects will be created.<x id="3"/>Example: <x id="4"/><g id="5">Dim</g><g id="6"> <g id="7">Days</g>() <g id="8">As</g> <g id="9">String</g> <x id="10"/><g id="11">Days</g> = <g id="12">Array</g> <g id="13">As</g> <g id="14">String</g>(<g id="15">"Sunday"</g>, <g id="16">"Monday"</g>, ...)<x id="17"/> </g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu848" xml:space="preserve">
<source xml:lang="en">Asc<g id="1"> (<g id="2">Char</g> <g id="3">As</g> <g id="4">Char</g>) <g id="5">As</g> <g id="6">Int</g></g></source>
<target xml:lang="zh">Asc<g id="1"> (<g id="2">Char</g> <g id="3">As</g> <g id="4">Char</g>) <g id="5">As</g> <g id="6">Int</g></g></target>
</trans-unit>
<trans-unit id="N98F0BEC6-sub1" xml:space="preserve">
<source xml:lang="en">Image 200</source>
<target xml:lang="zh">Image 200</target>
</trans-unit>
<trans-unit id="N98F0BEC6-sub2" xml:space="preserve">
<source xml:lang="en">Picture 209</source>
<target xml:lang="zh">Picture 209</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu849" xml:space="preserve">
<source xml:lang="en">Returns the unicode code point of the given character or first character in string.<x id="1"/> </source>
<target xml:lang="zh">Returns the unicode code point of the given character or first character in string.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu850" xml:space="preserve">
<source xml:lang="en">ASin<g id="1"> (<g id="2">Value</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></source>
<target xml:lang="zh">ASin<g id="1"> (<g id="2">Value</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0BEDD-sub1" xml:space="preserve">
<source xml:lang="en">Image 199</source>
<target xml:lang="zh">Image 199</target>
</trans-unit>
<trans-unit id="N98F0BEDD-sub2" xml:space="preserve">
<source xml:lang="en">Picture 210</source>
<target xml:lang="zh">Picture 210</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu851" xml:space="preserve">
<source xml:lang="en">Calculates the trigonometric arcsine function. Returns the angle measured with radians.<x id="1"/> </source>
<target xml:lang="zh">Calculates the trigonometric arcsine function. Returns the angle measured with radians.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu852" xml:space="preserve">
<source xml:lang="en">ASinD<g id="1"> (<g id="2">Value</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></source>
<target xml:lang="zh">ASinD<g id="1"> (<g id="2">Value</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0BEDF-sub1" xml:space="preserve">
<source xml:lang="en">Image 198</source>
<target xml:lang="zh">Image 198</target>
</trans-unit>
<trans-unit id="N98F0BEDF-sub2" xml:space="preserve">
<source xml:lang="en">Picture 211</source>
<target xml:lang="zh">Picture 211</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu853" xml:space="preserve">
<source xml:lang="en">Calculates the trigonometric arcsine function. Returns the angle measured with degrees.<x id="1"/> </source>
<target xml:lang="zh">Calculates the trigonometric arcsine function. Returns the angle measured with degrees.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu854" xml:space="preserve">
<source xml:lang="en">ATan<g id="1"> (<g id="2">Value</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></source>
<target xml:lang="zh">ATan<g id="1"> (<g id="2">Value</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0BEE1-sub1" xml:space="preserve">
<source xml:lang="en">Image 197</source>
<target xml:lang="zh">Image 197</target>
</trans-unit>
<trans-unit id="N98F0BEE1-sub2" xml:space="preserve">
<source xml:lang="en">Picture 212</source>
<target xml:lang="zh">Picture 212</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu855" xml:space="preserve">
<source xml:lang="en">Calculates the trigonometric arctangent function. Returns the angle measured with radians.<x id="1"/> </source>
<target xml:lang="zh">Calculates the trigonometric arctangent function. Returns the angle measured with radians.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu856" xml:space="preserve">
<source xml:lang="en">ATan2<g id="1"> (<g id="2">Y</g> <g id="3">As</g> <g id="4">Double</g>, <g id="5">X</g> <g id="6">As</g> <g id="7">Double</g>) <g id="8">As</g> <g id="9">Double</g></g></source>
<target xml:lang="zh">ATan2<g id="1"> (<g id="2">Y</g> <g id="3">As</g> <g id="4">Double</g>, <g id="5">X</g> <g id="6">As</g> <g id="7">Double</g>) <g id="8">As</g> <g id="9">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0BEE3-sub1" xml:space="preserve">
<source xml:lang="en">Image 196</source>
<target xml:lang="zh">Image 196</target>
</trans-unit>
<trans-unit id="N98F0BEE3-sub2" xml:space="preserve">
<source xml:lang="en">Picture 213</source>
<target xml:lang="zh">Picture 213</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu857" xml:space="preserve">
<source xml:lang="en">Calculates the trigonometric arctangent function. Returns the angle measured with radians.<x id="1"/> </source>
<target xml:lang="zh">Calculates the trigonometric arctangent function. Returns the angle measured with radians.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu858" xml:space="preserve">
<source xml:lang="en">ATan2D<g id="1"> (<g id="2">Y</g> <g id="3">As</g> <g id="4">Double</g>, <g id="5">X</g> <g id="6">As</g> <g id="7">Double</g>) <g id="8">As</g> <g id="9">Double</g></g></source>
<target xml:lang="zh">ATan2D<g id="1"> (<g id="2">Y</g> <g id="3">As</g> <g id="4">Double</g>, <g id="5">X</g> <g id="6">As</g> <g id="7">Double</g>) <g id="8">As</g> <g id="9">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0BEE5-sub1" xml:space="preserve">
<source xml:lang="en">Image 195</source>
<target xml:lang="zh">Image 195</target>
</trans-unit>
<trans-unit id="N98F0BEE5-sub2" xml:space="preserve">
<source xml:lang="en">Picture 214</source>
<target xml:lang="zh">Picture 214</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu859" xml:space="preserve">
<source xml:lang="en">Calculates the trigonometric arctangent function. Returns the angle measured with degrees.<x id="1"/> </source>
<target xml:lang="zh">Calculates the trigonometric arctangent function. Returns the angle measured with degrees.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu860" xml:space="preserve">
<source xml:lang="en">ATanD<g id="1"> (<g id="2">Value</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></source>
<target xml:lang="zh">ATanD<g id="1"> (<g id="2">Value</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0BEFC-sub1" xml:space="preserve">
<source xml:lang="en">Image 194</source>
<target xml:lang="zh">Image 194</target>
</trans-unit>
<trans-unit id="N98F0BEFC-sub2" xml:space="preserve">
<source xml:lang="en">Picture 215</source>
<target xml:lang="zh">Picture 215</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu861" xml:space="preserve">
<source xml:lang="en">Calculates the trigonometric arctangent function. Returns the angle measured with degrees.<x id="1"/> </source>
<target xml:lang="zh">Calculates the trigonometric arctangent function. Returns the angle measured with degrees.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu862" xml:space="preserve">
<source xml:lang="en">BytesToString<g id="1"> (<g id="2">Data</g>() <g id="3">As</g> <g id="4">Byte</g>, <g id="5">StartOffset</g> <g id="6">As</g> <g id="7">Int</g>, <g id="8">Length</g> <g id="9">As</g> <g id="10">Int</g>, <g id="11">CharSet</g> <g id="12">As</g> <g id="13">String</g>) <g id="14">As</g> <g id="15">String</g></g></source>
<target xml:lang="zh">BytesToString<g id="1"> (<g id="2">Data</g>() <g id="3">As</g> <g id="4">Byte</g>, <g id="5">StartOffset</g> <g id="6">As</g> <g id="7">Int</g>, <g id="8">Length</g> <g id="9">As</g> <g id="10">Int</g>, <g id="11">CharSet</g> <g id="12">As</g> <g id="13">String</g>) <g id="14">As</g> <g id="15">String</g></g></target>
</trans-unit>
<trans-unit id="N98F0BEFE-sub1" xml:space="preserve">
<source xml:lang="en">Image 193</source>
<target xml:lang="zh">Image 193</target>
</trans-unit>
<trans-unit id="N98F0BEFE-sub2" xml:space="preserve">
<source xml:lang="en">Picture 216</source>
<target xml:lang="zh">Picture 216</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu863" xml:space="preserve">
<source xml:lang="en">Decodes the given bytes array as a string.<x id="1"/>Data - The bytes array.<x id="2"/>StartOffset - The first byte to read.<x id="3"/>Length - Number of bytes to read.<x id="4"/>CharSet - The name of the character set.<x id="5"/>Example: <x id="6"/><g id="7">Dim</g><g id="8"> <g id="9">s</g> <g id="10">As</g> <g id="11">String</g> <x id="12"/><g id="13">s</g> = <g id="14">BytesToString</g>(<g id="15">Buffer</g>, <g id="16">0</g>, <g id="17">Buffer</g>.<g id="18">Length</g>, <g id="19">"UTF-8"</g>)<x id="20"/></g> </source>
<target xml:lang="zh">Decodes the given bytes array as a string.<x id="1"/>Data - The bytes array.<x id="2"/>StartOffset - The first byte to read.<x id="3"/>Length - Number of bytes to read.<x id="4"/>CharSet - The name of the character set.<x id="5"/>Example: <x id="6"/><g id="7">Dim</g><g id="8"> <g id="9">s</g> <g id="10">As</g> <g id="11">String</g> <x id="12"/><g id="13">s</g> = <g id="14">BytesToString</g>(<g id="15">Buffer</g>, <g id="16">0</g>, <g id="17">Buffer</g>.<g id="18">Length</g>, <g id="19">"UTF-8"</g>)<x id="20"/></g> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu864" xml:space="preserve">
<source xml:lang="en">CallSub<g id="1"> (<g id="2">Component</g> <g id="3">As</g> <g id="4">Object</g>, <g id="5">Sub</g> <g id="6">As</g> <g id="7">String</g>) <g id="8">As</g> <g id="9">Object</g></g></source>
<target xml:lang="zh">CallSub<g id="1"> (<g id="2">Component</g> <g id="3">As</g> <g id="4">Object</g>, <g id="5">Sub</g> <g id="6">As</g> <g id="7">String</g>) <g id="8">As</g> <g id="9">Object</g></g></target>
</trans-unit>
<trans-unit id="N98F0BF00-sub1" xml:space="preserve">
<source xml:lang="en">Image 192</source>
<target xml:lang="zh">Image 192</target>
</trans-unit>
<trans-unit id="N98F0BF00-sub2" xml:space="preserve">
<source xml:lang="en">Picture 217</source>
<target xml:lang="zh">Picture 217</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu865" xml:space="preserve">
<source xml:lang="en">Calls the given sub. CallSub can be used to call a sub which belongs to a different module.<x id="1"/>However the sub will only be called if the other module is not paused. In that case an empty string will be returned.<x id="2"/>You can use IsPaused to test whether a module is paused.<x id="3"/>This means that one activity cannot call a sub of a different activity. As the other activity will be paused for sure.<x id="4"/>CallSub allows an activity to call a service sub or a service to call an activity sub.<x id="5"/>Note that it is not possible to call subs of code modules.<x id="6"/>CallSub can also be used to call subs in the current module. Pass Me as the component in that case.<x id="7"/>Example: <x id="8"/><g id="9">CallSub</g><g id="10">(<g id="11">Main</g>, <g id="12">"RefreshData"</g>)<x id="13"/></g> </source>
<target xml:lang="zh">Calls the given sub. CallSub can be used to call a sub which belongs to a different module.<x id="1"/>However the sub will only be called if the other module is not paused. In that case an empty string will be returned.<x id="2"/>You can use IsPaused to test whether a module is paused.<x id="3"/>This means that one activity cannot call a sub of a different activity. As the other activity will be paused for sure.<x id="4"/>CallSub allows an activity to call a service sub or a service to call an activity sub.<x id="5"/>Note that it is not possible to call subs of code modules.<x id="6"/>CallSub can also be used to call subs in the current module. Pass Me as the component in that case.<x id="7"/>Example: <x id="8"/><g id="9">CallSub</g><g id="10">(<g id="11">Main</g>, <g id="12">"RefreshData"</g>)<x id="13"/></g> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu866" xml:space="preserve">
<source xml:lang="en">CallSub2<g id="1"> (<g id="2">Component</g> <g id="3">As</g> <g id="4">Object</g>, <g id="5">Sub</g> <g id="6">As</g> <g id="7">String</g>, <g id="8">Argument</g> <g id="9">As</g> <g id="10">Object</g>) <g id="11">As</g> <g id="12">Object</g></g></source>
<target xml:lang="zh">CallSub2<g id="1"> (<g id="2">Component</g> <g id="3">As</g> <g id="4">Object</g>, <g id="5">Sub</g> <g id="6">As</g> <g id="7">String</g>, <g id="8">Argument</g> <g id="9">As</g> <g id="10">Object</g>) <g id="11">As</g> <g id="12">Object</g></g></target>
</trans-unit>
<trans-unit id="N98F0BF02-sub1" xml:space="preserve">
<source xml:lang="en">Image 191</source>
<target xml:lang="zh">Image 191</target>
</trans-unit>
<trans-unit id="N98F0BF02-sub2" xml:space="preserve">
<source xml:lang="en">Picture 218</source>
<target xml:lang="zh">Picture 218</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu867" xml:space="preserve">
<source xml:lang="en">Similar to CallSub. Calls a sub with a single argument.<x id="1"/> </source>
<target xml:lang="zh">Similar to CallSub. Calls a sub with a single argument.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu868" xml:space="preserve">
<source xml:lang="en"><g id="1">CallSub3</g><g id="2"> (<g id="3">Component</g> <g id="4">As</g> <g id="5">Object</g>, <g id="6">Sub</g> <g id="7">As</g> <g id="8">String</g>, <g id="9">Argument1</g> <g id="10">As</g> <g id="11">Object</g>, <g id="12">Argument2</g> <g id="13">As</g> <g id="14">Object</g>) <g id="15">As</g> <g id="16">Object</g></g></source>
<target xml:lang="zh"><g id="1">CallSub3</g><g id="2"> (<g id="3">Component</g> <g id="4">As</g> <g id="5">Object</g>, <g id="6">Sub</g> <g id="7">As</g> <g id="8">String</g>, <g id="9">Argument1</g> <g id="10">As</g> <g id="11">Object</g>, <g id="12">Argument2</g> <g id="13">As</g> <g id="14">Object</g>) <g id="15">As</g> <g id="16">Object</g></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu869" xml:space="preserve">
<source xml:lang="en">CallSubDelayed<g id="1"> (<g id="2">Component</g> <g id="3">As</g> <g id="4">Object</g>, <g id="5">Sub</g> <g id="6">As</g> <g id="7">String</g>)<x id="8"/> </g></source>
<target xml:lang="zh">CallSubDelayed<g id="1"> (<g id="2">Component</g> <g id="3">As</g> <g id="4">Object</g>, <g id="5">Sub</g> <g id="6">As</g> <g id="7">String</g>)<x id="8"/> </g></target>
</trans-unit>
<trans-unit id="N98F0BF05-sub1" xml:space="preserve">
<source xml:lang="en">Image 320</source>
<target xml:lang="zh">Image 320</target>
</trans-unit>
<trans-unit id="N98F0BF05-sub2" xml:space="preserve">
<source xml:lang="en">Picture 217</source>
<target xml:lang="zh">Picture 217</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu870" xml:space="preserve">
<source xml:lang="en">CallSubDelayed is a combination of StartActivity, StartService and CallSub.<x id="1"/>Unlike CallSub which only works with currently running components, CallSubDelayed will first start the target component if needed.<x id="2"/>CallSubDelayed can also be used to call subs in the current module. Instead of calling these subs directly, a message will be sent to the message queue.<x id="3"/>The sub will be called when the message is processed. This is useful in cases where you want to do something "right after" the current sub (usually related to UI events).<x id="4"/>Note that if you call an Activity while the whole application is in the background (no visible activities), the sub will b<x id="5"/>e executed once the target activity is resumed. </source>
<target xml:lang="zh">CallSubDelayed is a combination of StartActivity, StartService and CallSub.<x id="1"/>Unlike CallSub which only works with currently running components, CallSubDelayed will first start the target component if needed.<x id="2"/>CallSubDelayed can also be used to call subs in the current module. Instead of calling these subs directly, a message will be sent to the message queue.<x id="3"/>The sub will be called when the message is processed. This is useful in cases where you want to do something "right after" the current sub (usually related to UI events).<x id="4"/>Note that if you call an Activity while the whole application is in the background (no visible activities), the sub will b<x id="5"/>e executed once the target activity is resumed. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu871" xml:space="preserve">
<source xml:lang="en">CallSubDelayed2<g id="1"> (<g id="2">Component</g> <g id="3">As</g> <g id="4">Object</g>, <g id="5">Sub</g> <g id="6">As</g> <g id="7">String</g>, <g id="8">Argument</g> <g id="9">As</g> <g id="10">Object</g>)</g></source>
<target xml:lang="zh">CallSubDelayed2<g id="1"> (<g id="2">Component</g> <g id="3">As</g> <g id="4">Object</g>, <g id="5">Sub</g> <g id="6">As</g> <g id="7">String</g>, <g id="8">Argument</g> <g id="9">As</g> <g id="10">Object</g>)</g></target>
</trans-unit>
<trans-unit id="N98F0BF1C-sub1" xml:space="preserve">
<source xml:lang="en">Image 321</source>
<target xml:lang="zh">Image 321</target>
</trans-unit>
<trans-unit id="N98F0BF1C-sub2" xml:space="preserve">
<source xml:lang="en">Picture 218</source>
<target xml:lang="zh">Picture 218</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu872" xml:space="preserve">
<source xml:lang="en">Similar to CallSubDelayed. Calls a sub with a single argument.<x id="1"/> </source>
<target xml:lang="zh">Similar to CallSubDelayed. Calls a sub with a single argument.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu873" xml:space="preserve">
<source xml:lang="en">CallSubDelayed3<g id="1"> (<g id="2">Component</g> <g id="3">As</g> <g id="4">Object</g>, <g id="5">Sub</g> <g id="6">As</g> <g id="7">String</g>, <g id="8">Argument1</g> <g id="9">As</g> <g id="10">Object</g>, <g id="11">Argument2</g> <g id="12">As</g> <g id="13">Object</g>)</g></source>
<target xml:lang="zh">CallSubDelayed3<g id="1"> (<g id="2">Component</g> <g id="3">As</g> <g id="4">Object</g>, <g id="5">Sub</g> <g id="6">As</g> <g id="7">String</g>, <g id="8">Argument1</g> <g id="9">As</g> <g id="10">Object</g>, <g id="11">Argument2</g> <g id="12">As</g> <g id="13">Object</g>)</g></target>
</trans-unit>
<trans-unit id="N98F0BF1E-sub1" xml:space="preserve">
<source xml:lang="en">Image 322</source>
<target xml:lang="zh">Image 322</target>
</trans-unit>
<trans-unit id="N98F0BF1E-sub2" xml:space="preserve">
<source xml:lang="en">Picture 219</source>
<target xml:lang="zh">Picture 219</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu874" xml:space="preserve">
<source xml:lang="en">Similar to CallSubDelayed. Calls a sub with two arguments.</source>
<target xml:lang="zh">Similar to CallSubDelayed. Calls a sub with two arguments.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu875" xml:space="preserve">
<source xml:lang="en">Catch</source>
<target xml:lang="zh">Catch</target>
</trans-unit>
<trans-unit id="N98F0BF20-sub1" xml:space="preserve">
<source xml:lang="en">Image 185</source>
<target xml:lang="zh">Image 185</target>
</trans-unit>
<trans-unit id="N98F0BF20-sub2" xml:space="preserve">
<source xml:lang="en">Picture 224</source>
<target xml:lang="zh">Picture 224</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu876" xml:space="preserve">
<source xml:lang="en">Any exception thrown inside a try block will be caught in the catch block.<x id="1"/>Call LastException to get the caught exception.<x id="2"/>Syntax:<x id="3"/><g id="4">Try<x id="5"/>  ...<x id="6"/>Catch<x id="7"/>  ...<x id="8"/>End Try<x id="9"/></g> </source>
<target xml:lang="zh">Any exception thrown inside a try block will be caught in the catch block.<x id="1"/>Call LastException to get the caught exception.<x id="2"/>Syntax:<x id="3"/><g id="4">Try<x id="5"/>  ...<x id="6"/>Catch<x id="7"/>  ...<x id="8"/>End Try<x id="9"/></g> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu877" xml:space="preserve">
<source xml:lang="en">cE<g id="1"> <g id="2">As</g> <g id="3">Double</g></g></source>
<target xml:lang="zh">cE<g id="1"> <g id="2">As</g> <g id="3">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0BF22-sub1" xml:space="preserve">
<source xml:lang="en">Image 184</source>
<target xml:lang="zh">Image 184</target>
</trans-unit>
<trans-unit id="N98F0BF22-sub2" xml:space="preserve">
<source xml:lang="en">Picture 225</source>
<target xml:lang="zh">Picture 225</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu878" xml:space="preserve">
<source xml:lang="en">e (natural logarithm base) constant.<x id="1"/> </source>
<target xml:lang="zh">e (natural logarithm base) constant.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu879" xml:space="preserve">
<source xml:lang="en">Ceil<g id="1"> (<g id="2">Number</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></source>
<target xml:lang="zh">Ceil<g id="1"> (<g id="2">Number</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0BF24-sub1" xml:space="preserve">
<source xml:lang="en">Image 183</source>
<target xml:lang="zh">Image 183</target>
</trans-unit>
<trans-unit id="N98F0BF24-sub2" xml:space="preserve">
<source xml:lang="en">Picture 226</source>
<target xml:lang="zh">Picture 226</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu880" xml:space="preserve">
<source xml:lang="en">Returns the smallest double that is greater or equal to the specified number and is equal to an integer.<x id="1"/> </source>
<target xml:lang="zh">Returns the smallest double that is greater or equal to the specified number and is equal to an integer.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu881" xml:space="preserve">
<source xml:lang="en">CharsToString<g id="1"> (<g id="2">Chars</g>() <g id="3">As</g> <g id="4">Char</g>, <g id="5">StartOffset</g> <g id="6">As</g> <g id="7">Int</g>, <g id="8">Length</g> <g id="9">As</g> <g id="10">Int</g>) <g id="11">As</g> <g id="12">String</g></g></source>
<target xml:lang="zh">CharsToString<g id="1"> (<g id="2">Chars</g>() <g id="3">As</g> <g id="4">Char</g>, <g id="5">StartOffset</g> <g id="6">As</g> <g id="7">Int</g>, <g id="8">Length</g> <g id="9">As</g> <g id="10">Int</g>) <g id="11">As</g> <g id="12">String</g></g></target>
</trans-unit>
<trans-unit id="N98F0BF3B-sub1" xml:space="preserve">
<source xml:lang="en">Image 182</source>
<target xml:lang="zh">Image 182</target>
</trans-unit>
<trans-unit id="N98F0BF3B-sub2" xml:space="preserve">
<source xml:lang="en">Picture 227</source>
<target xml:lang="zh">Picture 227</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu882" xml:space="preserve">
<source xml:lang="en">Creates a new String by copying the characters from the array.<x id="1"/>Copying starts from StartOffset and the number of characters copied equals to Length.<x id="2"/> </source>
<target xml:lang="zh">Creates a new String by copying the characters from the array.<x id="1"/>Copying starts from StartOffset and the number of characters copied equals to Length.<x id="2"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu883" xml:space="preserve">
<source xml:lang="en">Chr<g id="1"> (<g id="2">UnicodeValue</g> <g id="3">As</g> <g id="4">Int</g>) <g id="5">As</g> <g id="6">Char</g></g></source>
<target xml:lang="zh">Chr<g id="1"> (<g id="2">UnicodeValue</g> <g id="3">As</g> <g id="4">Int</g>) <g id="5">As</g> <g id="6">Char</g></g></target>
</trans-unit>
<trans-unit id="N98F0BF3D-sub1" xml:space="preserve">
<source xml:lang="en">Image 181</source>
<target xml:lang="zh">Image 181</target>
</trans-unit>
<trans-unit id="N98F0BF3D-sub2" xml:space="preserve">
<source xml:lang="en">Picture 228</source>
<target xml:lang="zh">Picture 228</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu884" xml:space="preserve">
<source xml:lang="en">Returns the character that is represented by the given unicode value.<x id="1"/> </source>
<target xml:lang="zh">Returns the character that is represented by the given unicode value.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu885" xml:space="preserve">
<source xml:lang="en">Continue</source>
<target xml:lang="zh">Continue</target>
</trans-unit>
<trans-unit id="N98F0BF3F-sub1" xml:space="preserve">
<source xml:lang="en">Image 179</source>
<target xml:lang="zh">Image 179</target>
</trans-unit>
<trans-unit id="N98F0BF3F-sub2" xml:space="preserve">
<source xml:lang="en">Picture 230</source>
<target xml:lang="zh">Picture 230</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu886" xml:space="preserve">
<source xml:lang="en">Stops executing the current iteration and continues with the next one.<x id="1"/> </source>
<target xml:lang="zh">Stops executing the current iteration and continues with the next one.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu887" xml:space="preserve">
<source xml:lang="en">Cos<g id="1"> (<g id="2">Radians</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></source>
<target xml:lang="zh">Cos<g id="1"> (<g id="2">Radians</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0BF41-sub1" xml:space="preserve">
<source xml:lang="en">Image 178</source>
<target xml:lang="zh">Image 178</target>
</trans-unit>
<trans-unit id="N98F0BF41-sub2" xml:space="preserve">
<source xml:lang="en">Picture 231</source>
<target xml:lang="zh">Picture 231</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu888" xml:space="preserve">
<source xml:lang="en">Calculates the trigonometric cosine function. Angle measured in radians.<x id="1"/> </source>
<target xml:lang="zh">Calculates the trigonometric cosine function. Angle measured in radians.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu889" xml:space="preserve">
<source xml:lang="en">CosD<g id="1"> (<g id="2">Degrees</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></source>
<target xml:lang="zh">CosD<g id="1"> (<g id="2">Degrees</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0BF43-sub1" xml:space="preserve">
<source xml:lang="en">Image 177</source>
<target xml:lang="zh">Image 177</target>
</trans-unit>
<trans-unit id="N98F0BF43-sub2" xml:space="preserve">
<source xml:lang="en">Picture 232</source>
<target xml:lang="zh">Picture 232</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu890" xml:space="preserve">
<source xml:lang="en">Calculates the trigonometric cosine function. Angle measured in degrees.<x id="1"/> </source>
<target xml:lang="zh">Calculates the trigonometric cosine function. Angle measured in degrees.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu891" xml:space="preserve">
<source xml:lang="en">cPI<g id="1"> <g id="2">As</g> <g id="3">Double</g></g></source>
<target xml:lang="zh">cPI<g id="1"> <g id="2">As</g> <g id="3">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0BF5A-sub1" xml:space="preserve">
<source xml:lang="en">Image 176</source>
<target xml:lang="zh">Image 176</target>
</trans-unit>
<trans-unit id="N98F0BF5A-sub2" xml:space="preserve">
<source xml:lang="en">Picture 233</source>
<target xml:lang="zh">Picture 233</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu892" xml:space="preserve">
<source xml:lang="en">PI constant.<x id="1"/> </source>
<target xml:lang="zh">PI constant.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu893" xml:space="preserve">
<source xml:lang="en">CreateMap</source>
<target xml:lang="zh">CreateMap</target>
</trans-unit>
<trans-unit id="N98F0BF5C-sub1" xml:space="preserve">
<source xml:lang="en">Image 326</source>
<target xml:lang="zh">Image 326</target>
</trans-unit>
<trans-unit id="N98F0BF5C-sub2" xml:space="preserve">
<source xml:lang="en">Picture 232</source>
<target xml:lang="zh">Picture 232</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu894" xml:space="preserve">
<source xml:lang="en">Creates a Map with the given key / value pairs.<x id="1"/>The syntax is: CreateMap (key1: value1, key2: value2, ...)<x id="2"/>Example: <x id="3"/><g id="4">Dim</g> <g id="5">m</g> <g id="6">As</g> <g id="7">Map</g> = <g id="8">CreateMap</g>(<g id="9">"January"</g>: <g id="10">1</g>, <g id="11">"February"</g>: <g id="12">2</g>)</source>
<target xml:lang="zh">Creates a Map with the given key / value pairs.<x id="1"/>The syntax is: CreateMap (key1: value1, key2: value2, ...)<x id="2"/>Example: <x id="3"/><g id="4">Dim</g> <g id="5">m</g> <g id="6">As</g> <g id="7">Map</g> = <g id="8">CreateMap</g>(<g id="9">"January"</g>: <g id="10">1</g>, <g id="11">"February"</g>: <g id="12">2</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu895" xml:space="preserve">
<source xml:lang="en">CRLF<g id="1"> <g id="2">As</g> <g id="3">String</g></g></source>
<target xml:lang="zh">CRLF<g id="1"> <g id="2">As</g> <g id="3">String</g></g></target>
</trans-unit>
<trans-unit id="N98F0BF5E-sub1" xml:space="preserve">
<source xml:lang="en">Image 174</source>
<target xml:lang="zh">Image 174</target>
</trans-unit>
<trans-unit id="N98F0BF5E-sub2" xml:space="preserve">
<source xml:lang="en">Picture 235</source>
<target xml:lang="zh">Picture 235</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu896" xml:space="preserve">
<source xml:lang="en">New line character. The value of Chr(10).<x id="1"/> </source>
<target xml:lang="zh">New line character. The value of Chr(10).<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu897" xml:space="preserve">
<source xml:lang="en">Dim</source>
<target xml:lang="zh">Dim</target>
</trans-unit>
<trans-unit id="N98F0BF60-sub1" xml:space="preserve">
<source xml:lang="en">Image 172</source>
<target xml:lang="zh">Image 172</target>
</trans-unit>
<trans-unit id="N98F0BF60-sub2" xml:space="preserve">
<source xml:lang="en">Picture 237</source>
<target xml:lang="zh">Picture 237</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu898" xml:space="preserve">
<source xml:lang="en">Declares a variable.<x id="1"/>Syntax:<x id="2"/>Declare a single variable:<x id="3"/>Dim variable name [As type] [= expression]<x id="4"/>The default type is String.<x id="5"/>Declare multiple variables. All variables will be of the specified type.<x id="6"/>Dim [Const] variable1 [= expression], variable2 [= expression], ..., [As type]<x id="7"/>Note that the shorthand syntax only applies to Dim keyword.<x id="8"/>Example: <g id="9">Dim</g><g id="10"> <g id="11">a</g> = <g id="12">1</g>, <g id="13">b</g> = <g id="14">2</g>, <g id="15">c</g> = <g id="16">3</g> <g id="17">As</g> <g id="18">Int</g></g><x id="19"/>Declare an array:<x id="20"/>Dim variable(Rank1, Rank2, ...) [As type]<x id="21"/>Example: <g id="22">Dim</g><g id="23"> <g id="24">Days</g>(<g id="25">7</g>) <g id="26">As</g> <g id="27">String</g></g><x id="28"/>The actual rank can be omitted for zero length arrays.<x id="29"/> </source>
<target xml:lang="zh">Declares a variable.<x id="1"/>Syntax:<x id="2"/>Declare a single variable:<x id="3"/>Dim variable name [As type] [= expression]<x id="4"/>The default type is String.<x id="5"/>Declare multiple variables. All variables will be of the specified type.<x id="6"/>Dim [Const] variable1 [= expression], variable2 [= expression], ..., [As type]<x id="7"/>Note that the shorthand syntax only applies to Dim keyword.<x id="8"/>Example: <g id="9">Dim</g><g id="10"> <g id="11">a</g> = <g id="12">1</g>, <g id="13">b</g> = <g id="14">2</g>, <g id="15">c</g> = <g id="16">3</g> <g id="17">As</g> <g id="18">Int</g></g><x id="19"/>Declare an array:<x id="20"/>Dim variable(Rank1, Rank2, ...) [As type]<x id="21"/>Example: <g id="22">Dim</g><g id="23"> <g id="24">Days</g>(<g id="25">7</g>) <g id="26">As</g> <g id="27">String</g></g><x id="28"/>The actual rank can be omitted for zero length arrays.<x id="29"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu899" xml:space="preserve">
<source xml:lang="en">Exit</source>
<target xml:lang="zh">Exit</target>
</trans-unit>
<trans-unit id="N98F0BF62-sub1" xml:space="preserve">
<source xml:lang="en">Image 169</source>
<target xml:lang="zh">Image 169</target>
</trans-unit>
<trans-unit id="N98F0BF62-sub2" xml:space="preserve">
<source xml:lang="en">Picture 240</source>
<target xml:lang="zh">Picture 240</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu900" xml:space="preserve">
<source xml:lang="en">Exits the most inner loop.<x id="1"/>Note that Exit inside a Select block will exit the Select block.<x id="2"/> </source>
<target xml:lang="zh">Exits the most inner loop.<x id="1"/>Note that Exit inside a Select block will exit the Select block.<x id="2"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu901" xml:space="preserve">
<source xml:lang="en">False<g id="1"> <g id="2">As</g> <g id="3">Boolean</g></g></source>
<target xml:lang="zh">False<g id="1"> <g id="2">As</g> <g id="3">Boolean</g></g></target>
</trans-unit>
<trans-unit id="N98F0C204-sub1" xml:space="preserve">
<source xml:lang="en">Image 167</source>
<target xml:lang="zh">Image 167</target>
</trans-unit>
<trans-unit id="N98F0C204-sub2" xml:space="preserve">
<source xml:lang="en">Picture 242</source>
<target xml:lang="zh">Picture 242</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu902" xml:space="preserve">
<source xml:lang="en">Floor<g id="1"> (<g id="2">Number</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></source>
<target xml:lang="zh">Floor<g id="1"> (<g id="2">Number</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0C205-sub1" xml:space="preserve">
<source xml:lang="en">Image 165</source>
<target xml:lang="zh">Image 165</target>
</trans-unit>
<trans-unit id="N98F0C205-sub2" xml:space="preserve">
<source xml:lang="en">Picture 244</source>
<target xml:lang="zh">Picture 244</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu903" xml:space="preserve">
<source xml:lang="en">Returns the largest double that is smaller or equal to the specified number and is equal to an integer.<x id="1"/> </source>
<target xml:lang="zh">Returns the largest double that is smaller or equal to the specified number and is equal to an integer.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu904" xml:space="preserve">
<source xml:lang="en">For</source>
<target xml:lang="zh">For</target>
</trans-unit>
<trans-unit id="N98F0C207-sub1" xml:space="preserve">
<source xml:lang="en">Image 164</source>
<target xml:lang="zh">Image 164</target>
</trans-unit>
<trans-unit id="N98F0C207-sub2" xml:space="preserve">
<source xml:lang="en">Picture 245</source>
<target xml:lang="zh">Picture 245</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu905" xml:space="preserve">
<source xml:lang="en">Syntax:<x id="1"/><g id="2">For variable = value1 To value2 [Step interval]<x id="3"/>  ...<x id="4"/>Next</g><x id="5"/>If the iterator variable was not declared before it will be of type Int.<x id="6"/>Or:<x id="7"/><g id="8">For Each variable As type In collection<x id="9"/>  ...<x id="10"/>Next</g><x id="11"/>Examples: <x id="12"/><g id="13">For</g><g id="14"> <g id="15">i</g> = <g id="16">1</g> <g id="17">To</g> <g id="18">10</g> <x id="19"/><g id="20">  Log</g>(<g id="21">i</g>) <g id="22">'Will print 1 to 10 (inclusive).</g> <x id="23"/><g id="24">Next</g> <x id="25"/><g id="26">For</g> <g id="27">Each</g> <g id="28">n</g> <g id="29">As</g> <g id="30">Int</g> <g id="31">In</g> <g id="32">Numbers</g> <g id="33">'an array</g> <x id="34"/><g id="35">  Sum</g> = <g id="36">Sum</g> + <g id="37">n</g> <x id="38"/><g id="39">Next</g></g> <x id="40"/>Note that the loop limits will only be calculated once before the first iteration.<x id="41"/> </source>
<target xml:lang="zh">Syntax:<x id="1"/><g id="2">For variable = value1 To value2 [Step interval]<x id="3"/>  ...<x id="4"/>Next</g><x id="5"/>If the iterator variable was not declared before it will be of type Int.<x id="6"/>Or:<x id="7"/><g id="8">For Each variable As type In collection<x id="9"/>  ...<x id="10"/>Next</g><x id="11"/>Examples: <x id="12"/><g id="13">For</g><g id="14"> <g id="15">i</g> = <g id="16">1</g> <g id="17">To</g> <g id="18">10</g> <x id="19"/><g id="20">  Log</g>(<g id="21">i</g>) <g id="22">'Will print 1 to 10 (inclusive).</g> <x id="23"/><g id="24">Next</g> <x id="25"/><g id="26">For</g> <g id="27">Each</g> <g id="28">n</g> <g id="29">As</g> <g id="30">Int</g> <g id="31">In</g> <g id="32">Numbers</g> <g id="33">'an array</g> <x id="34"/><g id="35">  Sum</g> = <g id="36">Sum</g> + <g id="37">n</g> <x id="38"/><g id="39">Next</g></g> <x id="40"/>Note that the loop limits will only be calculated once before the first iteration.<x id="41"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu906" xml:space="preserve">
<source xml:lang="en">GetType<g id="1"> (<g id="2">object</g> <g id="3">As</g> <g id="4">Object</g>) <g id="5">As</g> <g id="6">String</g></g></source>
<target xml:lang="zh">GetType<g id="1"> (<g id="2">object</g> <g id="3">As</g> <g id="4">Object</g>) <g id="5">As</g> <g id="6">String</g></g></target>
</trans-unit>
<trans-unit id="N98F0C209-sub1" xml:space="preserve">
<source xml:lang="en">Image 162</source>
<target xml:lang="zh">Image 162</target>
</trans-unit>
<trans-unit id="N98F0C209-sub2" xml:space="preserve">
<source xml:lang="en">Picture 247</source>
<target xml:lang="zh">Picture 247</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu907" xml:space="preserve">
<source xml:lang="en">Returns a string representing the object's java type.<x id="1"/> </source>
<target xml:lang="zh">Returns a string representing the object's java type.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu908" xml:space="preserve">
<source xml:lang="en">If</source>
<target xml:lang="zh">If</target>
</trans-unit>
<trans-unit id="N98F0C20B-sub1" xml:space="preserve">
<source xml:lang="en">Image 161</source>
<target xml:lang="zh">Image 161</target>
</trans-unit>
<trans-unit id="N98F0C20B-sub2" xml:space="preserve">
<source xml:lang="en">Picture 248</source>
<target xml:lang="zh">Picture 248</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu909" xml:space="preserve">
<source xml:lang="en">Single line:<x id="1"/><g id="2">If condition Then true-statement [Else false-statement]</g><x id="3"/>Multiline:<x id="4"/><g id="5">If condition Then<x id="6"/>  statement<x id="7"/>Else If condition Then<x id="8"/>  statement<x id="9"/>  ...<x id="10"/>Else<x id="11"/>  statement<x id="12"/>End If<x id="13"/></g> </source>
<target xml:lang="zh">Single line:<x id="1"/><g id="2">If condition Then true-statement [Else false-statement]</g><x id="3"/>Multiline:<x id="4"/><g id="5">If condition Then<x id="6"/>  statement<x id="7"/>Else If condition Then<x id="8"/>  statement<x id="9"/>  ...<x id="10"/>Else<x id="11"/>  statement<x id="12"/>End If<x id="13"/></g> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu910" xml:space="preserve">
<source xml:lang="en">IsNumber<g id="1"> (<g id="2">Text</g> <g id="3">As</g> <g id="4">String</g>) <g id="5">As</g> <g id="6">Boolean</g></g></source>
<target xml:lang="zh">IsNumber<g id="1"> (<g id="2">Text</g> <g id="3">As</g> <g id="4">String</g>) <g id="5">As</g> <g id="6">Boolean</g></g></target>
</trans-unit>
<trans-unit id="N98F0C222-sub1" xml:space="preserve">
<source xml:lang="en">Image 154</source>
<target xml:lang="zh">Image 154</target>
</trans-unit>
<trans-unit id="N98F0C222-sub2" xml:space="preserve">
<source xml:lang="en">Picture 255</source>
<target xml:lang="zh">Picture 255</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu911" xml:space="preserve">
<source xml:lang="en">Tests whether the specified string can be safely parsed as a number.<x id="1"/> </source>
<target xml:lang="zh">Tests whether the specified string can be safely parsed as a number.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu912" xml:space="preserve">
<source xml:lang="en">LoadBitmap<g id="1"> (<g id="2">Dir</g> <g id="3">As</g> <g id="4">String</g>, <g id="5">FileName</g> <g id="6">As</g> <g id="7">String</g>) <g id="8">As</g> <g id="9">Bitmap</g></g></source>
<target xml:lang="zh">LoadBitmap<g id="1"> (<g id="2">Dir</g> <g id="3">As</g> <g id="4">String</g>, <g id="5">FileName</g> <g id="6">As</g> <g id="7">String</g>) <g id="8">As</g> <g id="9">Bitmap</g></g></target>
</trans-unit>
<trans-unit id="N98F0C224-sub1" xml:space="preserve">
<source xml:lang="en">Image 151</source>
<target xml:lang="zh">Image 151</target>
</trans-unit>
<trans-unit id="N98F0C224-sub2" xml:space="preserve">
<source xml:lang="en">Picture 258</source>
<target xml:lang="zh">Picture 258</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu913" xml:space="preserve">
<source xml:lang="en">Loads the bitmap.<x id="1"/>Note that the Android file system is case sensitive.<x id="2"/>You should consider using LoadBitmapSample if the image size is large.<x id="3"/>The actual file size is not relevant as images are usually stored compressed.<x id="4"/>Example: <x id="5"/><g id="6">Activity</g>.<g id="7">SetBackgroundImage</g>(<g id="8">LoadBitmap</g>(<g id="9">File</g>.<g id="10">DirAssets</g>, <g id="11">"SomeFile.jpg"</g>))<x id="12"/> </source>
<target xml:lang="zh">Loads the bitmap.<x id="1"/>Note that the Android file system is case sensitive.<x id="2"/>You should consider using LoadBitmapSample if the image size is large.<x id="3"/>The actual file size is not relevant as images are usually stored compressed.<x id="4"/>Example: <x id="5"/><g id="6">Activity</g>.<g id="7">SetBackgroundImage</g>(<g id="8">LoadBitmap</g>(<g id="9">File</g>.<g id="10">DirAssets</g>, <g id="11">"SomeFile.jpg"</g>))<x id="12"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu914" xml:space="preserve">
<source xml:lang="en"><x id="1"/><g id="2">LoadBitmapResize<x id="3"/></g> <g id="4">(Dir <g id="5">As</g> <g id="6">String</g>, FileName <g id="7">As</g> <g id="8">String</g>, Width <g id="9">As</g> <g id="10">Int</g>, Height <g id="11">As</g> <g id="12">Int</g>, KeepAspectRatio <g id="13">As</g> <g id="14">Boolean</g>) <g id="15">As</g> <g id="16">Bitmap</g></g></source>
<target xml:lang="zh"><x id="1"/><g id="2">LoadBitmapResize<x id="3"/></g> <g id="4">(Dir <g id="5">As</g> <g id="6">String</g>, FileName <g id="7">As</g> <g id="8">String</g>, Width <g id="9">As</g> <g id="10">Int</g>, Height <g id="11">As</g> <g id="12">Int</g>, KeepAspectRatio <g id="13">As</g> <g id="14">Boolean</g>) <g id="15">As</g> <g id="16">Bitmap</g></g></target>
</trans-unit>
<trans-unit id="N98F0C226-sub1" xml:space="preserve">
<source xml:lang="en">Image 1873</source>
<target xml:lang="zh">Image 1873</target>
</trans-unit>
<trans-unit id="N98F0C226-sub2" xml:space="preserve">
<source xml:lang="en">Picture 113</source>
<target xml:lang="zh">Picture 113</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu915" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Loads the bitmap and sets its size.<x id="2"/>The bitmap scale will be the same as the device scale.<x id="3"/>Unlike LoadBitmapSample which requires the container Gravity to be set to FILL, LoadBitmapResize provides better results when the Gravity is set to CENTER. <x id="4"/>Example: <x id="5"/><g id="6">Dim</g> <g id="7">bd</g> <g id="8">As</g> <g id="9">BitmapDrawable</g> = <g id="10">Activity</g>.<g id="11">SetBackgroundImage</g>(<g id="12">LoadBitmapResize</g>(<g id="13">File</g>.<g id="14">DirAssets</g>, <g id="15">"SomeFile.jpg"</g>, <g id="16">100%x</g>, <g id="17">100%y</g>, <g id="18">True</g>)) <x id="19"/><g id="20">bd</g>.<g id="21">Gravity</g> = <g id="22">Gravity</g>.<g id="23">CENTER</g><x id="24"/>Or: <x id="25"/><g id="26">Activity</g>.<g id="27">SetBackgroundImage</g>(<g id="28">LoadBitmapResize</g>(<g id="29">File</g>.<g id="30">DirAssets</g>, <g id="31">"SomeFile.jpg"</g>, <g id="32">100%x</g>, <g id="33">100%y</g>, <g id="34">True</g>)).<g id="35">Gravity</g> = <g id="36">Gravity</g>.<g id="37">CENTER</g></source>
<target xml:lang="zh"><x id="1"/>Loads the bitmap and sets its size.<x id="2"/>The bitmap scale will be the same as the device scale.<x id="3"/>Unlike LoadBitmapSample which requires the container Gravity to be set to FILL, LoadBitmapResize provides better results when the Gravity is set to CENTER. <x id="4"/>Example: <x id="5"/><g id="6">Dim</g> <g id="7">bd</g> <g id="8">As</g> <g id="9">BitmapDrawable</g> = <g id="10">Activity</g>.<g id="11">SetBackgroundImage</g>(<g id="12">LoadBitmapResize</g>(<g id="13">File</g>.<g id="14">DirAssets</g>, <g id="15">"SomeFile.jpg"</g>, <g id="16">100%x</g>, <g id="17">100%y</g>, <g id="18">True</g>)) <x id="19"/><g id="20">bd</g>.<g id="21">Gravity</g> = <g id="22">Gravity</g>.<g id="23">CENTER</g><x id="24"/>Or: <x id="25"/><g id="26">Activity</g>.<g id="27">SetBackgroundImage</g>(<g id="28">LoadBitmapResize</g>(<g id="29">File</g>.<g id="30">DirAssets</g>, <g id="31">"SomeFile.jpg"</g>, <g id="32">100%x</g>, <g id="33">100%y</g>, <g id="34">True</g>)).<g id="35">Gravity</g> = <g id="36">Gravity</g>.<g id="37">CENTER</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu916" xml:space="preserve">
<source xml:lang="en">LoadBitmapSample<g id="1"> (<g id="2">Dir</g> <g id="3">As</g> <g id="4">String</g>, <g id="5">FileName</g> <g id="6">As</g> <g id="7">String</g>, <g id="8">MaxWidth</g> <g id="9">As</g> <g id="10">Int</g>, <g id="11">MaxHeight</g> <g id="12">As</g> <g id="13">Int</g>) <g id="14">As</g> <g id="15">Bitmap</g></g></source>
<target xml:lang="zh">LoadBitmapSample<g id="1"> (<g id="2">Dir</g> <g id="3">As</g> <g id="4">String</g>, <g id="5">FileName</g> <g id="6">As</g> <g id="7">String</g>, <g id="8">MaxWidth</g> <g id="9">As</g> <g id="10">Int</g>, <g id="11">MaxHeight</g> <g id="12">As</g> <g id="13">Int</g>) <g id="14">As</g> <g id="15">Bitmap</g></g></target>
</trans-unit>
<trans-unit id="N98F0C228-sub1" xml:space="preserve">
<source xml:lang="en">Image 150</source>
<target xml:lang="zh">Image 150</target>
</trans-unit>
<trans-unit id="N98F0C228-sub2" xml:space="preserve">
<source xml:lang="en">Picture 259</source>
<target xml:lang="zh">Picture 259</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu917" xml:space="preserve">
<source xml:lang="en">Loads the bitmap.<x id="1"/>The decoder will subsample the bitmap if MaxWidth or MaxHeight are smaller than the bitmap dimensions.<x id="2"/>This can save a lot of memory when loading large images.<x id="3"/>Example: <x id="4"/><g id="5">Panel1</g><g id="6">.<g id="7">SetBackgroundImage</g>(<g id="8">LoadBitmapSample</g>(<g id="9">File</g>.<g id="10">DirAssets</g>, <g id="11">"SomeFile.jpg"</g>, <g id="12">Panel1</g>.<g id="13">Width</g>, <g id="14">Panel1</g>.<g id="15">Height</g>))<x id="16"/> </g></source>
<target xml:lang="zh">Loads the bitmap.<x id="1"/>The decoder will subsample the bitmap if MaxWidth or MaxHeight are smaller than the bitmap dimensions.<x id="2"/>This can save a lot of memory when loading large images.<x id="3"/>Example: <x id="4"/><g id="5">Panel1</g><g id="6">.<g id="7">SetBackgroundImage</g>(<g id="8">LoadBitmapSample</g>(<g id="9">File</g>.<g id="10">DirAssets</g>, <g id="11">"SomeFile.jpg"</g>, <g id="12">Panel1</g>.<g id="13">Width</g>, <g id="14">Panel1</g>.<g id="15">Height</g>))<x id="16"/> </g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu918" xml:space="preserve">
<source xml:lang="en">Log<g id="1"> (<g id="2">Message</g> <g id="3">As</g> <g id="4">String</g>)</g></source>
<target xml:lang="zh">Log<g id="1"> (<g id="2">Message</g> <g id="3">As</g> <g id="4">String</g>)</g></target>
</trans-unit>
<trans-unit id="N98F0C22A-sub1" xml:space="preserve">
<source xml:lang="en">Image 149</source>
<target xml:lang="zh">Image 149</target>
</trans-unit>
<trans-unit id="N98F0C22A-sub2" xml:space="preserve">
<source xml:lang="en">Picture 260</source>
<target xml:lang="zh">Picture 260</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu919" xml:space="preserve">
<source xml:lang="en">Logs a message. The log can be viewed in the Logs tab.<x id="1"/> </source>
<target xml:lang="zh">Logs a message. The log can be viewed in the Logs tab.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu920" xml:space="preserve">
<source xml:lang="en">Logarithm<g id="1"> (<g id="2">Number</g> <g id="3">As</g> <g id="4">Double</g>, <g id="5">Base</g> <g id="6">As</g> <g id="7">Double</g>) <g id="8">As</g> <g id="9">Double</g></g></source>
<target xml:lang="zh">Logarithm<g id="1"> (<g id="2">Number</g> <g id="3">As</g> <g id="4">Double</g>, <g id="5">Base</g> <g id="6">As</g> <g id="7">Double</g>) <g id="8">As</g> <g id="9">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0C241-sub1" xml:space="preserve">
<source xml:lang="en">Image 148</source>
<target xml:lang="zh">Image 148</target>
</trans-unit>
<trans-unit id="N98F0C241-sub2" xml:space="preserve">
<source xml:lang="en">Picture 261</source>
<target xml:lang="zh">Picture 261</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu921" xml:space="preserve">
<source xml:lang="en">LogColor<g id="1"> (<g id="2">Message</g> <g id="3">As</g> <g id="4">String</g>, <g id="5">Color</g> <g id="6">As</g> <g id="7">Int</g>)</g></source>
<target xml:lang="zh">LogColor<g id="1"> (<g id="2">Message</g> <g id="3">As</g> <g id="4">String</g>, <g id="5">Color</g> <g id="6">As</g> <g id="7">Int</g>)</g></target>
</trans-unit>
<trans-unit id="N98F0C242-sub1" xml:space="preserve">
<source xml:lang="en">Image 147</source>
<target xml:lang="zh">Image 147</target>
</trans-unit>
<trans-unit id="N98F0C242-sub2" xml:space="preserve">
<source xml:lang="en">Picture 262</source>
<target xml:lang="zh">Picture 262</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu922" xml:space="preserve">
<source xml:lang="en">Logs a message. The message will be displayed in the IDE with the specified color.<x id="1"/> </source>
<target xml:lang="zh">Logs a message. The message will be displayed in the IDE with the specified color.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu923" xml:space="preserve">
<source xml:lang="en">Max<g id="1"> (<g id="2">Number1</g> <g id="3">As</g> <g id="4">Double</g>, <g id="5">Number2</g> <g id="6">As</g> <g id="7">Double</g>) <g id="8">As</g> <g id="9">Double</g></g></source>
<target xml:lang="zh">Max<g id="1"> (<g id="2">Number1</g> <g id="3">As</g> <g id="4">Double</g>, <g id="5">Number2</g> <g id="6">As</g> <g id="7">Double</g>) <g id="8">As</g> <g id="9">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0C244-sub1" xml:space="preserve">
<source xml:lang="en">Image 146</source>
<target xml:lang="zh">Image 146</target>
</trans-unit>
<trans-unit id="N98F0C244-sub2" xml:space="preserve">
<source xml:lang="en">Picture 263</source>
<target xml:lang="zh">Picture 263</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu924" xml:space="preserve">
<source xml:lang="en">Returns the larger number between the two numbers.<x id="1"/> </source>
<target xml:lang="zh">Returns the larger number between the two numbers.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu925" xml:space="preserve">
<source xml:lang="en">Me<g id="1"> <g id="2">As</g> <g id="3">Object</g></g></source>
<target xml:lang="zh">Me<g id="1"> <g id="2">As</g> <g id="3">Object</g></g></target>
</trans-unit>
<trans-unit id="N98F0C246-sub1" xml:space="preserve">
<source xml:lang="en">Image 145</source>
<target xml:lang="zh">Image 145</target>
</trans-unit>
<trans-unit id="N98F0C246-sub2" xml:space="preserve">
<source xml:lang="en">Picture 264</source>
<target xml:lang="zh">Picture 264</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu926" xml:space="preserve">
<source xml:lang="en">For classes: returns a reference to the current instance.<x id="1"/>For activities and services: returns a reference to an object that can be used with CallSub, CallSubDelayed and SubExists keywords.<x id="2"/>Cannot be used in code modules.<x id="3"/> </source>
<target xml:lang="zh">For classes: returns a reference to the current instance.<x id="1"/>For activities and services: returns a reference to an object that can be used with CallSub, CallSubDelayed and SubExists keywords.<x id="2"/>Cannot be used in code modules.<x id="3"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu927" xml:space="preserve">
<source xml:lang="en">Min<g id="1"> (<g id="2">Number1</g> <g id="3">As</g> <g id="4">Double</g>, <g id="5">Number2</g> <g id="6">As</g> <g id="7">Double</g>) <g id="8">As</g> <g id="9">Double</g></g></source>
<target xml:lang="zh">Min<g id="1"> (<g id="2">Number1</g> <g id="3">As</g> <g id="4">Double</g>, <g id="5">Number2</g> <g id="6">As</g> <g id="7">Double</g>) <g id="8">As</g> <g id="9">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0C248-sub1" xml:space="preserve">
<source xml:lang="en">Image 144</source>
<target xml:lang="zh">Image 144</target>
</trans-unit>
<trans-unit id="N98F0C248-sub2" xml:space="preserve">
<source xml:lang="en">Picture 265</source>
<target xml:lang="zh">Picture 265</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu928" xml:space="preserve">
<source xml:lang="en">Returns the smaller number between the two numbers.<x id="1"/> </source>
<target xml:lang="zh">Returns the smaller number between the two numbers.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu929" xml:space="preserve">
<source xml:lang="en">Not<g id="1"> (<g id="2">Value</g> <g id="3">As</g> <g id="4">Boolean</g>) <g id="5">As</g> <g id="6">Boolean</g></g></source>
<target xml:lang="zh">Not<g id="1"> (<g id="2">Value</g> <g id="3">As</g> <g id="4">Boolean</g>) <g id="5">As</g> <g id="6">Boolean</g></g></target>
</trans-unit>
<trans-unit id="N98F0C24A-sub1" xml:space="preserve">
<source xml:lang="en">Image 1856</source>
<target xml:lang="zh">Image 1856</target>
</trans-unit>
<trans-unit id="N98F0C24A-sub2" xml:space="preserve">
<source xml:lang="en">Picture 268</source>
<target xml:lang="zh">Picture 268</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu930" xml:space="preserve">
<source xml:lang="en">Inverts the value of the given boolean.<x id="1"/> </source>
<target xml:lang="zh">Inverts the value of the given boolean.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu931" xml:space="preserve">
<source xml:lang="en">Null<g id="1"> <g id="2">As</g> <g id="3">Object</g></g></source>
<target xml:lang="zh">Null<g id="1"> <g id="2">As</g> <g id="3">Object</g></g></target>
</trans-unit>
<trans-unit id="N98F0C261-sub1" xml:space="preserve">
<source xml:lang="en">Image 140</source>
<target xml:lang="zh">Image 140</target>
</trans-unit>
<trans-unit id="N98F0C261-sub2" xml:space="preserve">
<source xml:lang="en">Picture 269</source>
<target xml:lang="zh">Picture 269</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu932" xml:space="preserve">
<source xml:lang="en">NumberFormat<g id="1"> (<g id="2">Number</g> <g id="3">As</g> <g id="4">Double</g>, <g id="5">MinimumIntegers</g> <g id="6">As</g> <g id="7">Int</g>, <g id="8">MaximumFractions</g> <g id="9">As</g> <g id="10">Int</g>) <g id="11">As</g> <g id="12">String</g></g></source>
<target xml:lang="zh">NumberFormat<g id="1"> (<g id="2">Number</g> <g id="3">As</g> <g id="4">Double</g>, <g id="5">MinimumIntegers</g> <g id="6">As</g> <g id="7">Int</g>, <g id="8">MaximumFractions</g> <g id="9">As</g> <g id="10">Int</g>) <g id="11">As</g> <g id="12">String</g></g></target>
</trans-unit>
<trans-unit id="N98F0C262-sub1" xml:space="preserve">
<source xml:lang="en">Image 1857</source>
<target xml:lang="zh">Image 1857</target>
</trans-unit>
<trans-unit id="N98F0C262-sub2" xml:space="preserve">
<source xml:lang="en">Picture 270</source>
<target xml:lang="zh">Picture 270</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu933" xml:space="preserve">
<source xml:lang="en">Converts the specified number to a string. <x id="1"/>The string will include at least Minimum Integers and at most Maximum Fractions digits.<x id="2"/>Example: <x id="3"/><g id="4">Log</g><g id="5">(<g id="6">NumberFormat</g>(<g id="7">12345.6789</g>, <g id="8">0</g>, <g id="9">2</g>)) <g id="10">'"12,345.68"</g> <x id="11"/><g id="12">Log</g>(<g id="13">NumberFormat</g>(<g id="14">1</g>, <g id="15">3</g> ,<g id="16">0</g>)) <g id="17">'"001"<x id="18"/></g> </g></source>
<target xml:lang="zh">Converts the specified number to a string. <x id="1"/>The string will include at least Minimum Integers and at most Maximum Fractions digits.<x id="2"/>Example: <x id="3"/><g id="4">Log</g><g id="5">(<g id="6">NumberFormat</g>(<g id="7">12345.6789</g>, <g id="8">0</g>, <g id="9">2</g>)) <g id="10">'"12,345.68"</g> <x id="11"/><g id="12">Log</g>(<g id="13">NumberFormat</g>(<g id="14">1</g>, <g id="15">3</g> ,<g id="16">0</g>)) <g id="17">'"001"<x id="18"/></g> </g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu934" xml:space="preserve">
<source xml:lang="en">NumberFormat2<g id="1"> (<g id="2">Number</g> <g id="3">As</g> <g id="4">Double</g>, <g id="5">MinimumIntegers</g> <g id="6">As</g> <g id="7">Int</g>, <g id="8">MaximumFractions</g> <g id="9">As</g> <g id="10">Int</g>, <g id="11">MinimumFractions</g> <g id="12">As</g> <g id="13">Int</g>, <g id="14">GroupingUsed</g> <g id="15">As</g> <g id="16">Boolean</g>) <g id="17">As</g> <g id="18">String</g></g></source>
<target xml:lang="zh">NumberFormat2<g id="1"> (<g id="2">Number</g> <g id="3">As</g> <g id="4">Double</g>, <g id="5">MinimumIntegers</g> <g id="6">As</g> <g id="7">Int</g>, <g id="8">MaximumFractions</g> <g id="9">As</g> <g id="10">Int</g>, <g id="11">MinimumFractions</g> <g id="12">As</g> <g id="13">Int</g>, <g id="14">GroupingUsed</g> <g id="15">As</g> <g id="16">Boolean</g>) <g id="17">As</g> <g id="18">String</g></g></target>
</trans-unit>
<trans-unit id="N98F0C264-sub1" xml:space="preserve">
<source xml:lang="en">Image 138</source>
<target xml:lang="zh">Image 138</target>
</trans-unit>
<trans-unit id="N98F0C264-sub2" xml:space="preserve">
<source xml:lang="en">Picture 271</source>
<target xml:lang="zh">Picture 271</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu935" xml:space="preserve">
<source xml:lang="en">Converts the specified number to a string. <x id="1"/>The string will include at least Minimum Integers, at most Maximum Fractions digits and at least Minimum Fractions digits.<x id="2"/>GroupingUsed - Determines whether to group every three integers.<x id="3"/>Example: <x id="4"/><g id="5">Log</g><g id="6">(<g id="7">NumberFormat2</g>(<g id="8">12345.67</g>, <g id="9">0</g>, <g id="10">3</g>, <g id="11">3</g>, <g id="12">false</g>)) <g id="13">'"12345.670"<x id="14"/></g> </g></source>
<target xml:lang="zh">Converts the specified number to a string. <x id="1"/>The string will include at least Minimum Integers, at most Maximum Fractions digits and at least Minimum Fractions digits.<x id="2"/>GroupingUsed - Determines whether to group every three integers.<x id="3"/>Example: <x id="4"/><g id="5">Log</g><g id="6">(<g id="7">NumberFormat2</g>(<g id="8">12345.67</g>, <g id="9">0</g>, <g id="10">3</g>, <g id="11">3</g>, <g id="12">false</g>)) <g id="13">'"12345.670"<x id="14"/></g> </g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu936" xml:space="preserve">
<source xml:lang="en">Power<g id="1"> (<g id="2">Base</g> <g id="3">As</g> <g id="4">Double</g>, <g id="5">Exponent</g> <g id="6">As</g> <g id="7">Double</g>) <g id="8">As</g> <g id="9">Double</g></g></source>
<target xml:lang="zh">Power<g id="1"> (<g id="2">Base</g> <g id="3">As</g> <g id="4">Double</g>, <g id="5">Exponent</g> <g id="6">As</g> <g id="7">Double</g>) <g id="8">As</g> <g id="9">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0C266-sub1" xml:space="preserve">
<source xml:lang="en">Image 135</source>
<target xml:lang="zh">Image 135</target>
</trans-unit>
<trans-unit id="N98F0C266-sub2" xml:space="preserve">
<source xml:lang="en">Picture 274</source>
<target xml:lang="zh">Picture 274</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu937" xml:space="preserve">
<source xml:lang="en">Returns the Base value raised to the Exponent power.<x id="1"/> </source>
<target xml:lang="zh">Returns the Base value raised to the Exponent power.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu938" xml:space="preserve">
<source xml:lang="en">QUOTE<g id="1"> <g id="2">As</g> <g id="3">String</g></g></source>
<target xml:lang="zh">QUOTE<g id="1"> <g id="2">As</g> <g id="3">String</g></g></target>
</trans-unit>
<trans-unit id="N98F0C268-sub1" xml:space="preserve">
<source xml:lang="en">Image 131</source>
<target xml:lang="zh">Image 131</target>
</trans-unit>
<trans-unit id="N98F0C268-sub2" xml:space="preserve">
<source xml:lang="en">Picture 278</source>
<target xml:lang="zh">Picture 278</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu939" xml:space="preserve">
<source xml:lang="en">Quote character <g id="1">"</g>. The value of Chr(34).<x id="2"/> </source>
<target xml:lang="zh">Quote character <g id="1">"</g>. The value of Chr(34).<x id="2"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu940" xml:space="preserve">
<source xml:lang="en">Regex<g id="1"> <g id="2">As</g> <g id="3">Regex</g></g></source>
<target xml:lang="zh">Regex<g id="1"> <g id="2">As</g> <g id="3">Regex</g></g></target>
</trans-unit>
<trans-unit id="N98F0C27F-sub1" xml:space="preserve">
<source xml:lang="en">Image 130</source>
<target xml:lang="zh">Image 130</target>
</trans-unit>
<trans-unit id="N98F0C27F-sub2" xml:space="preserve">
<source xml:lang="en">Picture 279</source>
<target xml:lang="zh">Picture 279</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu941" xml:space="preserve">
<source xml:lang="en">Regular expressions related methods.<x id="1"/> </source>
<target xml:lang="zh">Regular expressions related methods.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu942" xml:space="preserve">
<source xml:lang="en">Return</source>
<target xml:lang="zh">Return</target>
</trans-unit>
<trans-unit id="N98F0C281-sub1" xml:space="preserve">
<source xml:lang="en">Image 129</source>
<target xml:lang="zh">Image 129</target>
</trans-unit>
<trans-unit id="N98F0C281-sub2" xml:space="preserve">
<source xml:lang="en">Picture 280</source>
<target xml:lang="zh">Picture 280</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu943" xml:space="preserve">
<source xml:lang="en">Returns from the current sub and optionally returns the given value.<x id="1"/>Syntax: <g id="2">Return [value]<x id="3"/></g> </source>
<target xml:lang="zh">Returns from the current sub and optionally returns the given value.<x id="1"/>Syntax: <g id="2">Return [value]<x id="3"/></g> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu944" xml:space="preserve">
<source xml:lang="en">Rnd<g id="1"> (<g id="2">Min</g> <g id="3">As</g> <g id="4">Int</g>, <g id="5">Max</g> <g id="6">As</g> <g id="7">Int</g>) <g id="8">As</g> <g id="9">Int</g></g></source>
<target xml:lang="zh">Rnd<g id="1"> (<g id="2">Min</g> <g id="3">As</g> <g id="4">Int</g>, <g id="5">Max</g> <g id="6">As</g> <g id="7">Int</g>) <g id="8">As</g> <g id="9">Int</g></g></target>
</trans-unit>
<trans-unit id="N98F0C283-sub1" xml:space="preserve">
<source xml:lang="en">Image 128</source>
<target xml:lang="zh">Image 128</target>
</trans-unit>
<trans-unit id="N98F0C283-sub2" xml:space="preserve">
<source xml:lang="en">Picture 281</source>
<target xml:lang="zh">Picture 281</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu945" xml:space="preserve">
<source xml:lang="en">Returns a random integer between Min (inclusive) and Max (exclusive).<x id="1"/> </source>
<target xml:lang="zh">Returns a random integer between Min (inclusive) and Max (exclusive).<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu946" xml:space="preserve">
<source xml:lang="en">RndSeed<g id="1"> (<g id="2">Seed</g> <g id="3">As</g> <g id="4">Long</g>)</g></source>
<target xml:lang="zh">RndSeed<g id="1"> (<g id="2">Seed</g> <g id="3">As</g> <g id="4">Long</g>)</g></target>
</trans-unit>
<trans-unit id="N98F0C285-sub1" xml:space="preserve">
<source xml:lang="en">Image 127</source>
<target xml:lang="zh">Image 127</target>
</trans-unit>
<trans-unit id="N98F0C285-sub2" xml:space="preserve">
<source xml:lang="en">Picture 282</source>
<target xml:lang="zh">Picture 282</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu947" xml:space="preserve">
<source xml:lang="en">Sets the random seed value. <x id="1"/>This method can be used for debugging as it allows you to get the same results each time.<x id="2"/> </source>
<target xml:lang="zh">Sets the random seed value. <x id="1"/>This method can be used for debugging as it allows you to get the same results each time.<x id="2"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu948" xml:space="preserve">
<source xml:lang="en">Round<g id="1"> (<g id="2">Number</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Long</g></g></source>
<target xml:lang="zh">Round<g id="1"> (<g id="2">Number</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Long</g></g></target>
</trans-unit>
<trans-unit id="N98F0C287-sub1" xml:space="preserve">
<source xml:lang="en">Image 126</source>
<target xml:lang="zh">Image 126</target>
</trans-unit>
<trans-unit id="N98F0C287-sub2" xml:space="preserve">
<source xml:lang="en">Picture 283</source>
<target xml:lang="zh">Picture 283</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu949" xml:space="preserve">
<source xml:lang="en">Returns the closest long number to the given number.<x id="1"/> </source>
<target xml:lang="zh">Returns the closest long number to the given number.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu950" xml:space="preserve">
<source xml:lang="en">Round2<g id="1"> (<g id="2">Number</g> <g id="3">As</g> <g id="4">Double</g>, <g id="5">DecimalPlaces</g> <g id="6">As</g> <g id="7">Int</g>) <g id="8">As</g> <g id="9">Double</g></g></source>
<target xml:lang="zh">Round2<g id="1"> (<g id="2">Number</g> <g id="3">As</g> <g id="4">Double</g>, <g id="5">DecimalPlaces</g> <g id="6">As</g> <g id="7">Int</g>) <g id="8">As</g> <g id="9">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0C29E-sub1" xml:space="preserve">
<source xml:lang="en">Image 125</source>
<target xml:lang="zh">Image 125</target>
</trans-unit>
<trans-unit id="N98F0C29E-sub2" xml:space="preserve">
<source xml:lang="en">Picture 284</source>
<target xml:lang="zh">Picture 284</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu951" xml:space="preserve">
<source xml:lang="en">Rounds the given number and leaves up to the specified number of fractional digits.<x id="1"/> </source>
<target xml:lang="zh">Rounds the given number and leaves up to the specified number of fractional digits.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu952" xml:space="preserve">
<source xml:lang="en">Select</source>
<target xml:lang="zh">Select</target>
</trans-unit>
<trans-unit id="N98F0C2A0-sub1" xml:space="preserve">
<source xml:lang="en">Image 124</source>
<target xml:lang="zh">Image 124</target>
</trans-unit>
<trans-unit id="N98F0C2A0-sub2" xml:space="preserve">
<source xml:lang="en">Picture 285</source>
<target xml:lang="zh">Picture 285</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu953" xml:space="preserve">
<source xml:lang="en">Compares a single value to multiple values.<x id="1"/>Example: <x id="2"/><g id="3">Dim</g><g id="4"> <g id="5">value</g> <g id="6">As</g> <g id="7">Int</g> <x id="8"/><g id="9">value</g> = <g id="10">7</g> <x id="11"/><g id="12">Select</g> <g id="13">value</g> <x id="14"/>  <g id="15">Case</g> <g id="16">1</g> <x id="17"/>    <g id="18">Log</g>(<g id="19">"One"</g>) <x id="20"/>  <g id="21">Case</g> <g id="22">2</g>, <g id="23">4</g>, <g id="24">6</g>, <g id="25">8</g> <x id="26"/>    <g id="27">Log</g>(<g id="28">"Even"</g>) <x id="29"/>  <g id="30">Case</g> <g id="31">3</g>, <g id="32">5</g>, <g id="33">7</g>, <g id="34">9</g> <x id="35"/>    <g id="36">Log</g>(<g id="37">"Odd larger than one"</g>) <x id="38"/>  <g id="39">Case</g> <g id="40">Else</g> <x id="41"/>    <g id="42">Log</g>(<g id="43">"Larger than 9"</g>) <x id="44"/><g id="45">End</g> <g id="46">Select<x id="47"/></g></g> </source>
<target xml:lang="zh">Compares a single value to multiple values.<x id="1"/>Example: <x id="2"/><g id="3">Dim</g><g id="4"> <g id="5">value</g> <g id="6">As</g> <g id="7">Int</g> <x id="8"/><g id="9">value</g> = <g id="10">7</g> <x id="11"/><g id="12">Select</g> <g id="13">value</g> <x id="14"/>  <g id="15">Case</g> <g id="16">1</g> <x id="17"/>    <g id="18">Log</g>(<g id="19">"One"</g>) <x id="20"/>  <g id="21">Case</g> <g id="22">2</g>, <g id="23">4</g>, <g id="24">6</g>, <g id="25">8</g> <x id="26"/>    <g id="27">Log</g>(<g id="28">"Even"</g>) <x id="29"/>  <g id="30">Case</g> <g id="31">3</g>, <g id="32">5</g>, <g id="33">7</g>, <g id="34">9</g> <x id="35"/>    <g id="36">Log</g>(<g id="37">"Odd larger than one"</g>) <x id="38"/>  <g id="39">Case</g> <g id="40">Else</g> <x id="41"/>    <g id="42">Log</g>(<g id="43">"Larger than 9"</g>) <x id="44"/><g id="45">End</g> <g id="46">Select<x id="47"/></g></g> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu954" xml:space="preserve">
<source xml:lang="en">Sender<g id="1"> <g id="2">As</g> <g id="3">Object</g></g></source>
<target xml:lang="zh">Sender<g id="1"> <g id="2">As</g> <g id="3">Object</g></g></target>
</trans-unit>
<trans-unit id="N98F0C2A2-sub1" xml:space="preserve">
<source xml:lang="en">Image 123</source>
<target xml:lang="zh">Image 123</target>
</trans-unit>
<trans-unit id="N98F0C2A2-sub2" xml:space="preserve">
<source xml:lang="en">Picture 286</source>
<target xml:lang="zh">Picture 286</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu955" xml:space="preserve">
<source xml:lang="en">Returns the object that raised the event.<x id="1"/>Only valid while inside the event sub.<x id="2"/>Example: <x id="3"/><g id="4">Sub</g><g id="5"> <g id="6">Button_Click</g> <x id="7"/><g id="8">  Dim</g> <g id="9">b</g> <g id="10">As</g> <g id="11">Button</g> <x id="12"/><g id="13">  b</g> = <g id="14">Sender</g> <x id="15"/><g id="16">  b</g>.<g id="17">Text</g> = <g id="18">"I've been clicked"</g> <x id="19"/><g id="20">End</g> <g id="21">Sub<x id="22"/></g></g> </source>
<target xml:lang="zh">Returns the object that raised the event.<x id="1"/>Only valid while inside the event sub.<x id="2"/>Example: <x id="3"/><g id="4">Sub</g><g id="5"> <g id="6">Button_Click</g> <x id="7"/><g id="8">  Dim</g> <g id="9">b</g> <g id="10">As</g> <g id="11">Button</g> <x id="12"/><g id="13">  b</g> = <g id="14">Sender</g> <x id="15"/><g id="16">  b</g>.<g id="17">Text</g> = <g id="18">"I've been clicked"</g> <x id="19"/><g id="20">End</g> <g id="21">Sub<x id="22"/></g></g> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu956" xml:space="preserve">
<source xml:lang="en"><g id="1">Sin</g><g id="2"> (<g id="3">Radians</g> <g id="4">As</g> <g id="5">Double</g>) <g id="6">As</g> <g id="7">Double<x id="8"/></g></g>Calculates the trigonometric sine function. Angle measured in radians.<x id="9"/> </source>
<target xml:lang="zh"><g id="1">Sin</g><g id="2"> (<g id="3">Radians</g> <g id="4">As</g> <g id="5">Double</g>) <g id="6">As</g> <g id="7">Double<x id="8"/></g></g>Calculates the trigonometric sine function. Angle measured in radians.<x id="9"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu957" xml:space="preserve">
<source xml:lang="en"><g id="1">SinD</g><g id="2"> (<g id="3">Degrees</g> <g id="4">As</g> <g id="5">Double</g>) <g id="6">As</g> <g id="7">Double</g></g></source>
<target xml:lang="zh"><g id="1">SinD</g><g id="2"> (<g id="3">Degrees</g> <g id="4">As</g> <g id="5">Double</g>) <g id="6">As</g> <g id="7">Double</g></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu958" xml:space="preserve">
<source xml:lang="en">Calculates the trigonometric sine function. Angle measured in degrees.<x id="1"/> </source>
<target xml:lang="zh">Calculates the trigonometric sine function. Angle measured in degrees.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu959" xml:space="preserve">
<source xml:lang="en">Sleep<g id="1"> (<g id="2">Value</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></source>
<target xml:lang="zh">Sleep<g id="1"> (<g id="2">Value</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0C2A7-sub1" xml:space="preserve">
<source xml:lang="en">Image 371</source>
<target xml:lang="zh">Image 371</target>
</trans-unit>
<trans-unit id="N98F0C2A7-sub2" xml:space="preserve">
<source xml:lang="en">Picture 290</source>
<target xml:lang="zh">Picture 290</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu960" xml:space="preserve">
<source xml:lang="en">Pauses the current sub execution and resumes it after the specified time.</source>
<target xml:lang="zh">Pauses the current sub execution and resumes it after the specified time.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu961" xml:space="preserve">
<source xml:lang="en">SmartStringFormatter<g id="1"> (<g id="2">Format</g> <g id="3">As</g> <g id="4">String</g>, <g id="5">Value</g> <g id="6">As</g> <g id="7">Object</g>) <g id="8">As</g> <g id="9">String</g></g></source>
<target xml:lang="zh">SmartStringFormatter<g id="1"> (<g id="2">Format</g> <g id="3">As</g> <g id="4">String</g>, <g id="5">Value</g> <g id="6">As</g> <g id="7">Object</g>) <g id="8">As</g> <g id="9">String</g></g></target>
</trans-unit>
<trans-unit id="N98F0C2BE-sub1" xml:space="preserve">
<source xml:lang="en">Image 120</source>
<target xml:lang="zh">Image 120</target>
</trans-unit>
<trans-unit id="N98F0C2BE-sub2" xml:space="preserve">
<source xml:lang="en">Picture 289</source>
<target xml:lang="zh">Picture 289</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu962" xml:space="preserve">
<source xml:lang="en">Internal keyword used by the Smart String literal.<x id="1"/> </source>
<target xml:lang="zh">Internal keyword used by the Smart String literal.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu963" xml:space="preserve">
<source xml:lang="en">Sqrt<g id="1"> (<g id="2">Value</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></source>
<target xml:lang="zh">Sqrt<g id="1"> (<g id="2">Value</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0C2C0-sub1" xml:space="preserve">
<source xml:lang="en">Image 119</source>
<target xml:lang="zh">Image 119</target>
</trans-unit>
<trans-unit id="N98F0C2C0-sub2" xml:space="preserve">
<source xml:lang="en">Picture 290</source>
<target xml:lang="zh">Picture 290</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu964" xml:space="preserve">
<source xml:lang="en">Returns the positive square root.<x id="1"/> </source>
<target xml:lang="zh">Returns the positive square root.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu965" xml:space="preserve">
<source xml:lang="en">Sub</source>
<target xml:lang="zh">Sub</target>
</trans-unit>
<trans-unit id="N98F0C2C2-sub1" xml:space="preserve">
<source xml:lang="en">Image 113</source>
<target xml:lang="zh">Image 113</target>
</trans-unit>
<trans-unit id="N98F0C2C2-sub2" xml:space="preserve">
<source xml:lang="en">Picture 296</source>
<target xml:lang="zh">Picture 296</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu966" xml:space="preserve">
<source xml:lang="en">Declares a sub with the parameters and return type.<x id="1"/>Syntax: Sub name [(list of parameters)] [As return-type]<x id="2"/>Parameters include name and type.<x id="3"/>The lengths of arrays dimensions should not be included.<x id="4"/>Example: <x id="5"/><g id="6">Sub</g><g id="7"> <g id="8">MySub</g> (<g id="9">FirstName</g> <g id="10">As</g> <g id="11">String</g>, <g id="12">LastName</g> <g id="13">As</g> <g id="14">String</g>, <g id="15">Age</g> <g id="16">As</g> <g id="17">Int</g>, <g id="18">OtherValues</g>() <g id="19">As</g> <g id="20">Double</g>) <g id="21">As</g> <g id="22">Boolean</g> <x id="23"/>  ... <x id="24"/><g id="25">End</g> <g id="26">Sub</g></g><x id="27"/>In this example OtherValues is a single dimension array.<x id="28"/>The return type declaration is different than other declarations as the array parenthesis follow the type and not<x id="29"/>the name (which does not exist in this case).<x id="30"/> </source>
<target xml:lang="zh">Declares a sub with the parameters and return type.<x id="1"/>Syntax: Sub name [(list of parameters)] [As return-type]<x id="2"/>Parameters include name and type.<x id="3"/>The lengths of arrays dimensions should not be included.<x id="4"/>Example: <x id="5"/><g id="6">Sub</g><g id="7"> <g id="8">MySub</g> (<g id="9">FirstName</g> <g id="10">As</g> <g id="11">String</g>, <g id="12">LastName</g> <g id="13">As</g> <g id="14">String</g>, <g id="15">Age</g> <g id="16">As</g> <g id="17">Int</g>, <g id="18">OtherValues</g>() <g id="19">As</g> <g id="20">Double</g>) <g id="21">As</g> <g id="22">Boolean</g> <x id="23"/>  ... <x id="24"/><g id="25">End</g> <g id="26">Sub</g></g><x id="27"/>In this example OtherValues is a single dimension array.<x id="28"/>The return type declaration is different than other declarations as the array parenthesis follow the type and not<x id="29"/>the name (which does not exist in this case).<x id="30"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu967" xml:space="preserve">
<source xml:lang="en">SubExists<g id="1"> (<g id="2">Object</g> <g id="3">As</g> <g id="4">Object</g>, <g id="5">Sub</g> <g id="6">As</g> <g id="7">String</g>) <g id="8">As</g> <g id="9">Boolean</g></g></source>
<target xml:lang="zh">SubExists<g id="1"> (<g id="2">Object</g> <g id="3">As</g> <g id="4">Object</g>, <g id="5">Sub</g> <g id="6">As</g> <g id="7">String</g>) <g id="8">As</g> <g id="9">Boolean</g></g></target>
</trans-unit>
<trans-unit id="N98F0C2C4-sub1" xml:space="preserve">
<source xml:lang="en">Image 112</source>
<target xml:lang="zh">Image 112</target>
</trans-unit>
<trans-unit id="N98F0C2C4-sub2" xml:space="preserve">
<source xml:lang="en">Picture 297</source>
<target xml:lang="zh">Picture 297</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu968" xml:space="preserve">
<source xml:lang="en">Tests whether the object includes the specified method.<x id="1"/>Returns false if the object was not initialized or not an instance of a user class.<x id="2"/> </source>
<target xml:lang="zh">Tests whether the object includes the specified method.<x id="1"/>Returns false if the object was not initialized or not an instance of a user class.<x id="2"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu969" xml:space="preserve">
<source xml:lang="en">TAB<g id="1"> <g id="2">As</g> <g id="3">String</g></g></source>
<target xml:lang="zh">TAB<g id="1"> <g id="2">As</g> <g id="3">String</g></g></target>
</trans-unit>
<trans-unit id="N98F0C2C6-sub1" xml:space="preserve">
<source xml:lang="en">Image 111</source>
<target xml:lang="zh">Image 111</target>
</trans-unit>
<trans-unit id="N98F0C2C6-sub2" xml:space="preserve">
<source xml:lang="en">Picture 298</source>
<target xml:lang="zh">Picture 298</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu970" xml:space="preserve">
<source xml:lang="en">Tab character.<x id="1"/> </source>
<target xml:lang="zh">Tab character.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu971" xml:space="preserve">
<source xml:lang="en">Tan<g id="1"> (<g id="2">Radians</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></source>
<target xml:lang="zh">Tan<g id="1"> (<g id="2">Radians</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0C2DD-sub1" xml:space="preserve">
<source xml:lang="en">Image 110</source>
<target xml:lang="zh">Image 110</target>
</trans-unit>
<trans-unit id="N98F0C2DD-sub2" xml:space="preserve">
<source xml:lang="en">Picture 299</source>
<target xml:lang="zh">Picture 299</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu972" xml:space="preserve">
<source xml:lang="en">Calculates the trigonometric tangent function. Angle measured in radians.<x id="1"/> </source>
<target xml:lang="zh">Calculates the trigonometric tangent function. Angle measured in radians.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu973" xml:space="preserve">
<source xml:lang="en">TanD<g id="1"> (<g id="2">Degrees</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></source>
<target xml:lang="zh">TanD<g id="1"> (<g id="2">Degrees</g> <g id="3">As</g> <g id="4">Double</g>) <g id="5">As</g> <g id="6">Double</g></g></target>
</trans-unit>
<trans-unit id="N98F0C2DF-sub1" xml:space="preserve">
<source xml:lang="en">Image 109</source>
<target xml:lang="zh">Image 109</target>
</trans-unit>
<trans-unit id="N98F0C2DF-sub2" xml:space="preserve">
<source xml:lang="en">Picture 300</source>
<target xml:lang="zh">Picture 300</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu974" xml:space="preserve">
<source xml:lang="en">Calculates the trigonometric tangent function. Angle measured in degrees.<x id="1"/> </source>
<target xml:lang="zh">Calculates the trigonometric tangent function. Angle measured in degrees.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu975" xml:space="preserve">
<source xml:lang="en">True<g id="1"> <g id="2">As</g> <g id="3">Boolean</g></g></source>
<target xml:lang="zh">True<g id="1"> <g id="2">As</g> <g id="3">Boolean</g></g></target>
</trans-unit>
<trans-unit id="N98F0C2E1-sub1" xml:space="preserve">
<source xml:lang="en">Image 107</source>
<target xml:lang="zh">Image 107</target>
</trans-unit>
<trans-unit id="N98F0C2E1-sub2" xml:space="preserve">
<source xml:lang="en">Picture 302</source>
<target xml:lang="zh">Picture 302</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu976" xml:space="preserve">
<source xml:lang="en">Try</source>
<target xml:lang="zh">Try</target>
</trans-unit>
<trans-unit id="N98F0C2E2-sub1" xml:space="preserve">
<source xml:lang="en">Image 106</source>
<target xml:lang="zh">Image 106</target>
</trans-unit>
<trans-unit id="N98F0C2E2-sub2" xml:space="preserve">
<source xml:lang="en">Picture 303</source>
<target xml:lang="zh">Picture 303</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu977" xml:space="preserve">
<source xml:lang="en">Any exception thrown inside a try block will be caught in the catch block.<x id="1"/>Call LastException to get the caught exception.<x id="2"/>Syntax:<x id="3"/><g id="4">Try<x id="5"/>...<x id="6"/>Catch<x id="7"/>...<x id="8"/>End Try<x id="9"/> </g></source>
<target xml:lang="zh">Any exception thrown inside a try block will be caught in the catch block.<x id="1"/>Call LastException to get the caught exception.<x id="2"/>Syntax:<x id="3"/><g id="4">Try<x id="5"/>...<x id="6"/>Catch<x id="7"/>...<x id="8"/>End Try<x id="9"/> </g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu978" xml:space="preserve">
<source xml:lang="en">Type</source>
<target xml:lang="zh">Type</target>
</trans-unit>
<trans-unit id="N98F0C2E4-sub1" xml:space="preserve">
<source xml:lang="en">Image 105</source>
<target xml:lang="zh">Image 105</target>
</trans-unit>
<trans-unit id="N98F0C2E4-sub2" xml:space="preserve">
<source xml:lang="en">Picture 304</source>
<target xml:lang="zh">Picture 304</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu979" xml:space="preserve">
<source xml:lang="en">Declares a structure.<x id="1"/>Can only be used inside sub Globals or sub Process_Globals.<x id="2"/>Syntax:<x id="3"/>Type type-name (field1, field2, ...)<x id="4"/>Fields include name and type.<x id="5"/>Example: <x id="6"/><g id="7">Type</g><g id="8"> <g id="9">MyType</g> (<g id="10">Name</g> <g id="11">As</g> <g id="12">String</g>, <g id="13">Items</g>(<g id="14">10</g>) <g id="15">As</g> <g id="16">Int</g>) <x id="17"/><g id="18">Dim</g> <g id="19">a</g>, <g id="20">b</g> <g id="21">As</g> <g id="22">MyType</g> <x id="23"/><g id="24">a</g>.<g id="25">Initialize</g> <x id="26"/><g id="27">a</g>.<g id="28">Items</g>(<g id="29">2</g>) = <g id="30">123<x id="31"/></g></g> </source>
<target xml:lang="zh">Declares a structure.<x id="1"/>Can only be used inside sub Globals or sub Process_Globals.<x id="2"/>Syntax:<x id="3"/>Type type-name (field1, field2, ...)<x id="4"/>Fields include name and type.<x id="5"/>Example: <x id="6"/><g id="7">Type</g><g id="8"> <g id="9">MyType</g> (<g id="10">Name</g> <g id="11">As</g> <g id="12">String</g>, <g id="13">Items</g>(<g id="14">10</g>) <g id="15">As</g> <g id="16">Int</g>) <x id="17"/><g id="18">Dim</g> <g id="19">a</g>, <g id="20">b</g> <g id="21">As</g> <g id="22">MyType</g> <x id="23"/><g id="24">a</g>.<g id="25">Initialize</g> <x id="26"/><g id="27">a</g>.<g id="28">Items</g>(<g id="29">2</g>) = <g id="30">123<x id="31"/></g></g> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu980" xml:space="preserve">
<source xml:lang="en">Until</source>
<target xml:lang="zh">Until</target>
</trans-unit>
<trans-unit id="N98F0C2FB-sub1" xml:space="preserve">
<source xml:lang="en">Image 104</source>
<target xml:lang="zh">Image 104</target>
</trans-unit>
<trans-unit id="N98F0C2FB-sub2" xml:space="preserve">
<source xml:lang="en">Picture 305</source>
<target xml:lang="zh">Picture 305</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu981" xml:space="preserve">
<source xml:lang="en">Loops until the condition is true.<x id="1"/>Syntax:<x id="2"/><g id="3">Do Until condition<x id="4"/>  ...<x id="5"/>Loop<x id="6"/></g> </source>
<target xml:lang="zh">Loops until the condition is true.<x id="1"/>Syntax:<x id="2"/><g id="3">Do Until condition<x id="4"/>  ...<x id="5"/>Loop<x id="6"/></g> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu982" xml:space="preserve">
<source xml:lang="en">While</source>
<target xml:lang="zh">While</target>
</trans-unit>
<trans-unit id="N98F0C2FD-sub1" xml:space="preserve">
<source xml:lang="en">Image 103</source>
<target xml:lang="zh">Image 103</target>
</trans-unit>
<trans-unit id="N98F0C2FD-sub2" xml:space="preserve">
<source xml:lang="en">Picture 306</source>
<target xml:lang="zh">Picture 306</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu983" xml:space="preserve">
<source xml:lang="en">Loops while the condition is true.<x id="1"/>Syntax:<x id="2"/><g id="3">Do While condition<x id="4"/>...<x id="5"/>Loop</g></source>
<target xml:lang="zh">Loops while the condition is true.<x id="1"/>Syntax:<x id="2"/><g id="3">Do While condition<x id="4"/>...<x id="5"/>Loop</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu984" xml:space="preserve">
<source xml:lang="en"> <x id="1"/>Conditional statements</source>
<target xml:lang="zh"> <x id="1"/>Conditional statements</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu985" xml:space="preserve">
<source xml:lang="en">Different conditional statements are available in Basic.</source>
<target xml:lang="zh">Different conditional statements are available in Basic.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu986" xml:space="preserve">
<source xml:lang="en">If – Then – Else</source>
<target xml:lang="zh">If – Then – Else</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu987" xml:space="preserve">
<source xml:lang="en">The <g id="1">If-Then-Else </g>structure allows to operate conditional tests and execute different code sections according to the test result.</source>
<target xml:lang="zh">The <g id="1">If-Then-Else </g>structure allows to operate conditional tests and execute different code sections according to the test result.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu988" xml:space="preserve">
<source xml:lang="en">General case:</source>
<target xml:lang="zh">General case:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu989" xml:space="preserve">
<source xml:lang="en"><g id="1">If</g> test1 <g id="2">Then</g></source>
<target xml:lang="zh"><g id="1">If</g> test1 <g id="2">Then</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu990" xml:space="preserve">
<source xml:lang="en"><g id="1">' code1</g></source>
<target xml:lang="zh"><g id="1">' code1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu991" xml:space="preserve">
<source xml:lang="en"><g id="1">Else</g> <g id="2">If</g> test2 <g id="3">Then</g></source>
<target xml:lang="zh"><g id="1">Else</g> <g id="2">If</g> test2 <g id="3">Then</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu992" xml:space="preserve">
<source xml:lang="en"><g id="1">' code2</g></source>
<target xml:lang="zh"><g id="1">' code2</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu993" xml:space="preserve">
<source xml:lang="en"><g id="1">Else</g></source>
<target xml:lang="zh"><g id="1">Else</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu994" xml:space="preserve">
<source xml:lang="en"><g id="1">' code3</g></source>
<target xml:lang="zh"><g id="1">' code3</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu995" xml:space="preserve">
<source xml:lang="en"><g id="1">End</g> <g id="2">If</g></source>
<target xml:lang="zh"><g id="1">End</g> <g id="2">If</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu996" xml:space="preserve">
<source xml:lang="en">The <g id="1">If-Then-Else</g> structure works as follows:</source>
<target xml:lang="zh">The <g id="1">If-Then-Else</g> structure works as follows:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu997" xml:space="preserve">
<source xml:lang="en">When reaching the line with the <g id="1">If</g> keyword, <g id="2">test1</g><g id="3"> </g>is executed.</source>
<target xml:lang="zh">When reaching the line with the <g id="1">If</g> keyword, <g id="2">test1</g><g id="3"> </g>is executed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu998" xml:space="preserve">
<source xml:lang="en">If the test result is <g id="1">True</g>, then <g id="2">code1</g> is executed until the line with the <g id="3">Else</g><g id="4"> </g><g id="5">If</g> keyword. And jumps to the line following the <g id="6">End</g><g id="7"> </g><g id="8">If</g> keyword and continues.</source>
<target xml:lang="zh">If the test result is <g id="1">True</g>, then <g id="2">code1</g> is executed until the line with the <g id="3">Else</g><g id="4"> </g><g id="5">If</g> keyword. And jumps to the line following the <g id="6">End</g><g id="7"> </g><g id="8">If</g> keyword and continues.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu999" xml:space="preserve">
<source xml:lang="en">If the result is <g id="1">False</g>, then <g id="2">test2</g><g id="3"> </g>is executed.</source>
<target xml:lang="zh">If the result is <g id="1">False</g>, then <g id="2">test2</g><g id="3"> </g>is executed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1000" xml:space="preserve">
<source xml:lang="en">If the test result is <g id="1">True</g>, then <g id="2">code2</g> is executed until the line with the <g id="3">Else</g> keyword. <x id="4"/>And jumps to the line following the <g id="5">End</g><g id="6"> </g><g id="7">If</g> keyword and continues.</source>
<target xml:lang="zh">If the test result is <g id="1">True</g>, then <g id="2">code2</g> is executed until the line with the <g id="3">Else</g> keyword. <x id="4"/>And jumps to the line following the <g id="5">End</g><g id="6"> </g><g id="7">If</g> keyword and continues.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1001" xml:space="preserve">
<source xml:lang="en">If the result is <g id="1">False</g>, then <g id="2">code3</g><g id="3"> </g>is executed and continues at the line following the <g id="4">End</g><g id="5"> </g><g id="6">If</g> keyword.</source>
<target xml:lang="zh">If the result is <g id="1">False</g>, then <g id="2">code3</g><g id="3"> </g>is executed and continues at the line following the <g id="4">End</g><g id="5"> </g><g id="6">If</g> keyword.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1002" xml:space="preserve">
<source xml:lang="en">The tests can be any kind of conditional test with two possibilities <g id="1">True</g> or <g id="2">False</g>.</source>
<target xml:lang="zh">The tests can be any kind of conditional test with two possibilities <g id="1">True</g> or <g id="2">False</g>.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1003" xml:space="preserve">
<source xml:lang="en">Some examples:</source>
<target xml:lang="zh">Some examples:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1004" xml:space="preserve">
<source xml:lang="en"><g id="1">If</g><g id="2"> b = </g><g id="3">0</g><g id="4"> </g><g id="5">Then</g></source>
<target xml:lang="zh"><g id="1">If</g><g id="2"> b = </g><g id="3">0</g><g id="4"> </g><g id="5">Then</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1005" xml:space="preserve">
<source xml:lang="en"><g id="1"><x id="2"/>a = </g><g id="3">0<x id="4"/></g>The simplest <g id="5">If-Then</g> structure.</source>
<target xml:lang="zh"><g id="1"><x id="2"/>a = </g><g id="3">0<x id="4"/></g>The simplest <g id="5">If-Then</g> structure.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1006" xml:space="preserve">
<source xml:lang="en"><g id="1">End</g><g id="2"> </g><g id="3">If</g></source>
<target xml:lang="zh"><g id="1">End</g><g id="2"> </g><g id="3">If</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1007" xml:space="preserve">
<source xml:lang="en"><g id="1">If</g><g id="2"> b = </g><g id="3">0</g><g id="4"> </g><g id="5">Then</g><g id="6"> a = </g><g id="7">0<x id="8"/></g>The same but in one line.</source>
<target xml:lang="zh"><g id="1">If</g><g id="2"> b = </g><g id="3">0</g><g id="4"> </g><g id="5">Then</g><g id="6"> a = </g><g id="7">0<x id="8"/></g>The same but in one line.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1008" xml:space="preserve">
<source xml:lang="en"><g id="1">If</g><g id="2"> b = </g><g id="3">0</g><g id="4"> </g><g id="5">Then</g></source>
<target xml:lang="zh"><g id="1">If</g><g id="2"> b = </g><g id="3">0</g><g id="4"> </g><g id="5">Then</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1009" xml:space="preserve">
<source xml:lang="en"><g id="1"><x id="2"/>a = </g><g id="3">0<x id="4"/></g>The simplest <g id="5">If-Then-Else</g> structure.</source>
<target xml:lang="zh"><g id="1"><x id="2"/>a = </g><g id="3">0<x id="4"/></g>The simplest <g id="5">If-Then-Else</g> structure.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1010" xml:space="preserve">
<source xml:lang="en"><g id="1">Else</g></source>
<target xml:lang="zh"><g id="1">Else</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1011" xml:space="preserve">
<source xml:lang="en"><x id="1"/>a = <g id="2">1</g></source>
<target xml:lang="zh"><x id="1"/>a = <g id="2">1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1012" xml:space="preserve">
<source xml:lang="en"><g id="1">End</g> <g id="2">If</g></source>
<target xml:lang="zh"><g id="1">End</g> <g id="2">If</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1013" xml:space="preserve">
<source xml:lang="en"><g id="1">If</g><g id="2"> b = </g><g id="3">0</g><g id="4"> </g><g id="5">Then</g><g id="6"> a = </g><g id="7">0</g><g id="8"> </g><g id="9">Else</g><g id="10"> a = </g><g id="11">1<x id="12"/></g>The same but in one line.</source>
<target xml:lang="zh"><g id="1">If</g><g id="2"> b = </g><g id="3">0</g><g id="4"> </g><g id="5">Then</g><g id="6"> a = </g><g id="7">0</g><g id="8"> </g><g id="9">Else</g><g id="10"> a = </g><g id="11">1<x id="12"/></g>The same but in one line.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1014" xml:space="preserve">
<source xml:lang="en">Personally, I prefer the structure on several lines, better readable.</source>
<target xml:lang="zh">Personally, I prefer the structure on several lines, better readable.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1015" xml:space="preserve">
<source xml:lang="en">An old habit from HP Basic some decades ago, this Basic accepted only one instruction per line.</source>
<target xml:lang="zh">An old habit from HP Basic some decades ago, this Basic accepted only one instruction per line.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1016" xml:space="preserve">
<source xml:lang="en">Note. <x id="1"/>Difference between:</source>
<target xml:lang="zh">Note. <x id="1"/>Difference between:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1017" xml:space="preserve">
<source xml:lang="en">B4X<x id="1"/>VB</source>
<target xml:lang="zh">B4X<x id="1"/>VB</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1018" xml:space="preserve">
<source xml:lang="en"><g id="1">Else</g><g id="2"> </g><g id="3">If<x id="4"/>ElseIf</g></source>
<target xml:lang="zh"><g id="1">Else</g><g id="2"> </g><g id="3">If<x id="4"/>ElseIf</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1019" xml:space="preserve">
<source xml:lang="en">In B4X there is a blank character between <g id="1">Else</g> and <g id="2">If</g>.</source>
<target xml:lang="zh">In B4X there is a blank character between <g id="1">Else</g> and <g id="2">If</g>.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1020" xml:space="preserve">
<source xml:lang="en">Some users try to use this notation:</source>
<target xml:lang="zh">Some users try to use this notation:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1021" xml:space="preserve">
<source xml:lang="en"><x id="1"/>If<g id="2"> b = </g><g id="3">0</g><g id="4"> </g>Then<g id="5"> a = </g><g id="6">0 : </g><g id="7">c = 1</g></source>
<target xml:lang="zh"><x id="1"/>If<g id="2"> b = </g><g id="3">0</g><g id="4"> </g>Then<g id="5"> a = </g><g id="6">0 : </g><g id="7">c = 1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1022" xml:space="preserve">
<source xml:lang="en">There is a big difference between B4X and VB that gives errors :</source>
<target xml:lang="zh">There is a big difference between B4X and VB that gives errors :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1023" xml:space="preserve">
<source xml:lang="en">The above statements is equivalent to :</source>
<target xml:lang="zh">The above statements is equivalent to :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1024" xml:space="preserve">
<source xml:lang="en"><x id="1"/>B4X<x id="2"/>VB</source>
<target xml:lang="zh"><x id="1"/>B4X<x id="2"/>VB</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1025" xml:space="preserve">
<source xml:lang="en"><g id="1">If</g> b = <g id="2">0</g> <g id="3">Then<x id="4"/>If</g> b = <g id="5">0</g> <g id="6">Then</g></source>
<target xml:lang="zh"><g id="1">If</g> b = <g id="2">0</g> <g id="3">Then<x id="4"/>If</g> b = <g id="5">0</g> <g id="6">Then</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1026" xml:space="preserve">
<source xml:lang="en"><x id="1"/>a = <g id="2">0<x id="3"/></g>a = <g id="4">0<x id="5"/></g></source>
<target xml:lang="zh"><x id="1"/>a = <g id="2">0<x id="3"/></g>a = <g id="4">0<x id="5"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1027" xml:space="preserve">
<source xml:lang="en"><g id="1">End</g> <g id="2">If<x id="3"/>c</g> = 1<x id="4"/></source>
<target xml:lang="zh"><g id="1">End</g> <g id="2">If<x id="3"/>c</g> = 1<x id="4"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1028" xml:space="preserve">
<source xml:lang="en"><x id="1"/>c = <g id="2">1<x id="3"/></g><g id="4">End</g> <g id="5">If</g></source>
<target xml:lang="zh"><x id="1"/>c = <g id="2">1<x id="3"/></g><g id="4">End</g> <g id="5">If</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1030" xml:space="preserve">
<source xml:lang="en">The colon character ' <g id="1">:</g> ' in the line above is treated in B4X like a CarriageReturn CR character. </source>
<target xml:lang="zh">The colon character ' <g id="1">:</g> ' in the line above is treated in B4X like a CarriageReturn CR character. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1031" xml:space="preserve">
<source xml:lang="en">This structure throws an error.<x id="1"/><g id="2">Sub</g><g id="3"> Plus1 : x = x + </g><g id="4">1</g><g id="5"> : </g><g id="6">End</g><g id="7"> </g><g id="8">Sub</g></source>
<target xml:lang="zh">This structure throws an error.<x id="1"/><g id="2">Sub</g><g id="3"> Plus1 : x = x + </g><g id="4">1</g><g id="5"> : </g><g id="6">End</g><g id="7"> </g><g id="8">Sub</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1032" xml:space="preserve">
<source xml:lang="en">You cannot have a Sub declaration and End Sub on the same line.</source>
<target xml:lang="zh">You cannot have a Sub declaration and End Sub on the same line.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1033" xml:space="preserve">
<source xml:lang="en">Select – Case</source>
<target xml:lang="zh">Select – Case</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1034" xml:space="preserve">
<source xml:lang="en">The <g id="1">Select - Case</g> structure allows to compare a <g id="2">TestExpression</g> with other <g id="3">Expressions</g> and to execute different code sections according to the matches between the <g id="4">TestExpression</g> and <g id="5">Expressions</g>.</source>
<target xml:lang="zh">The <g id="1">Select - Case</g> structure allows to compare a <g id="2">TestExpression</g> with other <g id="3">Expressions</g> and to execute different code sections according to the matches between the <g id="4">TestExpression</g> and <g id="5">Expressions</g>.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1035" xml:space="preserve">
<source xml:lang="en">General case:</source>
<target xml:lang="zh">General case:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1036" xml:space="preserve">
<source xml:lang="en"><g id="1">Select</g><g id="2"> TestExpression<x id="3"/></g><g id="4">TestExpression</g> is the expression to test.</source>
<target xml:lang="zh"><g id="1">Select</g><g id="2"> TestExpression<x id="3"/></g><g id="4">TestExpression</g> is the expression to test.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1037" xml:space="preserve">
<source xml:lang="en"><g id="1">Case</g> ExpressionList1</source>
<target xml:lang="zh"><g id="1">Case</g> ExpressionList1</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1038" xml:space="preserve">
<source xml:lang="en"><g id="1">' code1<x id="2"/></g><g id="3">ExpressionList1</g> is a list of expressions to compare</source>
<target xml:lang="zh"><g id="1">' code1<x id="2"/></g><g id="3">ExpressionList1</g> is a list of expressions to compare</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1039" xml:space="preserve">
<source xml:lang="en"><g id="1">Case</g><g id="2"> ExpressionList2<x id="3"/></g>to <g id="4">TestExpression</g></source>
<target xml:lang="zh"><g id="1">Case</g><g id="2"> ExpressionList2<x id="3"/></g>to <g id="4">TestExpression</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1040" xml:space="preserve">
<source xml:lang="en"><g id="1">' code2<x id="2"/></g><g id="3">ExpressionList2</g> is another list of expressions to compare</source>
<target xml:lang="zh"><g id="1">' code2<x id="2"/></g><g id="3">ExpressionList2</g> is another list of expressions to compare</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1041" xml:space="preserve">
<source xml:lang="en"><g id="1">Case</g><g id="2"> </g><g id="3">Else<x id="4"/></g>to <g id="5">TestExpression</g></source>
<target xml:lang="zh"><g id="1">Case</g><g id="2"> </g><g id="3">Else<x id="4"/></g>to <g id="5">TestExpression</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1042" xml:space="preserve">
<source xml:lang="en"><g id="1">' code3</g></source>
<target xml:lang="zh"><g id="1">' code3</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1043" xml:space="preserve">
<source xml:lang="en"><g id="1">End</g> <g id="2">Select</g></source>
<target xml:lang="zh"><g id="1">End</g> <g id="2">Select</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1044" xml:space="preserve">
<source xml:lang="en">The <g id="1">Select - Case</g> structure works as follows:</source>
<target xml:lang="zh">The <g id="1">Select - Case</g> structure works as follows:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1045" xml:space="preserve">
<source xml:lang="en">The <g id="1">TestExpression</g><g id="2"> </g> is evaluated.</source>
<target xml:lang="zh">The <g id="1">TestExpression</g><g id="2"> </g> is evaluated.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1046" xml:space="preserve">
<source xml:lang="en">If  one element in the  <g id="1">ExpressionList1</g>  matches  <g id="2">TestExpression</g>  then executes  <g id="3">code1</g><g id="4">  and continues at the line following the </g><g id="5">End</g><g id="6"> </g><g id="7">Select</g><g id="8"> </g><g id="9">keyword.</g></source>
<target xml:lang="zh">If  one element in the  <g id="1">ExpressionList1</g>  matches  <g id="2">TestExpression</g>  then executes  <g id="3">code1</g><g id="4">  and continues at the line following the </g><g id="5">End</g><g id="6"> </g><g id="7">Select</g><g id="8"> </g><g id="9">keyword.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1047" xml:space="preserve">
<source xml:lang="en">If one element in the  <g id="1">ExpressionList2</g>  matches  <g id="2">TestExpression</g>  then executes  <g id="3">code2 </g><g id="4">and continues at the line following the </g><g id="5">End</g><g id="6"> </g><g id="7">Select</g><g id="8"> </g><g id="9">keyword.</g></source>
<target xml:lang="zh">If one element in the  <g id="1">ExpressionList2</g>  matches  <g id="2">TestExpression</g>  then executes  <g id="3">code2 </g><g id="4">and continues at the line following the </g><g id="5">End</g><g id="6"> </g><g id="7">Select</g><g id="8"> </g><g id="9">keyword.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1048" xml:space="preserve">
<source xml:lang="en">For no expression matches <g id="1">TestExpression</g> executes <g id="2">code3</g> <g id="3"> <x id="4"/>and continues at the line following the </g><g id="5">End</g><g id="6"> </g><g id="7">Select</g><g id="8"> </g><g id="9">keyword.</g></source>
<target xml:lang="zh">For no expression matches <g id="1">TestExpression</g> executes <g id="2">code3</g> <g id="3"> <x id="4"/>and continues at the line following the </g><g id="5">End</g><g id="6"> </g><g id="7">Select</g><g id="8"> </g><g id="9">keyword.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1049" xml:space="preserve">
<source xml:lang="en"><g id="1">TestExpression</g><g id="2"> </g>can be any expression or value.</source>
<target xml:lang="zh"><g id="1">TestExpression</g><g id="2"> </g>can be any expression or value.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1050" xml:space="preserve">
<source xml:lang="en"><g id="1">ExpressionList1</g><g id="2"> </g>is a list of any expressions or values.</source>
<target xml:lang="zh"><g id="1">ExpressionList1</g><g id="2"> </g>is a list of any expressions or values.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1051" xml:space="preserve">
<source xml:lang="en">Examples:</source>
<target xml:lang="zh">Examples:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1052" xml:space="preserve">
<source xml:lang="en"><g id="1">Select</g><g id="2"> Value</g></source>
<target xml:lang="zh"><g id="1">Select</g><g id="2"> Value</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1053" xml:space="preserve">
<source xml:lang="en"><g id="1">Case</g><g id="2"> </g><g id="3">1</g><g id="4">, </g><g id="5">2</g><g id="6">, </g><g id="7">3</g><g id="8">, </g><g id="9">4<x id="10"/></g>The Value variable is a numeric value.</source>
<target xml:lang="zh"><g id="1">Case</g><g id="2"> </g><g id="3">1</g><g id="4">, </g><g id="5">2</g><g id="6">, </g><g id="7">3</g><g id="8">, </g><g id="9">4<x id="10"/></g>The Value variable is a numeric value.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1054" xml:space="preserve">
<source xml:lang="en"><g id="1">Select</g><g id="2"> a + b<x id="3"/></g>The <g id="4">TestExpression</g><g id="5"> </g> is the sum of a + b</source>
<target xml:lang="zh"><g id="1">Select</g><g id="2"> a + b<x id="3"/></g>The <g id="4">TestExpression</g><g id="5"> </g> is the sum of a + b</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1055" xml:space="preserve">
<source xml:lang="en"><g id="1">Case</g><g id="2"> </g><g id="3">12</g><g id="4">, </g><g id="5">24</g></source>
<target xml:lang="zh"><g id="1">Case</g><g id="2"> </g><g id="3">12</g><g id="4">, </g><g id="5">24</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1056" xml:space="preserve">
<source xml:lang="en"><g id="1">Select</g><g id="2"> Txt.CharAt<x id="3"/></g>The <g id="4">TestExpression</g><g id="5"> </g> is a character at</source>
<target xml:lang="zh"><g id="1">Select</g><g id="2"> Txt.CharAt<x id="3"/></g>The <g id="4">TestExpression</g><g id="5"> </g> is a character at</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1057" xml:space="preserve">
<source xml:lang="en"><g id="1">Case</g><g id="2"> </g><g id="3">"A"</g><g id="4">, </g><g id="5">"B"</g><g id="6">, </g><g id="7">"C"</g></source>
<target xml:lang="zh"><g id="1">Case</g><g id="2"> </g><g id="3">"A"</g><g id="4">, </g><g id="5">"B"</g><g id="6">, </g><g id="7">"C"</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1058" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Activity_Touch (Action </g>As<g id="2"> </g><g id="3">Int</g><g id="4">, X </g>As<g id="5"> </g><g id="6">Float</g><g id="7">, Y </g>As<g id="8"> </g><g id="9">Float</g><g id="10">)</g></source>
<target xml:lang="zh">Sub <g id="1">Activity_Touch (Action </g>As<g id="2"> </g><g id="3">Int</g><g id="4">, X </g>As<g id="5"> </g><g id="6">Float</g><g id="7">, Y </g>As<g id="8"> </g><g id="9">Float</g><g id="10">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1059" xml:space="preserve">
<source xml:lang="en"><g id="1">Select</g> Action</source>
<target xml:lang="zh"><g id="1">Select</g> Action</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1060" xml:space="preserve">
<source xml:lang="en"><g id="1">Case</g> <g id="2">Activity</g>.ACTION_DOWN</source>
<target xml:lang="zh"><g id="1">Case</g> <g id="2">Activity</g>.ACTION_DOWN</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1062" xml:space="preserve">
<source xml:lang="en"><g id="1">Case</g> <g id="2">Activity</g>.ACTION_MOVE</source>
<target xml:lang="zh"><g id="1">Case</g> <g id="2">Activity</g>.ACTION_MOVE</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1064" xml:space="preserve">
<source xml:lang="en"><g id="1">Case</g> <g id="2">Activity</g>.ACTION_UP</source>
<target xml:lang="zh"><g id="1">Case</g> <g id="2">Activity</g>.ACTION_UP</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1066" xml:space="preserve">
<source xml:lang="en"><g id="1">End</g> <g id="2">Select</g></source>
<target xml:lang="zh"><g id="1">End</g> <g id="2">Select</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1067" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1068" xml:space="preserve">
<source xml:lang="en">Note. <x id="1"/>Differences between:</source>
<target xml:lang="zh">Note. <x id="1"/>Differences between:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1069" xml:space="preserve">
<source xml:lang="en">B4X<x id="1"/>VB</source>
<target xml:lang="zh">B4X<x id="1"/>VB</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1070" xml:space="preserve">
<source xml:lang="en">Select <g id="1">Value</g><x id="2"/>Select Case <g id="3">Value</g></source>
<target xml:lang="zh">Select <g id="1">Value</g><x id="2"/>Select Case <g id="3">Value</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1071" xml:space="preserve">
<source xml:lang="en"><g id="1">Case </g><g id="2">1</g><g id="3">,</g><g id="4">2</g><g id="5">,</g><g id="6">3</g><g id="7">,</g><g id="8">4</g>,<g id="9">8</g>,<g id="10">9</g>,<g id="11">10</g><g id="12"><x id="13"/>Case </g><g id="14">1</g><g id="15"> To </g><g id="16">4 </g>,<g id="17"> <g id="18"><g id="19">8</g><g id="20"> To </g>9</g></g></source>
<target xml:lang="zh"><g id="1">Case </g><g id="2">1</g><g id="3">,</g><g id="4">2</g><g id="5">,</g><g id="6">3</g><g id="7">,</g><g id="8">4</g>,<g id="9">8</g>,<g id="10">9</g>,<g id="11">10</g><g id="12"><x id="13"/>Case </g><g id="14">1</g><g id="15"> To </g><g id="16">4 </g>,<g id="17"> <g id="18"><g id="19">8</g><g id="20"> To </g>9</g></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1072" xml:space="preserve">
<source xml:lang="en">In VB the keyword <g id="1">Case</g> is added after the <g id="2">Select</g> keyword.</source>
<target xml:lang="zh">In VB the keyword <g id="1">Case</g> is added after the <g id="2">Select</g> keyword.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1073" xml:space="preserve">
<source xml:lang="en">VB accepts <g id="1">Case 1 To 4</g> , this is not implemented in B4X.</source>
<target xml:lang="zh">VB accepts <g id="1">Case 1 To 4</g> , this is not implemented in B4X.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1074" xml:space="preserve">
<source xml:lang="en"> <x id="1"/><g id="2">Loop</g> structures</source>
<target xml:lang="zh"> <x id="1"/><g id="2">Loop</g> structures</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1075" xml:space="preserve">
<source xml:lang="en">Different loop structures are available in Basic.</source>
<target xml:lang="zh">Different loop structures are available in Basic.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1076" xml:space="preserve">
<source xml:lang="en">For – Next</source>
<target xml:lang="zh">For – Next</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1077" xml:space="preserve">
<source xml:lang="en">In a <g id="1">For–Next</g> loop a same code will be executed a certain number of times.</source>
<target xml:lang="zh">In a <g id="1">For–Next</g> loop a same code will be executed a certain number of times.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1078" xml:space="preserve">
<source xml:lang="en">Example:</source>
<target xml:lang="zh">Example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1079" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g><g id="2"> i = n1 </g><g id="3">To</g><g id="4"> n2 </g><g id="5">Step</g><g id="6"> n3<x id="7"/></g><g id="8">i</g><x id="9"/>incremental variable</source>
<target xml:lang="zh"><g id="1">For</g><g id="2"> i = n1 </g><g id="3">To</g><g id="4"> n2 </g><g id="5">Step</g><g id="6"> n3<x id="7"/></g><g id="8">i</g><x id="9"/>incremental variable</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1080" xml:space="preserve">
<source xml:lang="en"><g id="1">n1</g><x id="2"/>initial value</source>
<target xml:lang="zh"><g id="1">n1</g><x id="2"/>initial value</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1081" xml:space="preserve">
<source xml:lang="en"><g id="1">' Specific code<x id="2"/></g><g id="3">n2</g><x id="4"/>final value</source>
<target xml:lang="zh"><g id="1">' Specific code<x id="2"/></g><g id="3">n2</g><x id="4"/>final value</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1082" xml:space="preserve">
<source xml:lang="en"><g id="1">n3</g><x id="2"/>step</source>
<target xml:lang="zh"><g id="1">n3</g><x id="2"/>step</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1083" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1084" xml:space="preserve">
<source xml:lang="en">The <g id="1">For–Next</g> loop works as below:</source>
<target xml:lang="zh">The <g id="1">For–Next</g> loop works as below:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1085" xml:space="preserve">
<source xml:lang="en">At the beginning, the incremental variable <g id="1">i</g> is equal to the initial value <g id="2">n1</g>.<x id="3"/>i = n1</source>
<target xml:lang="zh">At the beginning, the incremental variable <g id="1">i</g> is equal to the initial value <g id="2">n1</g>.<x id="3"/>i = n1</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1086" xml:space="preserve">
<source xml:lang="en">The specific code between the <g id="1">For</g> and <g id="2">Next</g>  keywords is executed.</source>
<target xml:lang="zh">The specific code between the <g id="1">For</g> and <g id="2">Next</g>  keywords is executed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1087" xml:space="preserve">
<source xml:lang="en">When reaching <g id="1">Next</g>, the incremental variable <g id="2">i</g> is incremented by the step value <g id="3">n3</g>.<x id="4"/>i = i + n3.</source>
<target xml:lang="zh">When reaching <g id="1">Next</g>, the incremental variable <g id="2">i</g> is incremented by the step value <g id="3">n3</g>.<x id="4"/>i = i + n3.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1088" xml:space="preserve">
<source xml:lang="en">The program jumps back to <g id="1">For</g>, compares if the incremental variable <g id="2">i</g> is lower or equal to the final value <g id="3">n2</g>.<x id="4"/>test if  i &lt;= n2</source>
<target xml:lang="zh">The program jumps back to <g id="1">For</g>, compares if the incremental variable <g id="2">i</g> is lower or equal to the final value <g id="3">n2</g>.<x id="4"/>test if  i &lt;= n2</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1089" xml:space="preserve">
<source xml:lang="en">If <g id="1">Yes</g>, the program continues at step 2, the line following the <g id="2">For</g><g id="3"> </g>keyword.</source>
<target xml:lang="zh">If <g id="1">Yes</g>, the program continues at step 2, the line following the <g id="2">For</g><g id="3"> </g>keyword.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1090" xml:space="preserve">
<source xml:lang="en">If <g id="1">No</g>, the program continues at the line following the <g id="2">Next</g> keyword.</source>
<target xml:lang="zh">If <g id="1">No</g>, the program continues at the line following the <g id="2">Next</g> keyword.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1091" xml:space="preserve">
<source xml:lang="en">If the step value is equal to  '+1'  the step keyword is not needed.</source>
<target xml:lang="zh">If the step value is equal to  '+1'  the step keyword is not needed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1092" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g><g id="2"> i = </g><g id="3">0</g><g id="4"> </g><g id="5">To</g><g id="6"> </g><g id="7">10<x id="8"/></g><g id="9">For</g><g id="10"> i = </g><g id="11">0</g><g id="12"> </g><g id="13">To</g><g id="14"> </g><g id="15">10</g><g id="16"> </g><g id="17">Step</g><g id="18"> </g><g id="19">1</g></source>
<target xml:lang="zh"><g id="1">For</g><g id="2"> i = </g><g id="3">0</g><g id="4"> </g><g id="5">To</g><g id="6"> </g><g id="7">10<x id="8"/></g><g id="9">For</g><g id="10"> i = </g><g id="11">0</g><g id="12"> </g><g id="13">To</g><g id="14"> </g><g id="15">10</g><g id="16"> </g><g id="17">Step</g><g id="18"> </g><g id="19">1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1093" xml:space="preserve">
<source xml:lang="en"><x id="1"/>is the same as</source>
<target xml:lang="zh"><x id="1"/>is the same as</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1094" xml:space="preserve">
<source xml:lang="en"><g id="1">Next<x id="2"/>Next</g></source>
<target xml:lang="zh"><g id="1">Next<x id="2"/>Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1095" xml:space="preserve">
<source xml:lang="en">The step variable can be negative.</source>
<target xml:lang="zh">The step variable can be negative.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1096" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g> i = n3 <g id="2">To</g> <g id="3">0</g> <g id="4">Step</g> -<g id="5">1</g></source>
<target xml:lang="zh"><g id="1">For</g> i = n3 <g id="2">To</g> <g id="3">0</g> <g id="4">Step</g> -<g id="5">1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1098" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1099" xml:space="preserve">
<source xml:lang="en">It is possible to exit a For – Next loop with the <g id="1">Exit</g> keyword.</source>
<target xml:lang="zh">It is possible to exit a For – Next loop with the <g id="1">Exit</g> keyword.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1100" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g><g id="2"> i = </g><g id="3">0</g><g id="4"> </g><g id="5">To</g><g id="6"> </g><g id="7">10<x id="8"/></g>In this example, if the variable a equals 0<x id="9"/></source>
<target xml:lang="zh"><g id="1">For</g><g id="2"> i = </g><g id="3">0</g><g id="4"> </g><g id="5">To</g><g id="6"> </g><g id="7">10<x id="8"/></g>In this example, if the variable a equals 0<x id="9"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1101" xml:space="preserve">
<source xml:lang="en"><g id="1">' code</g></source>
<target xml:lang="zh"><g id="1">' code</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1102" xml:space="preserve">
<source xml:lang="en"><g id="1">If</g><g id="2"> A = </g><g id="3">0</g><g id="4"> </g><g id="5">Then</g><g id="6"> </g><g id="7">Exit<x id="8"/></g>Then exit the loop.</source>
<target xml:lang="zh"><g id="1">If</g><g id="2"> A = </g><g id="3">0</g><g id="4"> </g><g id="5">Then</g><g id="6"> </g><g id="7">Exit<x id="8"/></g>Then exit the loop.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1103" xml:space="preserve">
<source xml:lang="en"><g id="1">' code</g></source>
<target xml:lang="zh"><g id="1">' code</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1104" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1105" xml:space="preserve">
<source xml:lang="en"><g id="1">Note :</g> <x id="2"/>Differences between</source>
<target xml:lang="zh"><g id="1">Note :</g> <x id="2"/>Differences between</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1106" xml:space="preserve">
<source xml:lang="en"><x id="1"/>B4X<x id="2"/>VB</source>
<target xml:lang="zh"><x id="1"/>B4X<x id="2"/>VB</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1107" xml:space="preserve">
<source xml:lang="en"><g id="1">Next<x id="2"/>Next i</g></source>
<target xml:lang="zh"><g id="1">Next<x id="2"/>Next i</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1108" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Exit<x id="2"/>Exit For</source>
<target xml:lang="zh"><x id="1"/>Exit<x id="2"/>Exit For</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1109" xml:space="preserve">
<source xml:lang="en">In VB :</source>
<target xml:lang="zh">In VB :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1110" xml:space="preserve">
<source xml:lang="en">The increment variable is added after the <g id="1">Next</g> Keyword.</source>
<target xml:lang="zh">The increment variable is added after the <g id="1">Next</g> Keyword.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1111" xml:space="preserve">
<source xml:lang="en">The loop type is specified after the <g id="1">Exit</g> keyword.</source>
<target xml:lang="zh">The loop type is specified after the <g id="1">Exit</g> keyword.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1112" xml:space="preserve">
<source xml:lang="en">For - Each<x id="1"/> </source>
<target xml:lang="zh">For - Each<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1113" xml:space="preserve">
<source xml:lang="en">It is a variant of the For - Next loop.</source>
<target xml:lang="zh">It is a variant of the For - Next loop.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1114" xml:space="preserve">
<source xml:lang="en">Example:</source>
<target xml:lang="zh">Example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1115" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g><g id="2"> </g><g id="3">Each</g><g id="4"> n </g><g id="5">As</g><g id="6"> </g><g id="7">Type</g><g id="8"> </g><g id="9">In</g><g id="10"> Array<x id="11"/></g>n<x id="12"/>variable any type or object</source>
<target xml:lang="zh"><g id="1">For</g><g id="2"> </g><g id="3">Each</g><g id="4"> n </g><g id="5">As</g><g id="6"> </g><g id="7">Type</g><g id="8"> </g><g id="9">In</g><g id="10"> Array<x id="11"/></g>n<x id="12"/>variable any type or object</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1116" xml:space="preserve">
<source xml:lang="en">Type<x id="1"/>type of variable n</source>
<target xml:lang="zh">Type<x id="1"/>type of variable n</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1117" xml:space="preserve">
<source xml:lang="en"><g id="1">' Specific code<x id="2"/></g>Array<x id="3"/>Array of values or objects</source>
<target xml:lang="zh"><g id="1">' Specific code<x id="2"/></g>Array<x id="3"/>Array of values or objects</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1119" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1120" xml:space="preserve">
<source xml:lang="en">The <g id="1">For–Each</g> loop works as below:</source>
<target xml:lang="zh">The <g id="1">For–Each</g> loop works as below:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1121" xml:space="preserve">
<source xml:lang="en">At the beginning, <g id="1">n</g> gets the value of the first element in the Array.<x id="2"/>n = Array(0)</source>
<target xml:lang="zh">At the beginning, <g id="1">n</g> gets the value of the first element in the Array.<x id="2"/>n = Array(0)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1122" xml:space="preserve">
<source xml:lang="en">The specific code between the <g id="1">For</g> and <g id="2">Next</g>  keywords is executed.</source>
<target xml:lang="zh">The specific code between the <g id="1">For</g> and <g id="2">Next</g>  keywords is executed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1123" xml:space="preserve">
<source xml:lang="en">When reaching <g id="1">Next</g>, the program checks if <g id="2">n</g> is the last element in the array.</source>
<target xml:lang="zh">When reaching <g id="1">Next</g>, the program checks if <g id="2">n</g> is the last element in the array.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1124" xml:space="preserve">
<source xml:lang="en">If <g id="1">No</g>, the variable <g id="2">n</g> gets the next value in the Array and continues at step 2, the line following the <g id="3">For</g><g id="4"> </g>keyword.<x id="5"/>n = Array(next)</source>
<target xml:lang="zh">If <g id="1">No</g>, the variable <g id="2">n</g> gets the next value in the Array and continues at step 2, the line following the <g id="3">For</g><g id="4"> </g>keyword.<x id="5"/>n = Array(next)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1125" xml:space="preserve">
<source xml:lang="en">If <g id="1">Yes</g>, the program continues at the line following the <g id="2">Next</g> keyword.</source>
<target xml:lang="zh">If <g id="1">Yes</g>, the program continues at the line following the <g id="2">Next</g> keyword.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1126" xml:space="preserve">
<source xml:lang="en">Example For - Each :</source>
<target xml:lang="zh">Example For - Each :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1127" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> Numbers() <g id="2">As</g> <g id="3">Int</g></source>
<target xml:lang="zh"><g id="1">Private</g> Numbers() <g id="2">As</g> <g id="3">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1128" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> Sum <g id="2">As</g> <g id="3">Int</g></source>
<target xml:lang="zh"><g id="1">Private</g> Sum <g id="2">As</g> <g id="3">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1129" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Numbers = <g id="2">Array</g> <g id="3">As</g> <g id="4">Int</g>(<g id="5">1</g>, <g id="6">3</g>, <g id="7">5</g> , <g id="8">2</g>, <g id="9">9</g>)</source>
<target xml:lang="zh"><x id="1"/>Numbers = <g id="2">Array</g> <g id="3">As</g> <g id="4">Int</g>(<g id="5">1</g>, <g id="6">3</g>, <g id="7">5</g> , <g id="8">2</g>, <g id="9">9</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1130" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Sum = <g id="2">0</g></source>
<target xml:lang="zh"><x id="1"/>Sum = <g id="2">0</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1131" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g> <g id="2">Each</g> n <g id="3">As</g> <g id="4">Int</g> <g id="5">In</g> Numbers</source>
<target xml:lang="zh"><g id="1">For</g> <g id="2">Each</g> n <g id="3">As</g> <g id="4">Int</g> <g id="5">In</g> Numbers</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1132" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Sum = Sum + n</source>
<target xml:lang="zh"><x id="1"/>Sum = Sum + n</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1133" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1134" xml:space="preserve">
<source xml:lang="en">Same example but with a For - Next loop :</source>
<target xml:lang="zh">Same example but with a For - Next loop :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1135" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> Numbers() <g id="2">As</g> <g id="3">Int</g></source>
<target xml:lang="zh"><g id="1">Private</g> Numbers() <g id="2">As</g> <g id="3">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1136" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> Sum <g id="2">As</g> <g id="3">Int</g></source>
<target xml:lang="zh"><g id="1">Private</g> Sum <g id="2">As</g> <g id="3">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1137" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> i <g id="2">As</g> <g id="3">Int</g></source>
<target xml:lang="zh"><g id="1">Private</g> i <g id="2">As</g> <g id="3">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1138" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Numbers = <g id="2">Array</g> <g id="3">As</g> <g id="4">Int</g>(<g id="5">1</g>, <g id="6">3</g>, <g id="7">5</g> , <g id="8">2</g>, <g id="9">9</g>)</source>
<target xml:lang="zh"><x id="1"/>Numbers = <g id="2">Array</g> <g id="3">As</g> <g id="4">Int</g>(<g id="5">1</g>, <g id="6">3</g>, <g id="7">5</g> , <g id="8">2</g>, <g id="9">9</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1139" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Sum = <g id="2">0</g></source>
<target xml:lang="zh"><x id="1"/>Sum = <g id="2">0</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1140" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g> i = <g id="2">0</g> <g id="3">To</g> Numbers.Length - <g id="4">1</g></source>
<target xml:lang="zh"><g id="1">For</g> i = <g id="2">0</g> <g id="3">To</g> Numbers.Length - <g id="4">1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1141" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Sum = Sum + Numbers(i)</source>
<target xml:lang="zh"><x id="1"/>Sum = Sum + Numbers(i)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1142" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1143" xml:space="preserve">
<source xml:lang="en">This example shows the power of the For - Each loop :</source>
<target xml:lang="zh">This example shows the power of the For - Each loop :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1144" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g> <g id="2">Each</g> lbl <g id="3">As</g> <g id="4">Label</g> <g id="5">In</g> <g id="6">Activity</g></source>
<target xml:lang="zh"><g id="1">For</g> <g id="2">Each</g> lbl <g id="3">As</g> <g id="4">Label</g> <g id="5">In</g> <g id="6">Activity</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1145" xml:space="preserve">
<source xml:lang="en"><x id="1"/>lbl.TextSize = <g id="2">20</g></source>
<target xml:lang="zh"><x id="1"/>lbl.TextSize = <g id="2">20</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1146" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1147" xml:space="preserve">
<source xml:lang="en">Same example with a For - Next loop :</source>
<target xml:lang="zh">Same example with a For - Next loop :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1148" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g> i = <g id="2">0</g> <g id="3">To</g> <g id="4">Activity</g>.NumberOfViews - <g id="5">1</g></source>
<target xml:lang="zh"><g id="1">For</g> i = <g id="2">0</g> <g id="3">To</g> <g id="4">Activity</g>.NumberOfViews - <g id="5">1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1149" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> v <g id="2">As</g> <g id="3">View</g></source>
<target xml:lang="zh"><g id="1">Private</g> v <g id="2">As</g> <g id="3">View</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1150" xml:space="preserve">
<source xml:lang="en"><x id="1"/>v = <g id="2">Activity</g>.GetView(i)</source>
<target xml:lang="zh"><x id="1"/>v = <g id="2">Activity</g>.GetView(i)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1151" xml:space="preserve">
<source xml:lang="en"><g id="1">If</g> v <g id="2">Is</g> <g id="3">Label</g> <g id="4">Then</g></source>
<target xml:lang="zh"><g id="1">If</g> v <g id="2">Is</g> <g id="3">Label</g> <g id="4">Then</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1152" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> lbl <g id="2">As</g> <g id="3">Label</g></source>
<target xml:lang="zh"><g id="1">Private</g> lbl <g id="2">As</g> <g id="3">Label</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1153" xml:space="preserve">
<source xml:lang="en"><x id="1"/>lbl = v</source>
<target xml:lang="zh"><x id="1"/>lbl = v</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1154" xml:space="preserve">
<source xml:lang="en"><x id="1"/>lbl.TextSize = <g id="2">20</g></source>
<target xml:lang="zh"><x id="1"/>lbl.TextSize = <g id="2">20</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1155" xml:space="preserve">
<source xml:lang="en"><g id="1">End</g> <g id="2">If</g></source>
<target xml:lang="zh"><g id="1">End</g> <g id="2">If</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1156" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1157" xml:space="preserve">
<source xml:lang="en">Do - <g id="1">Loop</g></source>
<target xml:lang="zh">Do - <g id="1">Loop</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1158" xml:space="preserve">
<source xml:lang="en">Several configurations exist:</source>
<target xml:lang="zh">Several configurations exist:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1159" xml:space="preserve">
<source xml:lang="en"><g id="1">Do</g><g id="2"> </g><g id="3">While</g><g id="4"> test<x id="5"/></g><g id="6">test</g><g id="7"> </g> is any expression</source>
<target xml:lang="zh"><g id="1">Do</g><g id="2"> </g><g id="3">While</g><g id="4"> test<x id="5"/></g><g id="6">test</g><g id="7"> </g> is any expression</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1160" xml:space="preserve">
<source xml:lang="en"><g id="1">' code<x id="2"/></g>Executes the  <g id="3">code</g>  while  <g id="4">test</g><g id="5"> </g>is <g id="6">True</g></source>
<target xml:lang="zh"><g id="1">' code<x id="2"/></g>Executes the  <g id="3">code</g>  while  <g id="4">test</g><g id="5"> </g>is <g id="6">True</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1161" xml:space="preserve">
<source xml:lang="en"><g id="1">Loop</g></source>
<target xml:lang="zh"><g id="1">Loop</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1162" xml:space="preserve">
<source xml:lang="en"><g id="1">Do</g><g id="2"> </g><g id="3">Until</g><g id="4"> test<x id="5"/></g><g id="6">test</g><g id="7"> </g> is any expression</source>
<target xml:lang="zh"><g id="1">Do</g><g id="2"> </g><g id="3">Until</g><g id="4"> test<x id="5"/></g><g id="6">test</g><g id="7"> </g> is any expression</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1163" xml:space="preserve">
<source xml:lang="en"><g id="1">' code<x id="2"/></g>Executes the  <g id="3">code</g>  until  <g id="4">test</g><g id="5"> </g>is <g id="6">True</g></source>
<target xml:lang="zh"><g id="1">' code<x id="2"/></g>Executes the  <g id="3">code</g>  until  <g id="4">test</g><g id="5"> </g>is <g id="6">True</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1164" xml:space="preserve">
<source xml:lang="en"><g id="1">Loop</g></source>
<target xml:lang="zh"><g id="1">Loop</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1165" xml:space="preserve">
<source xml:lang="en">The <g id="1">Do While -<g id="2">Loop</g></g> loop works as below :</source>
<target xml:lang="zh">The <g id="1">Do While -<g id="2">Loop</g></g> loop works as below :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1166" xml:space="preserve">
<source xml:lang="en">At the beginning,<g id="1"> </g><g id="2">test</g>  is evaluated.</source>
<target xml:lang="zh">At the beginning,<g id="1"> </g><g id="2">test</g>  is evaluated.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1167" xml:space="preserve">
<source xml:lang="en">If  <g id="1">True</g>, then executes <g id="2">code</g><g id="3"> </g>  </source>
<target xml:lang="zh">If  <g id="1">True</g>, then executes <g id="2">code</g><g id="3"> </g>  </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1168" xml:space="preserve">
<source xml:lang="en">If  <g id="1">False</g> continues at the line following the <g id="2">Loop</g> keyword. </source>
<target xml:lang="zh">If  <g id="1">False</g> continues at the line following the <g id="2">Loop</g> keyword. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1169" xml:space="preserve">
<source xml:lang="en">The <g id="1">Do Until -<g id="2">Loop</g></g> loop works as below :</source>
<target xml:lang="zh">The <g id="1">Do Until -<g id="2">Loop</g></g> loop works as below :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1170" xml:space="preserve">
<source xml:lang="en">At the beginning,<g id="1"> </g><g id="2">test</g>  is evaluated.</source>
<target xml:lang="zh">At the beginning,<g id="1"> </g><g id="2">test</g>  is evaluated.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1171" xml:space="preserve">
<source xml:lang="en">If  <g id="1">False</g>, then executes <g id="2">code</g><g id="3"> </g>  </source>
<target xml:lang="zh">If  <g id="1">False</g>, then executes <g id="2">code</g><g id="3"> </g>  </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1172" xml:space="preserve">
<source xml:lang="en">If  <g id="1">True</g> continues at the line following the <g id="2">Loop</g> keyword. </source>
<target xml:lang="zh">If  <g id="1">True</g> continues at the line following the <g id="2">Loop</g> keyword. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1173" xml:space="preserve">
<source xml:lang="en">It is possible to exit a Do-Loop structure with the Exit keyword.</source>
<target xml:lang="zh">It is possible to exit a Do-Loop structure with the Exit keyword.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1174" xml:space="preserve">
<source xml:lang="en"><g id="1">Do</g> <g id="2">While</g> test</source>
<target xml:lang="zh"><g id="1">Do</g> <g id="2">While</g> test</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1175" xml:space="preserve">
<source xml:lang="en"><g id="1">' code</g></source>
<target xml:lang="zh"><g id="1">' code</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1176" xml:space="preserve">
<source xml:lang="en"><g id="1">If</g><g id="2"> a = </g><g id="3">0</g><g id="4"> </g><g id="5">Then</g><g id="6"> </g><g id="7">Exit<x id="8"/></g>If  <g id="9">a = 0 </g> then exit the loop</source>
<target xml:lang="zh"><g id="1">If</g><g id="2"> a = </g><g id="3">0</g><g id="4"> </g><g id="5">Then</g><g id="6"> </g><g id="7">Exit<x id="8"/></g>If  <g id="9">a = 0 </g> then exit the loop</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1177" xml:space="preserve">
<source xml:lang="en"><g id="1">' code</g></source>
<target xml:lang="zh"><g id="1">' code</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1178" xml:space="preserve">
<source xml:lang="en"><g id="1">Loop</g></source>
<target xml:lang="zh"><g id="1">Loop</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1179" xml:space="preserve">
<source xml:lang="en">Examples :</source>
<target xml:lang="zh">Examples :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1180" xml:space="preserve">
<source xml:lang="en">Do Until Loop :</source>
<target xml:lang="zh">Do Until Loop :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1181" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> i, n <g id="2">As</g> <g id="3">Int</g></source>
<target xml:lang="zh"><g id="1">Private</g> i, n <g id="2">As</g> <g id="3">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1182" xml:space="preserve">
<source xml:lang="en"><x id="1"/>i = <g id="2">0</g></source>
<target xml:lang="zh"><x id="1"/>i = <g id="2">0</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1183" xml:space="preserve">
<source xml:lang="en"><g id="1">Do</g> <g id="2">Until</g> i = <g id="3">10</g></source>
<target xml:lang="zh"><g id="1">Do</g> <g id="2">Until</g> i = <g id="3">10</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1184" xml:space="preserve">
<source xml:lang="en"><g id="1">' code</g></source>
<target xml:lang="zh"><g id="1">' code</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1185" xml:space="preserve">
<source xml:lang="en"><x id="1"/>i = i + <g id="2">1</g></source>
<target xml:lang="zh"><x id="1"/>i = i + <g id="2">1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1186" xml:space="preserve">
<source xml:lang="en"><g id="1">Loop</g></source>
<target xml:lang="zh"><g id="1">Loop</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1187" xml:space="preserve">
<source xml:lang="en">Do While Loop :</source>
<target xml:lang="zh">Do While Loop :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1188" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> i, n <g id="2">As</g> <g id="3">Int</g></source>
<target xml:lang="zh"><g id="1">Private</g> i, n <g id="2">As</g> <g id="3">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1189" xml:space="preserve">
<source xml:lang="en"><x id="1"/>i = <g id="2">0</g></source>
<target xml:lang="zh"><x id="1"/>i = <g id="2">0</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1190" xml:space="preserve">
<source xml:lang="en"><g id="1">Do</g> <g id="2">While</g> i &lt; <g id="3">10</g></source>
<target xml:lang="zh"><g id="1">Do</g> <g id="2">While</g> i &lt; <g id="3">10</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1191" xml:space="preserve">
<source xml:lang="en"><g id="1">' code</g></source>
<target xml:lang="zh"><g id="1">' code</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1192" xml:space="preserve">
<source xml:lang="en"><x id="1"/>i = i + <g id="2">1</g></source>
<target xml:lang="zh"><x id="1"/>i = i + <g id="2">1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1193" xml:space="preserve">
<source xml:lang="en"><g id="1">Loop</g></source>
<target xml:lang="zh"><g id="1">Loop</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1194" xml:space="preserve">
<source xml:lang="en">Read a <g id="1"><g id="2">tex</g></g>t file and fill a List :</source>
<target xml:lang="zh">Read a <g id="1"><g id="2">tex</g></g>t file and fill a List :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1195" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> lstText <g id="2">As</g> <g id="3">List</g></source>
<target xml:lang="zh"><g id="1">Private</g> lstText <g id="2">As</g> <g id="3">List</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1196" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> line <g id="2">As</g> <g id="3">String</g></source>
<target xml:lang="zh"><g id="1">Private</g> line <g id="2">As</g> <g id="3">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1197" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> tr <g id="2">As</g> <g id="3">TextReader</g></source>
<target xml:lang="zh"><g id="1">Private</g> tr <g id="2">As</g> <g id="3">TextReader</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1199" xml:space="preserve">
<source xml:lang="en"><x id="1"/>tr.Initialize(<g id="2">File</g>.OpenInput(<g id="3">File</g>.DirInternal, <g id="4">"test.txt"</g>))</source>
<target xml:lang="zh"><x id="1"/>tr.Initialize(<g id="2">File</g>.OpenInput(<g id="3">File</g>.DirInternal, <g id="4">"test.txt"</g>))</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1200" xml:space="preserve">
<source xml:lang="en"><x id="1"/>lstText.Initialize</source>
<target xml:lang="zh"><x id="1"/>lstText.Initialize</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1201" xml:space="preserve">
<source xml:lang="en"><x id="1"/>line = tr.ReadLine</source>
<target xml:lang="zh"><x id="1"/>line = tr.ReadLine</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1202" xml:space="preserve">
<source xml:lang="en"><g id="1">Do</g> <g id="2">While</g> line &lt;> <g id="3">Null</g></source>
<target xml:lang="zh"><g id="1">Do</g> <g id="2">While</g> line &lt;> <g id="3">Null</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1203" xml:space="preserve">
<source xml:lang="en"><x id="1"/>lstText.Add(line)</source>
<target xml:lang="zh"><x id="1"/>lstText.Add(line)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1204" xml:space="preserve">
<source xml:lang="en"><x id="1"/>line = tr.ReadLine</source>
<target xml:lang="zh"><x id="1"/>line = tr.ReadLine</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1205" xml:space="preserve">
<source xml:lang="en"><g id="1">Loop</g></source>
<target xml:lang="zh"><g id="1">Loop</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1206" xml:space="preserve">
<source xml:lang="en"><x id="1"/>tr.Close</source>
<target xml:lang="zh"><x id="1"/>tr.Close</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1207" xml:space="preserve">
<source xml:lang="en"><g id="1">Note :</g> <x id="2"/>Difference between:</source>
<target xml:lang="zh"><g id="1">Note :</g> <x id="2"/>Difference between:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1208" xml:space="preserve">
<source xml:lang="en"><x id="1"/>B4X<x id="2"/>VB</source>
<target xml:lang="zh"><x id="1"/>B4X<x id="2"/>VB</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1209" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Exit<x id="2"/>Exit <g id="3">Loop</g></source>
<target xml:lang="zh"><x id="1"/>Exit<x id="2"/>Exit <g id="3">Loop</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1210" xml:space="preserve">
<source xml:lang="en">In VB the loop type is specified after the <g id="1">Exit</g> keyword.</source>
<target xml:lang="zh">In VB the loop type is specified after the <g id="1">Exit</g> keyword.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1211" xml:space="preserve">
<source xml:lang="en">VB accepts also the following loops, which are not supported in B4X.</source>
<target xml:lang="zh">VB accepts also the following loops, which are not supported in B4X.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1212" xml:space="preserve">
<source xml:lang="en">Do<x id="1"/>Do</source>
<target xml:lang="zh">Do<x id="1"/>Do</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1213" xml:space="preserve">
<source xml:lang="en">  ' code<x id="1"/>  ' code</source>
<target xml:lang="zh">  ' code<x id="1"/>  ' code</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1214" xml:space="preserve">
<source xml:lang="en">Loop While<g id="1"> test<x id="2"/><g id="3">Loop</g></g> Until<g id="4"> test</g></source>
<target xml:lang="zh">Loop While<g id="1"> test<x id="2"/><g id="3">Loop</g></g> Until<g id="4"> test</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1215" xml:space="preserve">
<source xml:lang="en">Subs</source>
<target xml:lang="zh">Subs</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1216" xml:space="preserve">
<source xml:lang="en">A Subroutine (“Sub”) is a piece of code. It can be any length, and it has a distinctive name and a defined scope (in the means of variables scope discussed earlier). In B4X code, a subroutine is called “Sub”, and is equivalent to procedures, functions, methods and subs in other programming languages. The lines of code inside a Sub are executed from first to last, as described in the program flow chapter.</source>
<target xml:lang="zh">A Subroutine (“Sub”) is a piece of code. It can be any length, and it has a distinctive name and a defined scope (in the means of variables scope discussed earlier). In B4X code, a subroutine is called “Sub”, and is equivalent to procedures, functions, methods and subs in other programming languages. The lines of code inside a Sub are executed from first to last, as described in the program flow chapter.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1217" xml:space="preserve">
<source xml:lang="en">It is not recommended to have Subs with a large amount of code, they get less readable.</source>
<target xml:lang="zh">It is not recommended to have Subs with a large amount of code, they get less readable.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1218" xml:space="preserve">
<source xml:lang="en">Declaring</source>
<target xml:lang="zh">Declaring</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1219" xml:space="preserve">
<source xml:lang="en">A Sub is declared in the following way:</source>
<target xml:lang="zh">A Sub is declared in the following way:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1220" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">CalcInterest</g><g id="2">(Capital </g>As<g id="3"> </g><g id="4">Double</g><g id="5">, Rate </g>As<g id="6"> </g><g id="7">Double</g><g id="8">) </g>As<g id="9"> </g><g id="10">Double</g></source>
<target xml:lang="zh">Sub <g id="1">CalcInterest</g><g id="2">(Capital </g>As<g id="3"> </g><g id="4">Double</g><g id="5">, Rate </g>As<g id="6"> </g><g id="7">Double</g><g id="8">) </g>As<g id="9"> </g><g id="10">Double</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1221" xml:space="preserve">
<source xml:lang="en"><g id="1">Return</g> Capital * Rate / <g id="2">100</g></source>
<target xml:lang="zh"><g id="1">Return</g> Capital * Rate / <g id="2">100</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1222" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1223" xml:space="preserve">
<source xml:lang="en">It starts with the keyword <g id="1">Sub</g>, followed by the Sub’s name, followed by a parameter list, followed by the return type and ends with the keywords <g id="2">End Sub</g>.</source>
<target xml:lang="zh">It starts with the keyword <g id="1">Sub</g>, followed by the Sub’s name, followed by a parameter list, followed by the return type and ends with the keywords <g id="2">End Sub</g>.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1224" xml:space="preserve">
<source xml:lang="en">Subs are always declared at the top level of the module, you cannot nest two Subs one inside the other.</source>
<target xml:lang="zh">Subs are always declared at the top level of the module, you cannot nest two Subs one inside the other.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1225" xml:space="preserve">
<source xml:lang="en">Calling a Sub</source>
<target xml:lang="zh">Calling a Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1226" xml:space="preserve">
<source xml:lang="en">When you want to execute the lines of code in a Sub, you simply write the Sub’s name. </source>
<target xml:lang="zh">When you want to execute the lines of code in a Sub, you simply write the Sub’s name. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1227" xml:space="preserve">
<source xml:lang="en">For example:</source>
<target xml:lang="zh">For example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1228" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Interest<g id="2"> = CalcInterest(</g><g id="3">1234</g><g id="4">, </g><g id="5">5.2</g><g id="6">)</g></source>
<target xml:lang="zh"><x id="1"/>Interest<g id="2"> = CalcInterest(</g><g id="3">1234</g><g id="4">, </g><g id="5">5.2</g><g id="6">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1229" xml:space="preserve">
<source xml:lang="en"><g id="1">Interest</g><x id="2"/>Value returned by the Sub.</source>
<target xml:lang="zh"><g id="1">Interest</g><x id="2"/>Value returned by the Sub.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1230" xml:space="preserve">
<source xml:lang="en"><g id="1">CalcInterest</g><x id="2"/>Sub name.</source>
<target xml:lang="zh"><g id="1">CalcInterest</g><x id="2"/>Sub name.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1231" xml:space="preserve">
<source xml:lang="en"><g id="1">1235</g><x id="2"/>Capital<x id="3"/> value transmitted to the Sub.</source>
<target xml:lang="zh"><g id="1">1235</g><x id="2"/>Capital<x id="3"/> value transmitted to the Sub.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1232" xml:space="preserve">
<source xml:lang="en"><g id="1">5.25</g><x id="2"/>Rate <x id="3"/>value transmitted to the Sub.</source>
<target xml:lang="zh"><g id="1">5.25</g><x id="2"/>Rate <x id="3"/>value transmitted to the Sub.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1233" xml:space="preserve">
<source xml:lang="en">Calling a Sub from another module</source>
<target xml:lang="zh">Calling a Sub from another module</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1234" xml:space="preserve">
<source xml:lang="en">A subroutine declared in a code module can be accessed from any other module but the name of the routine must have the name of the module where it was declared as a prefix.</source>
<target xml:lang="zh">A subroutine declared in a code module can be accessed from any other module but the name of the routine must have the name of the module where it was declared as a prefix.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1235" xml:space="preserve">
<source xml:lang="en">Example: If the <g id="1">CalcInterest </g>routine is declared in module <g id="2">MyModule</g> then calling the routine must be :</source>
<target xml:lang="zh">Example: If the <g id="1">CalcInterest </g>routine is declared in module <g id="2">MyModule</g> then calling the routine must be :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1236" xml:space="preserve">
<source xml:lang="en"><g id="1">Interest</g> = <g id="2">MyModule</g>.CalcInterest(<g id="3">1234</g>, <g id="4">5.2</g>)</source>
<target xml:lang="zh"><g id="1">Interest</g> = <g id="2">MyModule</g>.CalcInterest(<g id="3">1234</g>, <g id="4">5.2</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1237" xml:space="preserve">
<source xml:lang="en">instead of:</source>
<target xml:lang="zh">instead of:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1238" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Interest<g id="2"> = CalcInterest(</g><g id="3">1234</g><g id="4">, </g><g id="5">5.2</g><g id="6">)</g></source>
<target xml:lang="zh"><x id="1"/>Interest<g id="2"> = CalcInterest(</g><g id="3">1234</g><g id="4">, </g><g id="5">5.2</g><g id="6">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1239" xml:space="preserve">
<source xml:lang="en">Naming</source>
<target xml:lang="zh">Naming</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1240" xml:space="preserve">
<source xml:lang="en">Basically, you can name a Sub any name that’s legal for a variable. It is recommended to name the Sub with a significant name, like <g id="1">CalcInterest</g> in the example, so you can tell what it does from reading the code.</source>
<target xml:lang="zh">Basically, you can name a Sub any name that’s legal for a variable. It is recommended to name the Sub with a significant name, like <g id="1">CalcInterest</g> in the example, so you can tell what it does from reading the code.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1241" xml:space="preserve">
<source xml:lang="en">There is no limit on the number of Subs you can add to your program, but it is not allowed to have two Subs with the same name in the same module.</source>
<target xml:lang="zh">There is no limit on the number of Subs you can add to your program, but it is not allowed to have two Subs with the same name in the same module.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1242" xml:space="preserve">
<source xml:lang="en">Parameters</source>
<target xml:lang="zh">Parameters</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1243" xml:space="preserve">
<source xml:lang="en">Parameters can be transmitted to the Sub. The list follows the sub name. The parameter list is put in brackets.</source>
<target xml:lang="zh">Parameters can be transmitted to the Sub. The list follows the sub name. The parameter list is put in brackets.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1244" xml:space="preserve">
<source xml:lang="en">The parameter types should be declared directly in the list. </source>
<target xml:lang="zh">The parameter types should be declared directly in the list. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1245" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">CalcInterest</g><g id="2">(Capital </g>As<g id="3"> </g><g id="4">Double</g><g id="5">, Rate </g>As<g id="6"> </g><g id="7">Double</g><g id="8">) </g>As<g id="9"> </g><g id="10">Double</g></source>
<target xml:lang="zh">Sub <g id="1">CalcInterest</g><g id="2">(Capital </g>As<g id="3"> </g><g id="4">Double</g><g id="5">, Rate </g>As<g id="6"> </g><g id="7">Double</g><g id="8">) </g>As<g id="9"> </g><g id="10">Double</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1246" xml:space="preserve">
<source xml:lang="en"><g id="1">Return</g> Capital * Rate / <g id="2">100</g></source>
<target xml:lang="zh"><g id="1">Return</g> Capital * Rate / <g id="2">100</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1247" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1248" xml:space="preserve">
<source xml:lang="en">In B4X, the parameters are transmitted by value and not by reference.</source>
<target xml:lang="zh">In B4X, the parameters are transmitted by value and not by reference.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1249" xml:space="preserve">
<source xml:lang="en">Returned value</source>
<target xml:lang="zh">Returned value</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1250" xml:space="preserve">
<source xml:lang="en">A sub can return a value, this can be any object.</source>
<target xml:lang="zh">A sub can return a value, this can be any object.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1251" xml:space="preserve">
<source xml:lang="en">Returning a value is done with the <g id="1">Return</g> keyword.</source>
<target xml:lang="zh">Returning a value is done with the <g id="1">Return</g> keyword.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1252" xml:space="preserve">
<source xml:lang="en">The type of the return value is added after the parameter list.</source>
<target xml:lang="zh">The type of the return value is added after the parameter list.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1253" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">CalcInterest</g><g id="2">(Capital </g>As<g id="3"> </g><g id="4">Double</g><g id="5">, Rate </g>As<g id="6"> </g><g id="7">Double</g><g id="8">) </g>As<g id="9"> </g><g id="10">Double</g></source>
<target xml:lang="zh">Sub <g id="1">CalcInterest</g><g id="2">(Capital </g>As<g id="3"> </g><g id="4">Double</g><g id="5">, Rate </g>As<g id="6"> </g><g id="7">Double</g><g id="8">) </g>As<g id="9"> </g><g id="10">Double</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1254" xml:space="preserve">
<source xml:lang="en"><g id="1">Return</g> Capital * Rate / <g id="2">100</g></source>
<target xml:lang="zh"><g id="1">Return</g> Capital * Rate / <g id="2">100</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1255" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1256" xml:space="preserve">
<source xml:lang="en"> </source>
<target xml:lang="zh"> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1257" xml:space="preserve">
<source xml:lang="en">You can return any object.</source>
<target xml:lang="zh">You can return any object.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1258" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">InitList</g> </g>As<g id="3"> </g><g id="4">List</g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">InitList</g> </g>As<g id="3"> </g><g id="4">List</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1259" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> MyList <g id="2">As</g> <g id="3">List</g></source>
<target xml:lang="zh"><g id="1">Private</g> MyList <g id="2">As</g> <g id="3">List</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1260" xml:space="preserve">
<source xml:lang="en"><x id="1"/>MyList.Initialize</source>
<target xml:lang="zh"><x id="1"/>MyList.Initialize</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1262" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g> i = <g id="2">0</g> <g id="3">To</g> <g id="4">10</g></source>
<target xml:lang="zh"><g id="1">For</g> i = <g id="2">0</g> <g id="3">To</g> <g id="4">10</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1263" xml:space="preserve">
<source xml:lang="en"><x id="1"/>MyList.Add(<g id="2">"Test"</g> &amp; i)</source>
<target xml:lang="zh"><x id="1"/>MyList.Add(<g id="2">"Test"</g> &amp; i)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1264" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1265" xml:space="preserve">
<source xml:lang="en"><g id="1">Return</g> MyList</source>
<target xml:lang="zh"><g id="1">Return</g> MyList</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1266" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1267" xml:space="preserve">
<source xml:lang="en">If you want to return an array then you need to add a parenthesis at the end os the object type.</source>
<target xml:lang="zh">If you want to return an array then you need to add a parenthesis at the end os the object type.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1268" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">StringArray</g> </g>As<g id="3"> </g><g id="4">String</g><g id="5"> ()</g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">StringArray</g> </g>As<g id="3"> </g><g id="4">String</g><g id="5"> ()</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1269" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g> strArr(<g id="2">2</g>) <g id="3">As</g> <g id="4">String</g></source>
<target xml:lang="zh"><g id="1">Public</g> strArr(<g id="2">2</g>) <g id="3">As</g> <g id="4">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1270" xml:space="preserve">
<source xml:lang="en"><x id="1"/>strArr(<g id="2">0</g>) = <g id="3">"Hello"</g></source>
<target xml:lang="zh"><x id="1"/>strArr(<g id="2">0</g>) = <g id="3">"Hello"</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1271" xml:space="preserve">
<source xml:lang="en"><x id="1"/>strArr(<g id="2">1</g>) = <g id="3">"world!"</g></source>
<target xml:lang="zh"><x id="1"/>strArr(<g id="2">1</g>) = <g id="3">"world!"</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1272" xml:space="preserve">
<source xml:lang="en"><g id="1">Return</g> strArr</source>
<target xml:lang="zh"><g id="1">Return</g> strArr</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1273" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1274" xml:space="preserve">
<source xml:lang="en">If you want to return a multidimentional array you need to add comma for supplematary diemsion.</source>
<target xml:lang="zh">If you want to return a multidimentional array you need to add comma for supplematary diemsion.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1275" xml:space="preserve">
<source xml:lang="en">One comma for a two dimeansion array.</source>
<target xml:lang="zh">One comma for a two dimeansion array.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1276" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">StringMatrix</g> </g>As<g id="3"> </g><g id="4">String</g><g id="5"> (,)</g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">StringMatrix</g> </g>As<g id="3"> </g><g id="4">String</g><g id="5"> (,)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1277" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g> strMatrix(<g id="2">2</g>,<g id="3">2</g>) <g id="4">As</g> <g id="5">String</g></source>
<target xml:lang="zh"><g id="1">Public</g> strMatrix(<g id="2">2</g>,<g id="3">2</g>) <g id="4">As</g> <g id="5">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1278" xml:space="preserve">
<source xml:lang="en"><x id="1"/>strMatrix(<g id="2">1</g>,<g id="3">1</g>) = <g id="4">"Hello world!"</g></source>
<target xml:lang="zh"><x id="1"/>strMatrix(<g id="2">1</g>,<g id="3">1</g>) = <g id="4">"Hello world!"</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1279" xml:space="preserve">
<source xml:lang="en"><g id="1">Return</g> strMatrix</source>
<target xml:lang="zh"><g id="1">Return</g> strMatrix</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1280" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1281" xml:space="preserve">
<source xml:lang="en">Resumable Subs</source>
<target xml:lang="zh">Resumable Subs</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1282" xml:space="preserve">
<source xml:lang="en">Resumable subs is a new feature added in B4A v7.00 / B4i v4.00 / B4J v5.50. It dramatically simplifies the handling of asynchronous tasks.<x id="1"/>(This feature is a variant of stackless <g id="2">coroutines</g>.)<x id="3"/></source>
<target xml:lang="zh">Resumable subs is a new feature added in B4A v7.00 / B4i v4.00 / B4J v5.50. It dramatically simplifies the handling of asynchronous tasks.<x id="1"/>(This feature is a variant of stackless <g id="2">coroutines</g>.)<x id="3"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1283" xml:space="preserve">
<source xml:lang="en">You find more examples in the <g id="1">forum</g>.</source>
<target xml:lang="zh">You find more examples in the <g id="1">forum</g>.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1284" xml:space="preserve">
<source xml:lang="en"><x id="1"/>The special feature of resumable subs is that they can be paused, without pausing the executing thread, and later be resumed.<x id="2"/>The program doesn't wait for the resumable sub to be continued. Other events will be raised as usual.<x id="3"/>Any sub with one or more calls to Sleep or Wait For is a resumable sub. </source>
<target xml:lang="zh"><x id="1"/>The special feature of resumable subs is that they can be paused, without pausing the executing thread, and later be resumed.<x id="2"/>The program doesn't wait for the resumable sub to be continued. Other events will be raised as usual.<x id="3"/>Any sub with one or more calls to Sleep or Wait For is a resumable sub. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1285" xml:space="preserve">
<source xml:lang="en">The IDE shows this indicator <x id="1"/> next to the sub declaration:</source>
<target xml:lang="zh">The IDE shows this indicator <x id="1"/> next to the sub declaration:</target>
</trans-unit>
<trans-unit id="N8523E414-sub1" xml:space="preserve">
<source xml:lang="en">Image 3</source>
<target xml:lang="zh">Image 3</target>
</trans-unit>
<trans-unit id="N8523E414-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1286" xml:space="preserve">
<source xml:lang="en"><g id="1">Private </g><g id="2">Sub</g><g id="3"> <g id="4">CountDown</g>(Start </g><g id="5">As</g><g id="6"> </g><g id="7">Int</g><g id="8">)<x id="9"/></g></source>
<target xml:lang="zh"><g id="1">Private </g><g id="2">Sub</g><g id="3"> <g id="4">CountDown</g>(Start </g><g id="5">As</g><g id="6"> </g><g id="7">Int</g><g id="8">)<x id="9"/></g></target>
</trans-unit>
<trans-unit id="N8523E415-sub1" xml:space="preserve">
<source xml:lang="en">Image 1</source>
<target xml:lang="zh">Image 1</target>
</trans-unit>
<trans-unit id="N8523E415-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1287" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g> i = Start <g id="2">To</g> <g id="3">0</g> <g id="4">Step</g> -<g id="5">1</g></source>
<target xml:lang="zh"><g id="1">For</g> i = Start <g id="2">To</g> <g id="3">0</g> <g id="4">Step</g> -<g id="5">1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1288" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Label1.Text = i</source>
<target xml:lang="zh"><x id="1"/>Label1.Text = i</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1289" xml:space="preserve">
<source xml:lang="en"><g id="1">Sleep</g>(<g id="2">1000</g>)</source>
<target xml:lang="zh"><g id="1">Sleep</g>(<g id="2">1000</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1290" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1291" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1292" xml:space="preserve">
<source xml:lang="en">Sleep</source>
<target xml:lang="zh">Sleep</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1293" xml:space="preserve">
<source xml:lang="en">Pauses the current sub execution and resumes it after the specified time.</source>
<target xml:lang="zh">Pauses the current sub execution and resumes it after the specified time.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1294" xml:space="preserve">
<source xml:lang="en"><g id="1">Sleep</g> (Milliseconds As Int)<g id="2"> </g>Milliseconds,  time delay in milliseconds.</source>
<target xml:lang="zh"><g id="1">Sleep</g> (Milliseconds As Int)<g id="2"> </g>Milliseconds,  time delay in milliseconds.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1295" xml:space="preserve">
<source xml:lang="en">Example:</source>
<target xml:lang="zh">Example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1296" xml:space="preserve">
<source xml:lang="en">Sleep(1000)</source>
<target xml:lang="zh">Sleep(1000)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1297" xml:space="preserve">
<source xml:lang="en">Using Sleep is simple:</source>
<target xml:lang="zh">Using Sleep is simple:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1298" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g>(<g id="2">1</g>)<x id="3"/>Sleep(<g id="4">1000</g>)<x id="5"/><g id="6">Log</g>(<g id="7">2</g>)</source>
<target xml:lang="zh"><g id="1">Log</g>(<g id="2">1</g>)<x id="3"/>Sleep(<g id="4">1000</g>)<x id="5"/><g id="6">Log</g>(<g id="7">2</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1299" xml:space="preserve">
<source xml:lang="en">The sub will be paused for 1000 milliseconds and then be resumed.<x id="1"/>You can call Sleep(0) for the shortest pause. This can be used to allow the UI to be refreshed. It is a good alternative to DoEvents (which doesn't exist in B4J and B4i and should be avoided in B4A).</source>
<target xml:lang="zh">The sub will be paused for 1000 milliseconds and then be resumed.<x id="1"/>You can call Sleep(0) for the shortest pause. This can be used to allow the UI to be refreshed. It is a good alternative to DoEvents (which doesn't exist in B4J and B4i and should be avoided in B4A).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1300" xml:space="preserve">
<source xml:lang="en"><g id="1">Sub</g> <g id="2">VeryBusySub<x id="3"/></g></source>
<target xml:lang="zh"><g id="1">Sub</g> <g id="2">VeryBusySub<x id="3"/></g></target>
</trans-unit>
<trans-unit id="N8523E6D8-sub1" xml:space="preserve">
<source xml:lang="en">Image 4</source>
<target xml:lang="zh">Image 4</target>
</trans-unit>
<trans-unit id="N8523E6D8-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1301" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g> i = <g id="2">1</g> <g id="3">To</g> <g id="4">10000000</g></source>
<target xml:lang="zh"><g id="1">For</g> i = <g id="2">1</g> <g id="3">To</g> <g id="4">10000000</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1302" xml:space="preserve">
<source xml:lang="en"><g id="1">'do something</g></source>
<target xml:lang="zh"><g id="1">'do something</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1303" xml:space="preserve">
<source xml:lang="en"><g id="1">If</g> i <g id="2">Mod</g> <g id="3">1000</g> = <g id="4">0</g> <g id="5">Then</g> <g id="6">Sleep</g>(<g id="7">0</g>) <g id="8">'allow the UI to refresh every 1000 iterations.</g></source>
<target xml:lang="zh"><g id="1">If</g> i <g id="2">Mod</g> <g id="3">1000</g> = <g id="4">0</g> <g id="5">Then</g> <g id="6">Sleep</g>(<g id="7">0</g>) <g id="8">'allow the UI to refresh every 1000 iterations.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1304" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1305" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g>(<g id="2">"finished!"</g>)</source>
<target xml:lang="zh"><g id="1">Log</g>(<g id="2">"finished!"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1306" xml:space="preserve">
<source xml:lang="en"><g id="1">End</g> <g id="2">Sub</g></source>
<target xml:lang="zh"><g id="1">End</g> <g id="2">Sub</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1307" xml:space="preserve">
<source xml:lang="en">Wait For</source>
<target xml:lang="zh">Wait For</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1308" xml:space="preserve">
<source xml:lang="en">B4X programming languages are event driven. Asynchronous tasks run in the background and raise an event when the task completes.<x id="1"/>With the new Wait For keyword you can handle the event inside the current sub.<x id="2"/>For example, this code will wait for the GoogleMap Ready event (B4J example):</source>
<target xml:lang="zh">B4X programming languages are event driven. Asynchronous tasks run in the background and raise an event when the task completes.<x id="1"/>With the new Wait For keyword you can handle the event inside the current sub.<x id="2"/>For example, this code will wait for the GoogleMap Ready event (B4J example):</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1309" xml:space="preserve">
<source xml:lang="en"><g id="1">Sub</g> <g id="2">AppStart</g> (Form1 <g id="3">As</g> <g id="4">Form</g>, Args() <g id="5">As</g> <g id="6">String</g>)<x id="7"/></source>
<target xml:lang="zh"><g id="1">Sub</g> <g id="2">AppStart</g> (Form1 <g id="3">As</g> <g id="4">Form</g>, Args() <g id="5">As</g> <g id="6">String</g>)<x id="7"/></target>
</trans-unit>
<trans-unit id="N8523E6E1-sub1" xml:space="preserve">
<source xml:lang="en">Image 6</source>
<target xml:lang="zh">Image 6</target>
</trans-unit>
<trans-unit id="N8523E6E1-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1310" xml:space="preserve">
<source xml:lang="en"><x id="1"/>MainForm = Form1</source>
<target xml:lang="zh"><x id="1"/>MainForm = Form1</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1311" xml:space="preserve">
<source xml:lang="en"><x id="1"/>MainForm.RootPane.LoadLayout(<g id="2">"1"</g>) <g id="3">'Load the layout file.</g></source>
<target xml:lang="zh"><x id="1"/>MainForm.RootPane.LoadLayout(<g id="2">"1"</g>) <g id="3">'Load the layout file.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1313" xml:space="preserve">
<source xml:lang="en"><x id="1"/>gmap.Initialize(<g id="2">"gmap"</g>)</source>
<target xml:lang="zh"><x id="1"/>gmap.Initialize(<g id="2">"gmap"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1314" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Pane1.AddNode(gmap.AsPane, <g id="2">0</g>, <g id="3">0</g>, Pane1.Width, Pane1.Height)</source>
<target xml:lang="zh"><x id="1"/>Pane1.AddNode(gmap.AsPane, <g id="2">0</g>, <g id="3">0</g>, Pane1.Width, Pane1.Height)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1315" xml:space="preserve">
<source xml:lang="en"><x id="1"/>MainForm.Show</source>
<target xml:lang="zh"><x id="1"/>MainForm.Show</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1316" xml:space="preserve">
<source xml:lang="en"><g id="1">Wait</g> <g id="2">For</g> gmap_Ready <g id="3">'&lt;----------------</g></source>
<target xml:lang="zh"><g id="1">Wait</g> <g id="2">For</g> gmap_Ready <g id="3">'&lt;----------------</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1317" xml:space="preserve">
<source xml:lang="en"><x id="1"/>gmap.AddMarker(<g id="2">10</g>, <g id="3">10</g>, <g id="4">"Marker"</g>)</source>
<target xml:lang="zh"><x id="1"/>gmap.AddMarker(<g id="2">10</g>, <g id="3">10</g>, <g id="4">"Marker"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1318" xml:space="preserve">
<source xml:lang="en"><g id="1">End</g> <g id="2">Sub</g></source>
<target xml:lang="zh"><g id="1">End</g> <g id="2">Sub</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1319" xml:space="preserve">
<source xml:lang="en">A bit more complicated example with FTP:<x id="1"/>Listing all files in a remote folder and then downloading all the files:</source>
<target xml:lang="zh">A bit more complicated example with FTP:<x id="1"/>Listing all files in a remote folder and then downloading all the files:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1320" xml:space="preserve">
<source xml:lang="en"><g id="1">Sub </g><g id="2">DownloadFolder</g> (ServerFolder <g id="3">As</g> <g id="4">String</g>)<x id="5"/><x id="6"/>  <g id="7">FTP</g>.List(ServerFolder)<x id="8"/>  <g id="9">Wait</g> <g id="10">For</g> FTP_ListCompleted (ServerPath <g id="11">As</g> <g id="12">String</g>, Success <g id="13">As</g> Boolean, Folders() <g id="14">As</g> <x id="15"/><g id="16">    FTPEntry</g>, Files() <g id="17">As</g> <g id="18">FTPEntry</g>) <g id="19">'&lt;----<x id="20"/></g>  <g id="21">If</g> Success <g id="22">Then</g><x id="23"/>    <g id="24">For</g> <g id="25">Each</g> f <g id="26">As</g> <g id="27">FTPEntry</g> <g id="28">In</g> Files<x id="29"/>      <g id="30">FTP</g>.DownloadFile(ServerPath &amp; f.Name, <g id="31">False</g>, <g id="32">File</g>.DirApp, f.Name)<x id="33"/>      <g id="34">Wait</g> <g id="35">For</g> FTP_DownloadCompleted (ServerPath2 <g id="36">As</g> <g id="37">String</g>, Success <g id="38">As</g> Boolean) <g id="39">'&lt;----<x id="40"/></g>      <g id="41">Log</g>(<g id="42">$"File ${</g>ServerPath2<g id="43">} downloaded. Success = ${</g>Success<g id="44">}"$</g>)<x id="45"/>     <g id="46">Next</g><x id="47"/>  <g id="48">End</g> <g id="49">If</g><x id="50"/>  <g id="51">Log</g>(<g id="52">"Finish"</g>)<x id="53"/><g id="54">End Sub</g></source>
<target xml:lang="zh"><g id="1">Sub </g><g id="2">DownloadFolder</g> (ServerFolder <g id="3">As</g> <g id="4">String</g>)<x id="5"/><x id="6"/>  <g id="7">FTP</g>.List(ServerFolder)<x id="8"/>  <g id="9">Wait</g> <g id="10">For</g> FTP_ListCompleted (ServerPath <g id="11">As</g> <g id="12">String</g>, Success <g id="13">As</g> Boolean, Folders() <g id="14">As</g> <x id="15"/><g id="16">    FTPEntry</g>, Files() <g id="17">As</g> <g id="18">FTPEntry</g>) <g id="19">'&lt;----<x id="20"/></g>  <g id="21">If</g> Success <g id="22">Then</g><x id="23"/>    <g id="24">For</g> <g id="25">Each</g> f <g id="26">As</g> <g id="27">FTPEntry</g> <g id="28">In</g> Files<x id="29"/>      <g id="30">FTP</g>.DownloadFile(ServerPath &amp; f.Name, <g id="31">False</g>, <g id="32">File</g>.DirApp, f.Name)<x id="33"/>      <g id="34">Wait</g> <g id="35">For</g> FTP_DownloadCompleted (ServerPath2 <g id="36">As</g> <g id="37">String</g>, Success <g id="38">As</g> Boolean) <g id="39">'&lt;----<x id="40"/></g>      <g id="41">Log</g>(<g id="42">$"File ${</g>ServerPath2<g id="43">} downloaded. Success = ${</g>Success<g id="44">}"$</g>)<x id="45"/>     <g id="46">Next</g><x id="47"/>  <g id="48">End</g> <g id="49">If</g><x id="50"/>  <g id="51">Log</g>(<g id="52">"Finish"</g>)<x id="53"/><g id="54">End Sub</g></target>
</trans-unit>
<trans-unit id="N8523E716-sub1" xml:space="preserve">
<source xml:lang="en">Image 5</source>
<target xml:lang="zh">Image 5</target>
</trans-unit>
<trans-unit id="N8523E716-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1321" xml:space="preserve">
<source xml:lang="en">When the Wait For keyword is called, the sub is paused and the internal events dispatcher takes care to resume it when the event is raised. If the event is never raised then the sub will never be resumed. The program will still be completely responsive.<x id="1"/>If Wait For is later called with the same event then the new sub instance will replace the previous one.</source>
<target xml:lang="zh">When the Wait For keyword is called, the sub is paused and the internal events dispatcher takes care to resume it when the event is raised. If the event is never raised then the sub will never be resumed. The program will still be completely responsive.<x id="1"/>If Wait For is later called with the same event then the new sub instance will replace the previous one.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1322" xml:space="preserve">
<source xml:lang="en">Lets say that we want to create a sub that downloads an image and sets it to an ImageView:</source>
<target xml:lang="zh">Lets say that we want to create a sub that downloads an image and sets it to an ImageView:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1323" xml:space="preserve">
<source xml:lang="en">'Bad example. Don't use.</source>
<target xml:lang="zh">'Bad example. Don't use.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1324" xml:space="preserve">
<source xml:lang="en"><g id="1">Sub</g><g id="2"> <g id="3">DownloadImage</g>(Link </g><g id="4">As</g><g id="5"> </g><g id="6">String</g><g id="7">, iv </g><g id="8">As</g><g id="9"> </g><g id="10">ImageView</g><g id="11">)<x id="12"/></g></source>
<target xml:lang="zh"><g id="1">Sub</g><g id="2"> <g id="3">DownloadImage</g>(Link </g><g id="4">As</g><g id="5"> </g><g id="6">String</g><g id="7">, iv </g><g id="8">As</g><g id="9"> </g><g id="10">ImageView</g><g id="11">)<x id="12"/></g></target>
</trans-unit>
<trans-unit id="N8523E71A-sub1" xml:space="preserve">
<source xml:lang="en">Image 7</source>
<target xml:lang="zh">Image 7</target>
</trans-unit>
<trans-unit id="N8523E71A-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1325" xml:space="preserve">
<source xml:lang="en"><g id="1">Dim</g> job <g id="2">As</g> <g id="3">HttpJob</g></source>
<target xml:lang="zh"><g id="1">Dim</g> job <g id="2">As</g> <g id="3">HttpJob</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1326" xml:space="preserve">
<source xml:lang="en"><g id="1"><x id="2"/>job.Initialize(</g><g id="3">""</g><g id="4">, </g><g id="5">Me</g><g id="6">) </g>'note that the name parameter is no longer needed.</source>
<target xml:lang="zh"><g id="1"><x id="2"/>job.Initialize(</g><g id="3">""</g><g id="4">, </g><g id="5">Me</g><g id="6">) </g>'note that the name parameter is no longer needed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1327" xml:space="preserve">
<source xml:lang="en"><x id="1"/>job.Download(Link)</source>
<target xml:lang="zh"><x id="1"/>job.Download(Link)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1328" xml:space="preserve">
<source xml:lang="en"><g id="1">Wait</g> <g id="2">For</g> JobDone(job <g id="3">As</g> <g id="4">HttpJob</g>)</source>
<target xml:lang="zh"><g id="1">Wait</g> <g id="2">For</g> JobDone(job <g id="3">As</g> <g id="4">HttpJob</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1329" xml:space="preserve">
<source xml:lang="en"><g id="1">If</g> job.Success <g id="2">Then</g></source>
<target xml:lang="zh"><g id="1">If</g> job.Success <g id="2">Then</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1330" xml:space="preserve">
<source xml:lang="en"><g id="1"><x id="2"/>iv.SetImage (job.GetBitmap) </g>'replace with iv.Bitmap = job.GetBitmap in B4A / B4i</source>
<target xml:lang="zh"><g id="1"><x id="2"/>iv.SetImage (job.GetBitmap) </g>'replace with iv.Bitmap = job.GetBitmap in B4A / B4i</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1331" xml:space="preserve">
<source xml:lang="en"><g id="1">End</g> <g id="2">If</g></source>
<target xml:lang="zh"><g id="1">End</g> <g id="2">If</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1332" xml:space="preserve">
<source xml:lang="en"><x id="1"/>job.Release</source>
<target xml:lang="zh"><x id="1"/>job.Release</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1333" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1334" xml:space="preserve">
<source xml:lang="en">It will work properly if we call it once (more correctly, if we don't call it again before the previous call completes).<x id="1"/>If we call it like this:</source>
<target xml:lang="zh">It will work properly if we call it once (more correctly, if we don't call it again before the previous call completes).<x id="1"/>If we call it like this:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1335" xml:space="preserve">
<source xml:lang="en"><g id="1">DownloadImage(</g>"https://www.b4x.com/images3/android.png"<g id="2">, ImageView1)</g></source>
<target xml:lang="zh"><g id="1">DownloadImage(</g>"https://www.b4x.com/images3/android.png"<g id="2">, ImageView1)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1336" xml:space="preserve">
<source xml:lang="en"><g id="1"><x id="2"/>DownloadImage(</g>"https://www.b4x.com/images3/apple.png"<g id="3">, ImageView2)</g></source>
<target xml:lang="zh"><g id="1"><x id="2"/>DownloadImage(</g>"https://www.b4x.com/images3/apple.png"<g id="3">, ImageView2)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1337" xml:space="preserve">
<source xml:lang="en">Then only the second image will show because the second call to Wait For JobDone will overwrite the previous one.<x id="1"/>This brings us to the second variant of Wait For.<x id="2"/>To solve this issue, Wait For can distinguish between events based on the event sender.<x id="3"/>This is done with an optional parameter:<x id="4"/><g id="5">Wait For</g> (&lt;sender>) &lt;event signature><x id="6"/>Example:</source>
<target xml:lang="zh">Then only the second image will show because the second call to Wait For JobDone will overwrite the previous one.<x id="1"/>This brings us to the second variant of Wait For.<x id="2"/>To solve this issue, Wait For can distinguish between events based on the event sender.<x id="3"/>This is done with an optional parameter:<x id="4"/><g id="5">Wait For</g> (&lt;sender>) &lt;event signature><x id="6"/>Example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1338" xml:space="preserve">
<source xml:lang="en">'Good example. Use.</source>
<target xml:lang="zh">'Good example. Use.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1339" xml:space="preserve">
<source xml:lang="en"><g id="1">Sub</g><g id="2"> <g id="3">DownloadImage</g>(Link </g><g id="4">As</g><g id="5"> </g><g id="6">String</g><g id="7">, iv </g><g id="8">As</g><g id="9"> </g><g id="10">ImageView</g><g id="11">)<x id="12"/></g></source>
<target xml:lang="zh"><g id="1">Sub</g><g id="2"> <g id="3">DownloadImage</g>(Link </g><g id="4">As</g><g id="5"> </g><g id="6">String</g><g id="7">, iv </g><g id="8">As</g><g id="9"> </g><g id="10">ImageView</g><g id="11">)<x id="12"/></g></target>
</trans-unit>
<trans-unit id="N8523E73E-sub1" xml:space="preserve">
<source xml:lang="en">Image 8</source>
<target xml:lang="zh">Image 8</target>
</trans-unit>
<trans-unit id="N8523E73E-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1340" xml:space="preserve">
<source xml:lang="en">   <g id="1">Dim</g> job <g id="2">As</g> <g id="3">HttpJob</g></source>
<target xml:lang="zh">   <g id="1">Dim</g> job <g id="2">As</g> <g id="3">HttpJob</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1341" xml:space="preserve">
<source xml:lang="en"><g id="1">   job.Initialize(</g><g id="2">""</g><g id="3">, </g><g id="4">Me</g><g id="5">) </g>'note that the name parameter is no longer needed.</source>
<target xml:lang="zh"><g id="1">   job.Initialize(</g><g id="2">""</g><g id="3">, </g><g id="4">Me</g><g id="5">) </g>'note that the name parameter is no longer needed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1342" xml:space="preserve">
<source xml:lang="en">   job.Download(Link)</source>
<target xml:lang="zh">   job.Download(Link)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1343" xml:space="preserve">
<source xml:lang="en">   <g id="1">Wait</g> <g id="2">For</g> (job) JobDone(job <g id="3">As</g> <g id="4">HttpJob</g>)</source>
<target xml:lang="zh">   <g id="1">Wait</g> <g id="2">For</g> (job) JobDone(job <g id="3">As</g> <g id="4">HttpJob</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1344" xml:space="preserve">
<source xml:lang="en">   <g id="1">If</g> job.Success <g id="2">Then</g></source>
<target xml:lang="zh">   <g id="1">If</g> job.Success <g id="2">Then</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1345" xml:space="preserve">
<source xml:lang="en"><g id="1">     iv.SetImage (job.GetBitmap) </g>'replace with iv.Bitmap = job.GetBitmap in B4A / B4i</source>
<target xml:lang="zh"><g id="1">     iv.SetImage (job.GetBitmap) </g>'replace with iv.Bitmap = job.GetBitmap in B4A / B4i</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1346" xml:space="preserve">
<source xml:lang="en">   <g id="1">End</g> <g id="2">If</g></source>
<target xml:lang="zh">   <g id="1">End</g> <g id="2">If</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1347" xml:space="preserve">
<source xml:lang="en">   job.Release</source>
<target xml:lang="zh">   job.Release</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1348" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1349" xml:space="preserve">
<source xml:lang="en">With the above code, each resumable sub instance will wait for a different event and will not be affected by other calls.</source>
<target xml:lang="zh">With the above code, each resumable sub instance will wait for a different event and will not be affected by other calls.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1350" xml:space="preserve">
<source xml:lang="en">Code Flow</source>
<target xml:lang="zh">Code Flow</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1351" xml:space="preserve">
<source xml:lang="en"><g id="1">Sub</g> <g id="2">S1</g></source>
<target xml:lang="zh"><g id="1">Sub</g> <g id="2">S1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1352" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g>(<g id="2">"S1: A"</g>)</source>
<target xml:lang="zh"><g id="1">Log</g>(<g id="2">"S1: A"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1353" xml:space="preserve">
<source xml:lang="en"><x id="1"/>S2</source>
<target xml:lang="zh"><x id="1"/>S2</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1354" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g>(<g id="2">"S1: B"</g>)</source>
<target xml:lang="zh"><g id="1">Log</g>(<g id="2">"S1: B"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1355" xml:space="preserve">
<source xml:lang="en"><g id="1">End</g> <g id="2">Sub</g></source>
<target xml:lang="zh"><g id="1">End</g> <g id="2">Sub</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1356" xml:space="preserve">
<source xml:lang="en"><g id="1">Sub</g> <g id="2">S2<x id="3"/></g></source>
<target xml:lang="zh"><g id="1">Sub</g> <g id="2">S2<x id="3"/></g></target>
</trans-unit>
<trans-unit id="N8523E779-sub1" xml:space="preserve">
<source xml:lang="en">Image 9</source>
<target xml:lang="zh">Image 9</target>
</trans-unit>
<trans-unit id="N8523E779-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1357" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g>(<g id="2">"S2: A"</g>)</source>
<target xml:lang="zh"><g id="1">Log</g>(<g id="2">"S2: A"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1358" xml:space="preserve">
<source xml:lang="en"><g id="1">Sleep</g>(<g id="2">0</g>)</source>
<target xml:lang="zh"><g id="1">Sleep</g>(<g id="2">0</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1359" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g>(<g id="2">"S2: B"</g>)</source>
<target xml:lang="zh"><g id="1">Log</g>(<g id="2">"S2: B"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1360" xml:space="preserve">
<source xml:lang="en"><g id="1">End</g> <g id="2">Sub</g></source>
<target xml:lang="zh"><g id="1">End</g> <g id="2">Sub</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1361" xml:space="preserve">
<source xml:lang="en">The output is:<x id="1"/>S1: A<x id="2"/>S2: A<x id="3"/>S1: B<x id="4"/>S2: B</source>
<target xml:lang="zh">The output is:<x id="1"/>S1: A<x id="2"/>S2: A<x id="3"/>S1: B<x id="4"/>S2: B</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1362" xml:space="preserve">
<source xml:lang="en">Whenever Sleep or Wait For are called, the current sub is paused. This is equivalent to calling Return.</source>
<target xml:lang="zh">Whenever Sleep or Wait For are called, the current sub is paused. This is equivalent to calling Return.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1363" xml:space="preserve">
<source xml:lang="en">Waiting for a resumable sub to complete</source>
<target xml:lang="zh">Waiting for a resumable sub to complete</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1364" xml:space="preserve">
<source xml:lang="en">When one sub calls a second resumable sub, the code in the first sub will continue after the first Sleep or Wait For call (in the second sub).<x id="1"/>If you want to wait for the second sub to complete then you can raise an event from the second sub and wait for it in the first:</source>
<target xml:lang="zh">When one sub calls a second resumable sub, the code in the first sub will continue after the first Sleep or Wait For call (in the second sub).<x id="1"/>If you want to wait for the second sub to complete then you can raise an event from the second sub and wait for it in the first:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1365" xml:space="preserve">
<source xml:lang="en"><g id="1">Sub</g><g id="2"> <g id="3">FirstSub</g></g> <x id="4"/></source>
<target xml:lang="zh"><g id="1">Sub</g><g id="2"> <g id="3">FirstSub</g></g> <x id="4"/></target>
</trans-unit>
<trans-unit id="N8523E797-sub1" xml:space="preserve">
<source xml:lang="en">Image 1858</source>
<target xml:lang="zh">Image 1858</target>
</trans-unit>
<trans-unit id="N8523E797-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1366" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g>(<g id="2">"FirstSub started"</g>)</source>
<target xml:lang="zh"><g id="1">Log</g>(<g id="2">"FirstSub started"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1367" xml:space="preserve">
<source xml:lang="en"><x id="1"/>SecondSub</source>
<target xml:lang="zh"><x id="1"/>SecondSub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1368" xml:space="preserve">
<source xml:lang="en"><g id="1">Wait</g> <g id="2">For</g> SecondSub_Complete</source>
<target xml:lang="zh"><g id="1">Wait</g> <g id="2">For</g> SecondSub_Complete</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1369" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g>(<g id="2">"FirstSub completed"</g>)</source>
<target xml:lang="zh"><g id="1">Log</g>(<g id="2">"FirstSub completed"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1370" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1371" xml:space="preserve">
<source xml:lang="en"><g id="1">Sub</g><g id="2"> <g id="3">SecondSub</g></g> <x id="4"/></source>
<target xml:lang="zh"><g id="1">Sub</g><g id="2"> <g id="3">SecondSub</g></g> <x id="4"/></target>
</trans-unit>
<trans-unit id="N8523E7B2-sub1" xml:space="preserve">
<source xml:lang="en">Image 1859</source>
<target xml:lang="zh">Image 1859</target>
</trans-unit>
<trans-unit id="N8523E7B2-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1372" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g>(<g id="2">"SecondSub started"</g>)</source>
<target xml:lang="zh"><g id="1">Log</g>(<g id="2">"SecondSub started"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1373" xml:space="preserve">
<source xml:lang="en"><g id="1">Sleep</g>(<g id="2">1000</g>)</source>
<target xml:lang="zh"><g id="1">Sleep</g>(<g id="2">1000</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1374" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g>(<g id="2">"SecondSub completed"</g>)</source>
<target xml:lang="zh"><g id="1">Log</g>(<g id="2">"SecondSub completed"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1375" xml:space="preserve">
<source xml:lang="en"><g id="1">CallSubDelayed</g>(<g id="2">Me</g>, <g id="3">"SecondSub_Complete"</g>)</source>
<target xml:lang="zh"><g id="1">CallSubDelayed</g>(<g id="2">Me</g>, <g id="3">"SecondSub_Complete"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1376" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1377" xml:space="preserve">
<source xml:lang="en">Logs:<x id="1"/>FirstSub started<x id="2"/>SecondSub started<x id="3"/>SecondSub completed<x id="4"/>FirstSub completed<x id="5"/>Notes:<x id="6"/>- It is safer to use CallSubDelayed than CallSub. CallSub will fail if the second sub is never paused (for example if the sleep is only called based on some condition).<x id="7"/>- There is an assumption here that FirstSub will not be called again until it is completed.</source>
<target xml:lang="zh">Logs:<x id="1"/>FirstSub started<x id="2"/>SecondSub started<x id="3"/>SecondSub completed<x id="4"/>FirstSub completed<x id="5"/>Notes:<x id="6"/>- It is safer to use CallSubDelayed than CallSub. CallSub will fail if the second sub is never paused (for example if the sleep is only called based on some condition).<x id="7"/>- There is an assumption here that FirstSub will not be called again until it is completed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1378" xml:space="preserve">
<source xml:lang="en">Resumable Sub return value</source>
<target xml:lang="zh">Resumable Sub return value</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1379" xml:space="preserve">
<source xml:lang="en">Resumable subs can return a <g id="1">ResumableSub</g> value.</source>
<target xml:lang="zh">Resumable subs can return a <g id="1">ResumableSub</g> value.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1380" xml:space="preserve">
<source xml:lang="en">Example:</source>
<target xml:lang="zh">Example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1381" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Button1_Click</g></source>
<target xml:lang="zh">Sub <g id="1">Button1_Click</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1382" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Sum(<g id="2">1</g>, <g id="3">2</g>)</source>
<target xml:lang="zh"><x id="1"/>Sum(<g id="2">1</g>, <g id="3">2</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1383" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Log<g id="2">(</g><g id="3">"after sum"</g><g id="4">)<x id="5"/></g>End Sub</source>
<target xml:lang="zh"><x id="1"/>Log<g id="2">(</g><g id="3">"after sum"</g><g id="4">)<x id="5"/></g>End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1384" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Sum(a </g>As<g id="2"> Int, b </g>As<g id="3"> Int)</g></source>
<target xml:lang="zh">Sub <g id="1">Sum(a </g>As<g id="2"> Int, b </g>As<g id="3"> Int)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1385" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Sleep(<g id="2">100</g>) <g id="3">'this will cause the code flow to return to the parent</g></source>
<target xml:lang="zh"><x id="1"/>Sleep(<g id="2">100</g>) <g id="3">'this will cause the code flow to return to the parent</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1386" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Log<g id="2">(a + b)<x id="3"/></g>End Sub</source>
<target xml:lang="zh"><x id="1"/>Log<g id="2">(a + b)<x id="3"/></g>End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1387" xml:space="preserve">
<source xml:lang="en">Output:</source>
<target xml:lang="zh">Output:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1388" xml:space="preserve">
<source xml:lang="en">after sum</source>
<target xml:lang="zh">after sum</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1389" xml:space="preserve">
<source xml:lang="en">3</source>
<target xml:lang="zh">3</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1390" xml:space="preserve">
<source xml:lang="en">This is the reason why it is not possible to simply return a value.</source>
<target xml:lang="zh">This is the reason why it is not possible to simply return a value.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1391" xml:space="preserve">
<source xml:lang="en">Solution.</source>
<target xml:lang="zh">Solution.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1392" xml:space="preserve">
<source xml:lang="en">Resumable subs can return a new type named ResumableSub. Other subs can use this value to wait for the sub to complete and get the desired return value.</source>
<target xml:lang="zh">Resumable subs can return a new type named ResumableSub. Other subs can use this value to wait for the sub to complete and get the desired return value.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1393" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Button1_Click<x id="2"/>   </g>Wait<g id="3"> </g>For<g id="4">(Sum(</g><g id="5">1</g><g id="6">, </g><g id="7">2</g><g id="8">)) Complete (Result </g>As<g id="9"> Int)<x id="10"/>   </g>Log<g id="11">(</g><g id="12">"result: "</g><g id="13"> &amp; Result)<x id="14"/>   </g>Log<g id="15">(</g><g id="16">"after sum"</g><g id="17">)<x id="18"/></g>End Sub<x id="19"/>Sub <g id="20">Sum(a </g>As<g id="21"> Int, b </g>As<g id="22"> Int) </g>As<g id="23"> ResumableSub<x id="24"/>   Sleep(</g><g id="25">100</g><g id="26">)<x id="27"/>   </g>Log<g id="28">(a + b)<x id="29"/>   </g>Return<g id="30"> a + b<x id="31"/></g>End Sub</source>
<target xml:lang="zh">Sub <g id="1">Button1_Click<x id="2"/>   </g>Wait<g id="3"> </g>For<g id="4">(Sum(</g><g id="5">1</g><g id="6">, </g><g id="7">2</g><g id="8">)) Complete (Result </g>As<g id="9"> Int)<x id="10"/>   </g>Log<g id="11">(</g><g id="12">"result: "</g><g id="13"> &amp; Result)<x id="14"/>   </g>Log<g id="15">(</g><g id="16">"after sum"</g><g id="17">)<x id="18"/></g>End Sub<x id="19"/>Sub <g id="20">Sum(a </g>As<g id="21"> Int, b </g>As<g id="22"> Int) </g>As<g id="23"> ResumableSub<x id="24"/>   Sleep(</g><g id="25">100</g><g id="26">)<x id="27"/>   </g>Log<g id="28">(a + b)<x id="29"/>   </g>Return<g id="30"> a + b<x id="31"/></g>End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1394" xml:space="preserve">
<source xml:lang="en">Output:</source>
<target xml:lang="zh">Output:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1395" xml:space="preserve">
<source xml:lang="en">3<x id="1"/>result: 3<x id="2"/>after sum</source>
<target xml:lang="zh">3<x id="1"/>result: 3<x id="2"/>after sum</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1396" xml:space="preserve">
<source xml:lang="en">The above Button1_Click code is equivalent to:</source>
<target xml:lang="zh">The above Button1_Click code is equivalent to:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1397" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Button1_Click<x id="2"/>   </g>Dim<g id="3"> rs </g>As<g id="4"> ResumableSub = Sum(</g><g id="5">1</g><g id="6">, </g><g id="7">2</g><g id="8">)<x id="9"/>   </g>Wait<g id="10"> </g>For<g id="11">(rs) Complete (Result </g>As<g id="12"> Int)<x id="13"/>   </g>Log<g id="14">(</g><g id="15">"result: "</g><g id="16"> &amp; Result)<x id="17"/>   </g>Log<g id="18">(</g><g id="19">"after sum"</g><g id="20">)<x id="21"/></g>End Sub</source>
<target xml:lang="zh">Sub <g id="1">Button1_Click<x id="2"/>   </g>Dim<g id="3"> rs </g>As<g id="4"> ResumableSub = Sum(</g><g id="5">1</g><g id="6">, </g><g id="7">2</g><g id="8">)<x id="9"/>   </g>Wait<g id="10"> </g>For<g id="11">(rs) Complete (Result </g>As<g id="12"> Int)<x id="13"/>   </g>Log<g id="14">(</g><g id="15">"result: "</g><g id="16"> &amp; Result)<x id="17"/>   </g>Log<g id="18">(</g><g id="19">"after sum"</g><g id="20">)<x id="21"/></g>End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1398" xml:space="preserve">
<source xml:lang="en">The steps required are:<x id="1"/>1. Add <g id="2">As ResumableSub</g> to the resumable sub signature.<x id="3"/>2. Call Return with the value you like to return.<x id="4"/>3. In the calling sub, call the resumable sub with Wait For (&lt;sub here>) Complete (Result As &lt;matching type>)</source>
<target xml:lang="zh">The steps required are:<x id="1"/>1. Add <g id="2">As ResumableSub</g> to the resumable sub signature.<x id="3"/>2. Call Return with the value you like to return.<x id="4"/>3. In the calling sub, call the resumable sub with Wait For (&lt;sub here>) Complete (Result As &lt;matching type>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1399" xml:space="preserve">
<source xml:lang="en">Notes &amp; Tips:</source>
<target xml:lang="zh">Notes &amp; Tips:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1400" xml:space="preserve">
<source xml:lang="en">If you don't need to return a value but still want to wait for the resumable sub to complete then return Null from the resumable sub and set the type in the calling sub to Object.</source>
<target xml:lang="zh">If you don't need to return a value but still want to wait for the resumable sub to complete then return Null from the resumable sub and set the type in the calling sub to Object.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1401" xml:space="preserve">
<source xml:lang="en">Multiple subs can safely call the resumable sub. The complete event will reach the correct parent.</source>
<target xml:lang="zh">Multiple subs can safely call the resumable sub. The complete event will reach the correct parent.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1402" xml:space="preserve">
<source xml:lang="en">You can wait for resumable subs in other modules (in B4A it is relevant for classes only).</source>
<target xml:lang="zh">You can wait for resumable subs in other modules (in B4A it is relevant for classes only).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1403" xml:space="preserve">
<source xml:lang="en">The Result parameter name can be changed.</source>
<target xml:lang="zh">The Result parameter name can be changed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1404" xml:space="preserve">
<source xml:lang="en">DoEvents  deprecated !</source>
<target xml:lang="zh">DoEvents  deprecated !</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1405" xml:space="preserve">
<source xml:lang="en">Starting from B4A v7.0 the following warning will appear for DoEvents calls:<x id="1"/><g id="2">DoEvents is deprecated. It can lead to stability issues. Use Sleep(0) instead (if really needed).</g><x id="3"/>The purpose of DoEvents was to allow the UI to be updated while the main thread is busy. DoEvents which shares the same implementation as the modal dialogs implementation, is a low level implementation. It accesses the process message queue and runs some of the waiting messages.<x id="4"/>As Android evolved, the handling of the message queue became more sophisticated and fragile.<x id="5"/>The reasons for deprecating DoEvents are:<x id="6"/>1. It is a major source for instability issues. It can lead to hard to debug crashes or ANR (application not responding) dialogs. Note that this is also true for the modal dialogs (such as Msgbox and InputList).<x id="7"/>2. There are better ways to keep the main thread free. For example use the <g id="8">asynchronous SQL methods</g> instead of the synchronous methods.<x id="9"/>3. It doesn't do what many developers expect it to do. As it only handles UI related messages, most events could not be raised from a DoEvents call.<x id="10"/>4. It is now possible to call Sleep to pause the current sub and resume it after the waiting messages are processed. <g id="11">Sleep implementation</g> is completely different than DoEvents. It doesn't hold the thread. It instead releases it while preserving the sub state.<x id="12"/>Unlike DoEvents which only processed UI related messages, with Sleep all messages will be processed and other events will be raised.<x id="13"/>(Note that using Wait For to wait for an event is better than calling Sleep in a loop.)<x id="14"/>With that said, DoEvents is still there and existing applications will work exactly as before.</source>
<target xml:lang="zh">Starting from B4A v7.0 the following warning will appear for DoEvents calls:<x id="1"/><g id="2">DoEvents is deprecated. It can lead to stability issues. Use Sleep(0) instead (if really needed).</g><x id="3"/>The purpose of DoEvents was to allow the UI to be updated while the main thread is busy. DoEvents which shares the same implementation as the modal dialogs implementation, is a low level implementation. It accesses the process message queue and runs some of the waiting messages.<x id="4"/>As Android evolved, the handling of the message queue became more sophisticated and fragile.<x id="5"/>The reasons for deprecating DoEvents are:<x id="6"/>1. It is a major source for instability issues. It can lead to hard to debug crashes or ANR (application not responding) dialogs. Note that this is also true for the modal dialogs (such as Msgbox and InputList).<x id="7"/>2. There are better ways to keep the main thread free. For example use the <g id="8">asynchronous SQL methods</g> instead of the synchronous methods.<x id="9"/>3. It doesn't do what many developers expect it to do. As it only handles UI related messages, most events could not be raised from a DoEvents call.<x id="10"/>4. It is now possible to call Sleep to pause the current sub and resume it after the waiting messages are processed. <g id="11">Sleep implementation</g> is completely different than DoEvents. It doesn't hold the thread. It instead releases it while preserving the sub state.<x id="12"/>Unlike DoEvents which only processed UI related messages, with Sleep all messages will be processed and other events will be raised.<x id="13"/>(Note that using Wait For to wait for an event is better than calling Sleep in a loop.)<x id="14"/>With that said, DoEvents is still there and existing applications will work exactly as before.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1406" xml:space="preserve">
<source xml:lang="en">Dialogs</source>
<target xml:lang="zh">Dialogs</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1407" xml:space="preserve">
<source xml:lang="en">Modal dialogs = dialogs that hold the main thread until the dialog is dismissed.<x id="1"/>As written above, modal dialogs share the same implementation as DoEvents. It is therefore recommended to switch to the new async dialogs instead. </source>
<target xml:lang="zh">Modal dialogs = dialogs that hold the main thread until the dialog is dismissed.<x id="1"/>As written above, modal dialogs share the same implementation as DoEvents. It is therefore recommended to switch to the new async dialogs instead. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1408" xml:space="preserve">
<source xml:lang="en">Using <g id="1">Wait For</g><g id="2">,</g> is really a simple change:</source>
<target xml:lang="zh">Using <g id="1">Wait For</g><g id="2">,</g> is really a simple change:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1409" xml:space="preserve">
<source xml:lang="en">Instead of:</source>
<target xml:lang="zh">Instead of:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1410" xml:space="preserve">
<source xml:lang="en">Dim<g id="1"> res </g>As<g id="2"> </g><g id="3">Int</g><g id="4"> = </g>Msgbox2<g id="5">(</g><g id="6">"Delete?"</g><g id="7">, </g><g id="8">"Title"</g><g id="9">, </g><g id="10">"Yes"</g><g id="11">, </g><g id="12">"Cancel"</g><g id="13">, </g><g id="14">"No"</g><g id="15">, </g>Null<g id="16">)</g></source>
<target xml:lang="zh">Dim<g id="1"> res </g>As<g id="2"> </g><g id="3">Int</g><g id="4"> = </g>Msgbox2<g id="5">(</g><g id="6">"Delete?"</g><g id="7">, </g><g id="8">"Title"</g><g id="9">, </g><g id="10">"Yes"</g><g id="11">, </g><g id="12">"Cancel"</g><g id="13">, </g><g id="14">"No"</g><g id="15">, </g>Null<g id="16">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1411" xml:space="preserve">
<source xml:lang="en">If<g id="1"> res = </g>DialogResponse<g id="2">.POSITIVE </g>Then</source>
<target xml:lang="zh">If<g id="1"> res = </g>DialogResponse<g id="2">.POSITIVE </g>Then</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1412" xml:space="preserve">
<source xml:lang="en"><g id="1">'...</g></source>
<target xml:lang="zh"><g id="1">'...</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1413" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>If</source>
<target xml:lang="zh">End<g id="1"> </g>If</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1414" xml:space="preserve">
<source xml:lang="en">You should use :</source>
<target xml:lang="zh">You should use :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1415" xml:space="preserve">
<source xml:lang="en">Msgbox2Async<g id="1">(</g><g id="2">"Delete?"</g><g id="3">, </g><g id="4">"Title"</g><g id="5">, </g><g id="6">"Yes"</g><g id="7">, </g><g id="8">"Cancel"</g><g id="9">, </g><g id="10">"No"</g><g id="11">, </g>Null<g id="12">, </g>False<g id="13">)</g></source>
<target xml:lang="zh">Msgbox2Async<g id="1">(</g><g id="2">"Delete?"</g><g id="3">, </g><g id="4">"Title"</g><g id="5">, </g><g id="6">"Yes"</g><g id="7">, </g><g id="8">"Cancel"</g><g id="9">, </g><g id="10">"No"</g><g id="11">, </g>Null<g id="12">, </g>False<g id="13">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1416" xml:space="preserve">
<source xml:lang="en">Wait<g id="1"> </g>For<g id="2"> Msgbox_Result (Result </g>As<g id="3"> </g><g id="4">Int</g><g id="5">)</g></source>
<target xml:lang="zh">Wait<g id="1"> </g>For<g id="2"> Msgbox_Result (Result </g>As<g id="3"> </g><g id="4">Int</g><g id="5">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1417" xml:space="preserve">
<source xml:lang="en">If<g id="1"> Result = </g>DialogResponse<g id="2">.POSITIVE </g>Then</source>
<target xml:lang="zh">If<g id="1"> Result = </g>DialogResponse<g id="2">.POSITIVE </g>Then</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1418" xml:space="preserve">
<source xml:lang="en"><g id="1">'...</g></source>
<target xml:lang="zh"><g id="1">'...</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1419" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>If</source>
<target xml:lang="zh">End<g id="1"> </g>If</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1420" xml:space="preserve">
<source xml:lang="en"><g id="1">Wait For</g> doesn't hold the main thread. It instead saves the current sub state and releases it. The code will resume when the user clicks on one of the dialog buttons.<x id="2"/>The other similar new methods are: MsgboxAsync, InputListAsync and InputMapAsync.<x id="3"/>With the exception of MsgboxAsync, the new methods also add a new <g id="4">cancelable</g> parameter. If it is true then the dialog can be dismissed by clicking on the back key or outside the dialog. This is the default behavior of the older methods.<x id="5"/>As other code can run while the async dialog is visible, it is possible that multiple dialogs will appear at the same time.<x id="6"/>If this case is relevant for your app then you should set the sender filter parameter in the Wait For call:</source>
<target xml:lang="zh"><g id="1">Wait For</g> doesn't hold the main thread. It instead saves the current sub state and releases it. The code will resume when the user clicks on one of the dialog buttons.<x id="2"/>The other similar new methods are: MsgboxAsync, InputListAsync and InputMapAsync.<x id="3"/>With the exception of MsgboxAsync, the new methods also add a new <g id="4">cancelable</g> parameter. If it is true then the dialog can be dismissed by clicking on the back key or outside the dialog. This is the default behavior of the older methods.<x id="5"/>As other code can run while the async dialog is visible, it is possible that multiple dialogs will appear at the same time.<x id="6"/>If this case is relevant for your app then you should set the sender filter parameter in the Wait For call:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1421" xml:space="preserve">
<source xml:lang="en">Dim<g id="1"> sf </g>As<g id="2"> </g><g id="3">Object</g><g id="4"> = </g>Msgbox2Async<g id="5">(</g><g id="6">"Delete?"</g><g id="7">, </g><g id="8">"Title"</g><g id="9">, </g><g id="10">"Yes"</g><g id="11">, </g><g id="12">"Cancel"</g><g id="13">, </g><g id="14">"No"</g><g id="15">, </g>Null<g id="16">, </g>False<g id="17">)</g></source>
<target xml:lang="zh">Dim<g id="1"> sf </g>As<g id="2"> </g><g id="3">Object</g><g id="4"> = </g>Msgbox2Async<g id="5">(</g><g id="6">"Delete?"</g><g id="7">, </g><g id="8">"Title"</g><g id="9">, </g><g id="10">"Yes"</g><g id="11">, </g><g id="12">"Cancel"</g><g id="13">, </g><g id="14">"No"</g><g id="15">, </g>Null<g id="16">, </g>False<g id="17">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1422" xml:space="preserve">
<source xml:lang="en">Wait<g id="1"> </g>For<g id="2"> (sf) Msgbox_Result (Result </g>As<g id="3"> </g><g id="4">Int</g><g id="5">)</g></source>
<target xml:lang="zh">Wait<g id="1"> </g>For<g id="2"> (sf) Msgbox_Result (Result </g>As<g id="3"> </g><g id="4">Int</g><g id="5">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1423" xml:space="preserve">
<source xml:lang="en">If<g id="1"> Result = </g>DialogResponse<g id="2">.POSITIVE </g>Then</source>
<target xml:lang="zh">If<g id="1"> Result = </g>DialogResponse<g id="2">.POSITIVE </g>Then</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1424" xml:space="preserve">
<source xml:lang="en"><g id="1">'...</g></source>
<target xml:lang="zh"><g id="1">'...</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1425" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>If</source>
<target xml:lang="zh">End<g id="1"> </g>If</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1426" xml:space="preserve">
<source xml:lang="en">This allows multiple messages to be displayed and the result events will be handled correctly.</source>
<target xml:lang="zh">This allows multiple messages to be displayed and the result events will be handled correctly.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1427" xml:space="preserve">
<source xml:lang="en">SQL with Wait For</source>
<target xml:lang="zh">SQL with Wait For</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1428" xml:space="preserve">
<source xml:lang="en">The new resumable subs feature, makes it simpler to work with large data sets with minimum effect on the program responsiveness.<x id="1"/>The new standard way to insert data is:</source>
<target xml:lang="zh">The new resumable subs feature, makes it simpler to work with large data sets with minimum effect on the program responsiveness.<x id="1"/>The new standard way to insert data is:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1429" xml:space="preserve">
<source xml:lang="en">For<g id="1"> i = </g><g id="2">1</g><g id="3"> </g>To<g id="4"> </g><g id="5">1000</g></source>
<target xml:lang="zh">For<g id="1"> i = </g><g id="2">1</g><g id="3"> </g>To<g id="4"> </g><g id="5">1000</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1430" xml:space="preserve">
<source xml:lang="en"><x id="1"/>SQL1.AddNonQueryToBatch(<g id="2">"INSERT INTO table1 VALUES (?)"</g>, <g id="3">Array</g>(<g id="4">Rnd</g>(<g id="5">0</g>, <g id="6">100000</g>)))</source>
<target xml:lang="zh"><x id="1"/>SQL1.AddNonQueryToBatch(<g id="2">"INSERT INTO table1 VALUES (?)"</g>, <g id="3">Array</g>(<g id="4">Rnd</g>(<g id="5">0</g>, <g id="6">100000</g>)))</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1431" xml:space="preserve">
<source xml:lang="en">Next</source>
<target xml:lang="zh">Next</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1432" xml:space="preserve">
<source xml:lang="en">Dim<g id="1"> SenderFilter </g>As<g id="2"> </g><g id="3">Object</g><g id="4"> = SQL1.ExecNonQueryBatch(</g><g id="5">"SQL"</g><g id="6">)</g></source>
<target xml:lang="zh">Dim<g id="1"> SenderFilter </g>As<g id="2"> </g><g id="3">Object</g><g id="4"> = SQL1.ExecNonQueryBatch(</g><g id="5">"SQL"</g><g id="6">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1433" xml:space="preserve">
<source xml:lang="en">Wait<g id="1"> </g>For<g id="2"> (SenderFilter) SQL_NonQueryComplete (Success </g>As<g id="3"> </g><g id="4">Boolean</g><g id="5">)</g></source>
<target xml:lang="zh">Wait<g id="1"> </g>For<g id="2"> (SenderFilter) SQL_NonQueryComplete (Success </g>As<g id="3"> </g><g id="4">Boolean</g><g id="5">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1434" xml:space="preserve">
<source xml:lang="en">Log<g id="1">(</g><g id="2">"NonQuery: "</g><g id="3"> &amp; Success)</g></source>
<target xml:lang="zh">Log<g id="1">(</g><g id="2">"NonQuery: "</g><g id="3"> &amp; Success)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1435" xml:space="preserve">
<source xml:lang="en">The steps are:<x id="1"/>- Call AddNonQueryToBatch for each commands that should be issued. <x id="2"/>- Execute the commands with ExecNonQueryBatch. This is an asynchronous method. The commands will be executed in the background and the NonQueryComplete event will be raised when done.<x id="3"/>- This call returns an object that can be used as the sender filter parameter. This is important as there could be multiple background batch executions running. With the filter parameter the event will be caught by the correct Wait For call in all cases.<x id="4"/>- Note that SQL1.ExecNonQueryBatch begins and ends a transaction internally.</source>
<target xml:lang="zh">The steps are:<x id="1"/>- Call AddNonQueryToBatch for each commands that should be issued. <x id="2"/>- Execute the commands with ExecNonQueryBatch. This is an asynchronous method. The commands will be executed in the background and the NonQueryComplete event will be raised when done.<x id="3"/>- This call returns an object that can be used as the sender filter parameter. This is important as there could be multiple background batch executions running. With the filter parameter the event will be caught by the correct Wait For call in all cases.<x id="4"/>- Note that SQL1.ExecNonQueryBatch begins and ends a transaction internally.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1436" xml:space="preserve">
<source xml:lang="en">Queries</source>
<target xml:lang="zh">Queries</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1437" xml:space="preserve">
<source xml:lang="en">In most cases the queries will be fast and should therefore be issued synchronously with SQL1.ExecQuery2. However if there is a slow query then you should switch to SQL1.ExecQueryAsync:</source>
<target xml:lang="zh">In most cases the queries will be fast and should therefore be issued synchronously with SQL1.ExecQuery2. However if there is a slow query then you should switch to SQL1.ExecQueryAsync:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1438" xml:space="preserve">
<source xml:lang="en">Dim<g id="1"> SenderFilter </g>As<g id="2"> </g><g id="3">Object</g><g id="4"> = SQL1.ExecQueryAsync(</g><g id="5">"SQL"</g><g id="6">, </g><g id="7">"SELECT * FROM table1"</g><g id="8">, </g>Null<g id="9">)</g></source>
<target xml:lang="zh">Dim<g id="1"> SenderFilter </g>As<g id="2"> </g><g id="3">Object</g><g id="4"> = SQL1.ExecQueryAsync(</g><g id="5">"SQL"</g><g id="6">, </g><g id="7">"SELECT * FROM table1"</g><g id="8">, </g>Null<g id="9">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1439" xml:space="preserve">
<source xml:lang="en">Wait<g id="1"> </g>For<g id="2"> (SenderFilter) SQL_QueryComplete (Success </g>As<g id="3"> </g><g id="4">Boolean</g><g id="5">, rs </g>As<g id="6"> </g><g id="7">ResultSet</g><g id="8">)</g></source>
<target xml:lang="zh">Wait<g id="1"> </g>For<g id="2"> (SenderFilter) SQL_QueryComplete (Success </g>As<g id="3"> </g><g id="4">Boolean</g><g id="5">, rs </g>As<g id="6"> </g><g id="7">ResultSet</g><g id="8">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1440" xml:space="preserve">
<source xml:lang="en">If<g id="1"> Success </g>Then</source>
<target xml:lang="zh">If<g id="1"> Success </g>Then</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1441" xml:space="preserve">
<source xml:lang="en"><g id="1">Do</g> <g id="2">While</g> rs.NextRow</source>
<target xml:lang="zh"><g id="1">Do</g> <g id="2">While</g> rs.NextRow</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1442" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g>(rs.GetInt2(<g id="2">0</g>))</source>
<target xml:lang="zh"><g id="1">Log</g>(rs.GetInt2(<g id="2">0</g>))</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1443" xml:space="preserve">
<source xml:lang="en"><g id="1">Loop</g></source>
<target xml:lang="zh"><g id="1">Loop</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1444" xml:space="preserve">
<source xml:lang="en"><x id="1"/>rs.Close</source>
<target xml:lang="zh"><x id="1"/>rs.Close</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1445" xml:space="preserve">
<source xml:lang="en">Else</source>
<target xml:lang="zh">Else</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1446" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g>(<g id="2">LastException</g>)</source>
<target xml:lang="zh"><g id="1">Log</g>(<g id="2">LastException</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1447" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>If</source>
<target xml:lang="zh">End<g id="1"> </g>If</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1448" xml:space="preserve">
<source xml:lang="en">As in the previous case, the ExecQueryAsync method returns an object that is used as the sender filter parameter.<x id="1"/>Tips:<x id="2"/>1. ResultSet type in B4A extends the Cursor type. You can change it to Cursor if you prefer. The advantage of using ResultSet is that it is compatible with B4J and B4i.<x id="3"/>2. If the number of rows returned from the query is large then the Do While loop will be slow in debug mode. You can make it faster by putting it in a different sub and cleaning the project (Ctrl + P):</source>
<target xml:lang="zh">As in the previous case, the ExecQueryAsync method returns an object that is used as the sender filter parameter.<x id="1"/>Tips:<x id="2"/>1. ResultSet type in B4A extends the Cursor type. You can change it to Cursor if you prefer. The advantage of using ResultSet is that it is compatible with B4J and B4i.<x id="3"/>2. If the number of rows returned from the query is large then the Do While loop will be slow in debug mode. You can make it faster by putting it in a different sub and cleaning the project (Ctrl + P):</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1449" xml:space="preserve">
<source xml:lang="en"><g id="1">Wait</g><g id="2"> </g><g id="3">For</g><g id="4"> (SenderFilter) SQL_QueryComplete (Success </g><g id="5">As</g><g id="6"> </g><g id="7">Boolean</g><g id="8">, rs </g><g id="9">As</g><g id="10"> </g><g id="11">ResultSet</g><g id="12">)</g></source>
<target xml:lang="zh"><g id="1">Wait</g><g id="2"> </g><g id="3">For</g><g id="4"> (SenderFilter) SQL_QueryComplete (Success </g><g id="5">As</g><g id="6"> </g><g id="7">Boolean</g><g id="8">, rs </g><g id="9">As</g><g id="10"> </g><g id="11">ResultSet</g><g id="12">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1450" xml:space="preserve">
<source xml:lang="en"><g id="1">If</g> Success <g id="2">Then</g></source>
<target xml:lang="zh"><g id="1">If</g> Success <g id="2">Then</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1451" xml:space="preserve">
<source xml:lang="en"><x id="1"/>WorkWithResultSet(rs)</source>
<target xml:lang="zh"><x id="1"/>WorkWithResultSet(rs)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1452" xml:space="preserve">
<source xml:lang="en"><g id="1">Else</g></source>
<target xml:lang="zh"><g id="1">Else</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1453" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g>(<g id="2">LastException</g>)</source>
<target xml:lang="zh"><g id="1">Log</g>(<g id="2">LastException</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1454" xml:space="preserve">
<source xml:lang="en"><g id="1">End</g> <g id="2">If</g></source>
<target xml:lang="zh"><g id="1">End</g> <g id="2">If</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1455" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1456" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> </g>Sub<g id="2"> <g id="3">WorkWithResultSet</g>(rs </g>As<g id="4"> </g><g id="5">ResultSet</g><g id="6">)</g></source>
<target xml:lang="zh">Private<g id="1"> </g>Sub<g id="2"> <g id="3">WorkWithResultSet</g>(rs </g>As<g id="4"> </g><g id="5">ResultSet</g><g id="6">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1457" xml:space="preserve">
<source xml:lang="en"><g id="1">Do</g> <g id="2">While</g> rs.NextRow</source>
<target xml:lang="zh"><g id="1">Do</g> <g id="2">While</g> rs.NextRow</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1458" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g>(rs.GetInt2(<g id="2">0</g>))</source>
<target xml:lang="zh"><g id="1">Log</g>(rs.GetInt2(<g id="2">0</g>))</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1459" xml:space="preserve">
<source xml:lang="en"><g id="1">Loop</g></source>
<target xml:lang="zh"><g id="1">Loop</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1460" xml:space="preserve">
<source xml:lang="en"><x id="1"/>rs.Close</source>
<target xml:lang="zh"><x id="1"/>rs.Close</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1461" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1462" xml:space="preserve">
<source xml:lang="en">This is related to a debugger optimization that is currently disabled in resumable subs.<x id="1"/>The performance of both solutions will be the same in release mode.</source>
<target xml:lang="zh">This is related to a debugger optimization that is currently disabled in resumable subs.<x id="1"/>The performance of both solutions will be the same in release mode.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1463" xml:space="preserve">
<source xml:lang="en">B4J</source>
<target xml:lang="zh">B4J</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1464" xml:space="preserve">
<source xml:lang="en">- Requires jSQL v1.50+ (<g id="1">https://www.b4x.com/android/forum/threads/updates-to-internal-libaries.48274/#post-503552</g>).<x id="2"/>- Recommended to set the journal mode to WAL: <g id="3">https://www.b4x.com/android/forum/t...ent-access-to-sqlite-databases.39904/#content</g></source>
<target xml:lang="zh">- Requires jSQL v1.50+ (<g id="1">https://www.b4x.com/android/forum/threads/updates-to-internal-libaries.48274/#post-503552</g>).<x id="2"/>- Recommended to set the journal mode to WAL: <g id="3">https://www.b4x.com/android/forum/t...ent-access-to-sqlite-databases.39904/#content</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1465" xml:space="preserve">
<source xml:lang="en">Notes &amp; Tips</source>
<target xml:lang="zh">Notes &amp; Tips</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1466" xml:space="preserve">
<source xml:lang="en">The performance overhead of resumable subs in release mode should be insignificant in most cases. The overhead can be larger in debug mode. (If this becomes an issue then take the slow parts of the code and move them to other subs that are called from the resumable sub.)</source>
<target xml:lang="zh">The performance overhead of resumable subs in release mode should be insignificant in most cases. The overhead can be larger in debug mode. (If this becomes an issue then take the slow parts of the code and move them to other subs that are called from the resumable sub.)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1467" xml:space="preserve">
<source xml:lang="en">Wait For events handlers precede the regular event handlers.</source>
<target xml:lang="zh">Wait For events handlers precede the regular event handlers.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1468" xml:space="preserve">
<source xml:lang="en">Resumable subs do not create additional threads. The code is executed by the main thread, or the handler thread in server solutions.</source>
<target xml:lang="zh">Resumable subs do not create additional threads. The code is executed by the main thread, or the handler thread in server solutions.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1469" xml:space="preserve">
<source xml:lang="en">Events</source>
<target xml:lang="zh">Events</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1470" xml:space="preserve">
<source xml:lang="en">In Object-oriented programming we have objects which can react on different user actions called events.</source>
<target xml:lang="zh">In Object-oriented programming we have objects which can react on different user actions called events.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1471" xml:space="preserve">
<source xml:lang="en">The number and the type of events an object can raise depend on the type of the object.</source>
<target xml:lang="zh">The number and the type of events an object can raise depend on the type of the object.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1472" xml:space="preserve">
<source xml:lang="en">B4A</source>
<target xml:lang="zh">B4A</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1473" xml:space="preserve">
<source xml:lang="en">User interface objects are called  'Views'  in Android.</source>
<target xml:lang="zh">User interface objects are called  'Views'  in Android.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1474" xml:space="preserve">
<source xml:lang="en">Summary of the events for different views:</source>
<target xml:lang="zh">Summary of the events for different views:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1475" xml:space="preserve">
<source xml:lang="en">Events</source>
<target xml:lang="zh">Events</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1476" xml:space="preserve">
<source xml:lang="en">Views</source>
<target xml:lang="zh">Views</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1477" xml:space="preserve">
<source xml:lang="en">Click</source>
<target xml:lang="zh">Click</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1478" xml:space="preserve">
<source xml:lang="en">LongClick</source>
<target xml:lang="zh">LongClick</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1479" xml:space="preserve">
<source xml:lang="en">Touch</source>
<target xml:lang="zh">Touch</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1480" xml:space="preserve">
<source xml:lang="en">Down</source>
<target xml:lang="zh">Down</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1481" xml:space="preserve">
<source xml:lang="en">Up</source>
<target xml:lang="zh">Up</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1482" xml:space="preserve">
<source xml:lang="en">KeyPress</source>
<target xml:lang="zh">KeyPress</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1483" xml:space="preserve">
<source xml:lang="en">KeyUp</source>
<target xml:lang="zh">KeyUp</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1484" xml:space="preserve">
<source xml:lang="en">ItemClick</source>
<target xml:lang="zh">ItemClick</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1485" xml:space="preserve">
<source xml:lang="en">ItemLongClick</source>
<target xml:lang="zh">ItemLongClick</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1486" xml:space="preserve">
<source xml:lang="en">CheckedChange</source>
<target xml:lang="zh">CheckedChange</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1487" xml:space="preserve">
<source xml:lang="en">EnterPressed</source>
<target xml:lang="zh">EnterPressed</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1488" xml:space="preserve">
<source xml:lang="en">FocusChanged</source>
<target xml:lang="zh">FocusChanged</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1489" xml:space="preserve">
<source xml:lang="en">TextChanged</source>
<target xml:lang="zh">TextChanged</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1490" xml:space="preserve">
<source xml:lang="en">ScrollChanged</source>
<target xml:lang="zh">ScrollChanged</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1491" xml:space="preserve">
<source xml:lang="en">ValueChanged</source>
<target xml:lang="zh">ValueChanged</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1492" xml:space="preserve">
<source xml:lang="en">TabChanged</source>
<target xml:lang="zh">TabChanged</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1493" xml:space="preserve">
<source xml:lang="en">OverrideUrl</source>
<target xml:lang="zh">OverrideUrl</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1494" xml:space="preserve">
<source xml:lang="en">PageFinished</source>
<target xml:lang="zh">PageFinished</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1495" xml:space="preserve">
<source xml:lang="en">Activity</source>
<target xml:lang="zh">Activity</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1496" xml:space="preserve">
<source xml:lang="en">Button</source>
<target xml:lang="zh">Button</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1497" xml:space="preserve">
<source xml:lang="en">CheckBox</source>
<target xml:lang="zh">CheckBox</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1498" xml:space="preserve">
<source xml:lang="en">EditText</source>
<target xml:lang="zh">EditText</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1499" xml:space="preserve">
<source xml:lang="en">HorizontalScrollView</source>
<target xml:lang="zh">HorizontalScrollView</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1500" xml:space="preserve">
<source xml:lang="en">ImageView</source>
<target xml:lang="zh">ImageView</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1501" xml:space="preserve">
<source xml:lang="en">Label</source>
<target xml:lang="zh">Label</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1502" xml:space="preserve">
<source xml:lang="en">ListView</source>
<target xml:lang="zh">ListView</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1503" xml:space="preserve">
<source xml:lang="en">Panel</source>
<target xml:lang="zh">Panel</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1504" xml:space="preserve">
<source xml:lang="en">RadioButton</source>
<target xml:lang="zh">RadioButton</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1505" xml:space="preserve">
<source xml:lang="en">ScrollView</source>
<target xml:lang="zh">ScrollView</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1506" xml:space="preserve">
<source xml:lang="en">SeekBar</source>
<target xml:lang="zh">SeekBar</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1507" xml:space="preserve">
<source xml:lang="en">Spinner</source>
<target xml:lang="zh">Spinner</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1508" xml:space="preserve">
<source xml:lang="en">TabHost</source>
<target xml:lang="zh">TabHost</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1509" xml:space="preserve">
<source xml:lang="en">ToggleButton</source>
<target xml:lang="zh">ToggleButton</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1510" xml:space="preserve">
<source xml:lang="en">WebView</source>
<target xml:lang="zh">WebView</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1511" xml:space="preserve">
<source xml:lang="en">The most common events are:</source>
<target xml:lang="zh">The most common events are:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1512" xml:space="preserve">
<source xml:lang="en"><g id="1">Click</g><x id="2"/>Event raised when the user clicks on the view.<x id="3"/>Example:<x id="4"/><g id="5">Sub </g><g id="6">Button1_Click</g><g id="7"><x id="8"/>  </g><g id="9">' Your code<x id="10"/></g><g id="11">End Sub<x id="12"/></g></source>
<target xml:lang="zh"><g id="1">Click</g><x id="2"/>Event raised when the user clicks on the view.<x id="3"/>Example:<x id="4"/><g id="5">Sub </g><g id="6">Button1_Click</g><g id="7"><x id="8"/>  </g><g id="9">' Your code<x id="10"/></g><g id="11">End Sub<x id="12"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1513" xml:space="preserve">
<source xml:lang="en"><g id="1">LongClick</g><x id="2"/>Event raised when the user clicks on the view and holds it pressed for a while.<x id="3"/>Example:<x id="4"/><g id="5">Sub </g><g id="6">Button1_LongClick</g><g id="7"><x id="8"/>  </g><g id="9">' Your code<x id="10"/></g><g id="11">End Sub<x id="12"/></g></source>
<target xml:lang="zh"><g id="1">LongClick</g><x id="2"/>Event raised when the user clicks on the view and holds it pressed for a while.<x id="3"/>Example:<x id="4"/><g id="5">Sub </g><g id="6">Button1_LongClick</g><g id="7"><x id="8"/>  </g><g id="9">' Your code<x id="10"/></g><g id="11">End Sub<x id="12"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1514" xml:space="preserve">
<source xml:lang="en"><g id="1">Touch<x id="2"/></g><g id="3">(Action </g><g id="4">As</g><g id="5"> </g><g id="6">Int</g><g id="7">, X </g><g id="8">As</g><g id="9"> </g><g id="10">Float</g><g id="11">, Y </g><g id="12">As</g><g id="13"> </g><g id="14">Float</g><g id="15">)<x id="16"/></g>Event raised when the user touches the screen. <x id="17"/>Three different actions are handled:<x id="18"/>-  Activity.ACTION_DOWN,<x id="19"/>the user touches the screen.<x id="20"/>-  Activity.ACTION_MOVE,<x id="21"/>the user moves the finger without leaving the screen.<x id="22"/>-  Activity.ACTION_UP,<x id="23"/>the user leaves the screen.<x id="24"/>The X an Y coordinates of the finger position are given.<x id="25"/>Example:<x id="26"/><g id="27">Sub </g><g id="28">Activity_Touch</g><g id="29"> (Action </g><g id="30">As</g><g id="31"> </g><g id="32">Int</g><g id="33">, X </g><g id="34">As</g><g id="35"> </g><g id="36">Float</g><g id="37">, Y </g><g id="38">As</g><g id="39"> </g><g id="40">Float</g><g id="41">)<x id="42"/>  </g><g id="43">Select</g><g id="44"> Action<x id="45"/>  </g><g id="46">Case</g><g id="47"> </g><g id="48">Activity</g><g id="49">.ACTION_DOWN<x id="50"/>    </g><g id="51">' Your code for DOWN action<x id="52"/>  </g><g id="53">Case</g><g id="54"> </g><g id="55">Activity</g><g id="56">.ACTION_MOVE<x id="57"/>    </g><g id="58">' Your code for MOVE action</g><g id="59"><x id="60"/>  </g><g id="61">Case</g><g id="62"> </g><g id="63">Activity</g><g id="64">.ACTION_UP<x id="65"/>    </g><g id="66">' Your code for UP action</g><g id="67"><x id="68"/>  </g><g id="69">End</g><g id="70"> </g><g id="71">Select<x id="72"/>End Sub<x id="73"/></g></source>
<target xml:lang="zh"><g id="1">Touch<x id="2"/></g><g id="3">(Action </g><g id="4">As</g><g id="5"> </g><g id="6">Int</g><g id="7">, X </g><g id="8">As</g><g id="9"> </g><g id="10">Float</g><g id="11">, Y </g><g id="12">As</g><g id="13"> </g><g id="14">Float</g><g id="15">)<x id="16"/></g>Event raised when the user touches the screen. <x id="17"/>Three different actions are handled:<x id="18"/>-  Activity.ACTION_DOWN,<x id="19"/>the user touches the screen.<x id="20"/>-  Activity.ACTION_MOVE,<x id="21"/>the user moves the finger without leaving the screen.<x id="22"/>-  Activity.ACTION_UP,<x id="23"/>the user leaves the screen.<x id="24"/>The X an Y coordinates of the finger position are given.<x id="25"/>Example:<x id="26"/><g id="27">Sub </g><g id="28">Activity_Touch</g><g id="29"> (Action </g><g id="30">As</g><g id="31"> </g><g id="32">Int</g><g id="33">, X </g><g id="34">As</g><g id="35"> </g><g id="36">Float</g><g id="37">, Y </g><g id="38">As</g><g id="39"> </g><g id="40">Float</g><g id="41">)<x id="42"/>  </g><g id="43">Select</g><g id="44"> Action<x id="45"/>  </g><g id="46">Case</g><g id="47"> </g><g id="48">Activity</g><g id="49">.ACTION_DOWN<x id="50"/>    </g><g id="51">' Your code for DOWN action<x id="52"/>  </g><g id="53">Case</g><g id="54"> </g><g id="55">Activity</g><g id="56">.ACTION_MOVE<x id="57"/>    </g><g id="58">' Your code for MOVE action</g><g id="59"><x id="60"/>  </g><g id="61">Case</g><g id="62"> </g><g id="63">Activity</g><g id="64">.ACTION_UP<x id="65"/>    </g><g id="66">' Your code for UP action</g><g id="67"><x id="68"/>  </g><g id="69">End</g><g id="70"> </g><g id="71">Select<x id="72"/>End Sub<x id="73"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1515" xml:space="preserve">
<source xml:lang="en"><g id="1">CheckChanged</g> <g id="2">(Checked </g><g id="3">As</g><g id="4"> </g><g id="5">Boolean</g><g id="6">)</g><x id="7"/>Event raised when the user clicks on a CheckBox or a RadioButton<x id="8"/>Checked is equal to True if the view is checked or False if not checked.<x id="9"/>Example:<x id="10"/><g id="11">Sub </g><g id="12">CheckBox1_CheckedChange</g><g id="13">(Checked </g><g id="14">As</g><g id="15"> </g><g id="16">Boolean</g><g id="17">)<x id="18"/>  </g><g id="19">If</g><g id="20"> Checked = </g><g id="21">True</g><g id="22"> </g><g id="23">Then<x id="24"/>    </g><g id="25">' Your code if checked<x id="26"/>  </g><g id="27">Else<x id="28"/>    </g><g id="29">' Your code if not checked<x id="30"/>  </g><g id="31">End</g><g id="32"> </g><g id="33">If<x id="34"/>End Sub<x id="35"/></g></source>
<target xml:lang="zh"><g id="1">CheckChanged</g> <g id="2">(Checked </g><g id="3">As</g><g id="4"> </g><g id="5">Boolean</g><g id="6">)</g><x id="7"/>Event raised when the user clicks on a CheckBox or a RadioButton<x id="8"/>Checked is equal to True if the view is checked or False if not checked.<x id="9"/>Example:<x id="10"/><g id="11">Sub </g><g id="12">CheckBox1_CheckedChange</g><g id="13">(Checked </g><g id="14">As</g><g id="15"> </g><g id="16">Boolean</g><g id="17">)<x id="18"/>  </g><g id="19">If</g><g id="20"> Checked = </g><g id="21">True</g><g id="22"> </g><g id="23">Then<x id="24"/>    </g><g id="25">' Your code if checked<x id="26"/>  </g><g id="27">Else<x id="28"/>    </g><g id="29">' Your code if not checked<x id="30"/>  </g><g id="31">End</g><g id="32"> </g><g id="33">If<x id="34"/>End Sub<x id="35"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1516" xml:space="preserve">
<source xml:lang="en"><g id="1">KeyPress</g> <g id="2">(KeyCode </g><g id="3">As</g><g id="4"> </g><g id="5">Int</g><g id="6">) </g><g id="7">As</g><g id="8"> </g><g id="9">Boolean</g><x id="10"/>Event raised when the user presses a physical or virtual key.<x id="11"/>KeyCode is the code of the pressed key, you can get them with the KeyCodes keyword.<x id="12"/><x id="13"/><x id="14"/>The event can return either:<x id="15"/>-  True, the event is 'consumed', considered by the operating system as already executed and    no further action is taken.<x id="16"/>-  False, the event is not consumed and transmitted to the system for further actions. <x id="17"/>Example:<x id="18"/><g id="19">Sub </g><g id="20">Activity_KeyPress</g><g id="21">(KeyCode </g><g id="22">As</g><g id="23"> </g><g id="24">Int</g><g id="25">) </g><g id="26">As</g><g id="27"> </g><g id="28">Boolean<x id="29"/>  </g><g id="30">Private</g><g id="31"> Answ </g><g id="32">As</g><g id="33"> </g><g id="34">Int<x id="35"/>  </g><g id="36">Private</g><g id="37"> Txt </g><g id="38">As</g><g id="39"> </g><g id="40">String<x id="41"/>  <x id="42"/>  </g><g id="43">If</g><g id="44"> KeyCode = </g><g id="45">KeyCodes</g><g id="46">.KEYCODE_BACK </g><g id="47">Then<x id="48"/></g><g id="49">' Checks if KeyCode is BackKey<x id="50"/>    </g><g id="51">Txt = </g><g id="52">"Do you really want to quit the program ?"<x id="53"/>    </g><g id="54">Answ = </g><g id="55">Msgbox2</g><g id="56">(Txt,</g><g id="57">"A T T E N T I O N"</g><g id="58">,</g><g id="59">"Yes"</g><g id="60">,</g><g id="61">""</g><g id="62">,</g><g id="63">"No"</g><g id="64">,</g><g id="65">Null</g><g id="66">)</g><g id="67">' MessageBox<x id="68"/>    </g><g id="69">If</g><g id="70"> Answ = </g><g id="71">DialogResponse</g><g id="72">.POSITIVE </g><g id="73">Then  </g><g id="74">' If return value is Yes then<x id="75"/>      </g><g id="76">Return</g><g id="77"> </g><g id="78">False    </g><g id="79">' Return = False  the Event will not be consumed<x id="80"/>    </g><g id="81">Else</g><g id="82"><x id="83"/>   </g><g id="84">' <x id="85"/>   we leave the program<x id="86"/>      </g><g id="87">Return</g><g id="88"> </g><g id="89">True</g><g id="90"><x id="91"/>   </g><g id="92">' Return = True   the Event will be consumed to avoid<x id="93"/>    </g><g id="94">End</g><g id="95"> </g><g id="96">If</g><g id="97"><x id="98"/>   </g><g id="99">'                 leaving the program<x id="100"/>  </g><g id="101">End</g><g id="102"> </g><g id="103">If<x id="104"/>End Sub</g></source>
<target xml:lang="zh"><g id="1">KeyPress</g> <g id="2">(KeyCode </g><g id="3">As</g><g id="4"> </g><g id="5">Int</g><g id="6">) </g><g id="7">As</g><g id="8"> </g><g id="9">Boolean</g><x id="10"/>Event raised when the user presses a physical or virtual key.<x id="11"/>KeyCode is the code of the pressed key, you can get them with the KeyCodes keyword.<x id="12"/><x id="13"/><x id="14"/>The event can return either:<x id="15"/>-  True, the event is 'consumed', considered by the operating system as already executed and    no further action is taken.<x id="16"/>-  False, the event is not consumed and transmitted to the system for further actions. <x id="17"/>Example:<x id="18"/><g id="19">Sub </g><g id="20">Activity_KeyPress</g><g id="21">(KeyCode </g><g id="22">As</g><g id="23"> </g><g id="24">Int</g><g id="25">) </g><g id="26">As</g><g id="27"> </g><g id="28">Boolean<x id="29"/>  </g><g id="30">Private</g><g id="31"> Answ </g><g id="32">As</g><g id="33"> </g><g id="34">Int<x id="35"/>  </g><g id="36">Private</g><g id="37"> Txt </g><g id="38">As</g><g id="39"> </g><g id="40">String<x id="41"/>  <x id="42"/>  </g><g id="43">If</g><g id="44"> KeyCode = </g><g id="45">KeyCodes</g><g id="46">.KEYCODE_BACK </g><g id="47">Then<x id="48"/></g><g id="49">' Checks if KeyCode is BackKey<x id="50"/>    </g><g id="51">Txt = </g><g id="52">"Do you really want to quit the program ?"<x id="53"/>    </g><g id="54">Answ = </g><g id="55">Msgbox2</g><g id="56">(Txt,</g><g id="57">"A T T E N T I O N"</g><g id="58">,</g><g id="59">"Yes"</g><g id="60">,</g><g id="61">""</g><g id="62">,</g><g id="63">"No"</g><g id="64">,</g><g id="65">Null</g><g id="66">)</g><g id="67">' MessageBox<x id="68"/>    </g><g id="69">If</g><g id="70"> Answ = </g><g id="71">DialogResponse</g><g id="72">.POSITIVE </g><g id="73">Then  </g><g id="74">' If return value is Yes then<x id="75"/>      </g><g id="76">Return</g><g id="77"> </g><g id="78">False    </g><g id="79">' Return = False  the Event will not be consumed<x id="80"/>    </g><g id="81">Else</g><g id="82"><x id="83"/>   </g><g id="84">' <x id="85"/>   we leave the program<x id="86"/>      </g><g id="87">Return</g><g id="88"> </g><g id="89">True</g><g id="90"><x id="91"/>   </g><g id="92">' Return = True   the Event will be consumed to avoid<x id="93"/>    </g><g id="94">End</g><g id="95"> </g><g id="96">If</g><g id="97"><x id="98"/>   </g><g id="99">'                 leaving the program<x id="100"/>  </g><g id="101">End</g><g id="102"> </g><g id="103">If<x id="104"/>End Sub</g></target>
</trans-unit>
<trans-unit id="N8523EE7F-sub1" xml:space="preserve">
<source xml:lang="en">Image 382</source>
<target xml:lang="zh">Image 382</target>
</trans-unit>
<trans-unit id="N8523EE7F-sub2" xml:space="preserve">
<source xml:lang="en">Picture 382</source>
<target xml:lang="zh">Picture 382</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1517" xml:space="preserve">
<source xml:lang="en">B4i</source>
<target xml:lang="zh">B4i</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1518" xml:space="preserve">
<source xml:lang="en">User interface objects are called  'Views'  in iOS.</source>
<target xml:lang="zh">User interface objects are called  'Views'  in iOS.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1519" xml:space="preserve">
<source xml:lang="en">Summary of the events for different views:</source>
<target xml:lang="zh">Summary of the events for different views:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1520" xml:space="preserve">
<source xml:lang="en">Events</source>
<target xml:lang="zh">Events</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1521" xml:space="preserve">
<source xml:lang="en">Views</source>
<target xml:lang="zh">Views</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1522" xml:space="preserve">
<source xml:lang="en">Click</source>
<target xml:lang="zh">Click</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1523" xml:space="preserve">
<source xml:lang="en">LongClick</source>
<target xml:lang="zh">LongClick</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1524" xml:space="preserve">
<source xml:lang="en">BeginEdit</source>
<target xml:lang="zh">BeginEdit</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1525" xml:space="preserve">
<source xml:lang="en">EndEdit</source>
<target xml:lang="zh">EndEdit</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1526" xml:space="preserve">
<source xml:lang="en">EnterPressed</source>
<target xml:lang="zh">EnterPressed</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1527" xml:space="preserve">
<source xml:lang="en">TextChanged</source>
<target xml:lang="zh">TextChanged</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1528" xml:space="preserve">
<source xml:lang="en">Touch</source>
<target xml:lang="zh">Touch</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1529" xml:space="preserve">
<source xml:lang="en">Resize</source>
<target xml:lang="zh">Resize</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1530" xml:space="preserve">
<source xml:lang="en">ScrollChanged</source>
<target xml:lang="zh">ScrollChanged</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1531" xml:space="preserve">
<source xml:lang="en">ValueChanged</source>
<target xml:lang="zh">ValueChanged</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1532" xml:space="preserve">
<source xml:lang="en">ItemSelected</source>
<target xml:lang="zh">ItemSelected</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1533" xml:space="preserve">
<source xml:lang="en">IndexChanged</source>
<target xml:lang="zh">IndexChanged</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1534" xml:space="preserve">
<source xml:lang="en">OverrideUrl</source>
<target xml:lang="zh">OverrideUrl</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1535" xml:space="preserve">
<source xml:lang="en">PageFinished</source>
<target xml:lang="zh">PageFinished</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1536" xml:space="preserve">
<source xml:lang="en">Button</source>
<target xml:lang="zh">Button</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1537" xml:space="preserve">
<source xml:lang="en">TextField</source>
<target xml:lang="zh">TextField</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1538" xml:space="preserve">
<source xml:lang="en">TextView</source>
<target xml:lang="zh">TextView</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1539" xml:space="preserve">
<source xml:lang="en">ImageView</source>
<target xml:lang="zh">ImageView</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1540" xml:space="preserve">
<source xml:lang="en">Label</source>
<target xml:lang="zh">Label</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1541" xml:space="preserve">
<source xml:lang="en">Panel</source>
<target xml:lang="zh">Panel</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1542" xml:space="preserve">
<source xml:lang="en">ScrollView</source>
<target xml:lang="zh">ScrollView</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1543" xml:space="preserve">
<source xml:lang="en">Slider</source>
<target xml:lang="zh">Slider</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1544" xml:space="preserve">
<source xml:lang="en">Picker</source>
<target xml:lang="zh">Picker</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1545" xml:space="preserve">
<source xml:lang="en">Stepper</source>
<target xml:lang="zh">Stepper</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1546" xml:space="preserve">
<source xml:lang="en">Switch</source>
<target xml:lang="zh">Switch</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1547" xml:space="preserve">
<source xml:lang="en">SegmentedControl</source>
<target xml:lang="zh">SegmentedControl</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1548" xml:space="preserve">
<source xml:lang="en">Slider</source>
<target xml:lang="zh">Slider</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1549" xml:space="preserve">
<source xml:lang="en">Stepper</source>
<target xml:lang="zh">Stepper</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1550" xml:space="preserve">
<source xml:lang="en">WebView</source>
<target xml:lang="zh">WebView</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1551" xml:space="preserve">
<source xml:lang="en">The most common events are:</source>
<target xml:lang="zh">The most common events are:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1552" xml:space="preserve">
<source xml:lang="en"><g id="1">Click</g><x id="2"/>Event raised when the user clicks on the view.<x id="3"/>Example:<x id="4"/><g id="5">Private Sub </g><g id="6">Button1_Click</g><g id="7"><x id="8"/>  </g><g id="9">' Your code<x id="10"/></g><g id="11">End Sub<x id="12"/></g></source>
<target xml:lang="zh"><g id="1">Click</g><x id="2"/>Event raised when the user clicks on the view.<x id="3"/>Example:<x id="4"/><g id="5">Private Sub </g><g id="6">Button1_Click</g><g id="7"><x id="8"/>  </g><g id="9">' Your code<x id="10"/></g><g id="11">End Sub<x id="12"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1553" xml:space="preserve">
<source xml:lang="en"><g id="1">LongClick</g><x id="2"/>Event raised when the user clicks on the view and holds it pressed for a while.<x id="3"/>Example:<x id="4"/><g id="5">Private Sub </g><g id="6">Button1_LongClick</g><g id="7"><x id="8"/>  </g><g id="9">' Your code<x id="10"/></g><g id="11">End Sub<x id="12"/></g></source>
<target xml:lang="zh"><g id="1">LongClick</g><x id="2"/>Event raised when the user clicks on the view and holds it pressed for a while.<x id="3"/>Example:<x id="4"/><g id="5">Private Sub </g><g id="6">Button1_LongClick</g><g id="7"><x id="8"/>  </g><g id="9">' Your code<x id="10"/></g><g id="11">End Sub<x id="12"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1554" xml:space="preserve">
<source xml:lang="en"><g id="1">Touch<x id="2"/></g><g id="3">(Action </g><g id="4">As</g><g id="5"> </g><g id="6">Int</g><g id="7">, X </g><g id="8">As</g><g id="9"> </g><g id="10">Float</g><g id="11">, Y </g><g id="12">As</g><g id="13"> </g><g id="14">Float</g><g id="15">)<x id="16"/></g>Event raised when the user touches a Panel on the screen. <x id="17"/>Three different actions are handled:<x id="18"/>-  Panel.ACTION_DOWN,<x id="19"/>the user touches the screen.<x id="20"/>-  Panel.ACTION_MOVE,<x id="21"/>the user moves the finger without leaving the screen.<x id="22"/>-  Panel.ACTION_UP,<x id="23"/>the user leaves the screen.<x id="24"/>The X and Y coordinates of the finger positions are given in Points not in Pixels.<x id="25"/>Example:<x id="26"/><g id="27">Private Sub </g><g id="28">Panel_Touch</g><g id="29"> (Action </g><g id="30">As</g><g id="31"> </g><g id="32">Int</g><g id="33">, X </g><g id="34">As</g><g id="35"> </g><g id="36">Float</g><g id="37">, Y </g><g id="38">As</g><g id="39"> </g><g id="40">Float</g><g id="41">)<x id="42"/>  </g><g id="43">Select</g><g id="44"> Action<x id="45"/>  </g><g id="46">Case</g><g id="47"> </g><g id="48">Panel.</g><g id="49">ACTION_DOWN<x id="50"/>    </g><g id="51">' Your code for DOWN action<x id="52"/>  </g><g id="53">Case</g><g id="54"> </g><g id="55">Panel</g><g id="56">.ACTION_MOVE<x id="57"/>    </g><g id="58">' Your code for MOVE action</g><g id="59"><x id="60"/>  </g><g id="61">Case</g><g id="62"> </g><g id="63">Panel</g><g id="64">.ACTION_UP<x id="65"/>    </g><g id="66">' Your code for UP action</g><g id="67"><x id="68"/>  </g><g id="69">End</g><g id="70"> </g><g id="71">Select<x id="72"/>End Sub<x id="73"/><x id="74"/><x id="75"/></g></source>
<target xml:lang="zh"><g id="1">Touch<x id="2"/></g><g id="3">(Action </g><g id="4">As</g><g id="5"> </g><g id="6">Int</g><g id="7">, X </g><g id="8">As</g><g id="9"> </g><g id="10">Float</g><g id="11">, Y </g><g id="12">As</g><g id="13"> </g><g id="14">Float</g><g id="15">)<x id="16"/></g>Event raised when the user touches a Panel on the screen. <x id="17"/>Three different actions are handled:<x id="18"/>-  Panel.ACTION_DOWN,<x id="19"/>the user touches the screen.<x id="20"/>-  Panel.ACTION_MOVE,<x id="21"/>the user moves the finger without leaving the screen.<x id="22"/>-  Panel.ACTION_UP,<x id="23"/>the user leaves the screen.<x id="24"/>The X and Y coordinates of the finger positions are given in Points not in Pixels.<x id="25"/>Example:<x id="26"/><g id="27">Private Sub </g><g id="28">Panel_Touch</g><g id="29"> (Action </g><g id="30">As</g><g id="31"> </g><g id="32">Int</g><g id="33">, X </g><g id="34">As</g><g id="35"> </g><g id="36">Float</g><g id="37">, Y </g><g id="38">As</g><g id="39"> </g><g id="40">Float</g><g id="41">)<x id="42"/>  </g><g id="43">Select</g><g id="44"> Action<x id="45"/>  </g><g id="46">Case</g><g id="47"> </g><g id="48">Panel.</g><g id="49">ACTION_DOWN<x id="50"/>    </g><g id="51">' Your code for DOWN action<x id="52"/>  </g><g id="53">Case</g><g id="54"> </g><g id="55">Panel</g><g id="56">.ACTION_MOVE<x id="57"/>    </g><g id="58">' Your code for MOVE action</g><g id="59"><x id="60"/>  </g><g id="61">Case</g><g id="62"> </g><g id="63">Panel</g><g id="64">.ACTION_UP<x id="65"/>    </g><g id="66">' Your code for UP action</g><g id="67"><x id="68"/>  </g><g id="69">End</g><g id="70"> </g><g id="71">Select<x id="72"/>End Sub<x id="73"/><x id="74"/><x id="75"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1555" xml:space="preserve">
<source xml:lang="en">B4J</source>
<target xml:lang="zh">B4J</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1556" xml:space="preserve">
<source xml:lang="en">User interface objects are called 'Nodes' in Java.</source>
<target xml:lang="zh">User interface objects are called 'Nodes' in Java.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1557" xml:space="preserve">
<source xml:lang="en">Summary of the events for different nodes:</source>
<target xml:lang="zh">Summary of the events for different nodes:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1558" xml:space="preserve">
<source xml:lang="en">Events</source>
<target xml:lang="zh">Events</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1559" xml:space="preserve">
<source xml:lang="en">Nodes</source>
<target xml:lang="zh">Nodes</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1560" xml:space="preserve">
<source xml:lang="en">Action</source>
<target xml:lang="zh">Action</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1561" xml:space="preserve">
<source xml:lang="en">FocusChanged</source>
<target xml:lang="zh">FocusChanged</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1562" xml:space="preserve">
<source xml:lang="en">MouseClicked</source>
<target xml:lang="zh">MouseClicked</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1563" xml:space="preserve">
<source xml:lang="en">MouseDragged</source>
<target xml:lang="zh">MouseDragged</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1564" xml:space="preserve">
<source xml:lang="en">MouseMoved</source>
<target xml:lang="zh">MouseMoved</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1565" xml:space="preserve">
<source xml:lang="en">MouseEntered</source>
<target xml:lang="zh">MouseEntered</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1566" xml:space="preserve">
<source xml:lang="en">MouseExited</source>
<target xml:lang="zh">MouseExited</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1567" xml:space="preserve">
<source xml:lang="en">MousePressed</source>
<target xml:lang="zh">MousePressed</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1568" xml:space="preserve">
<source xml:lang="en">MouseReleased</source>
<target xml:lang="zh">MouseReleased</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1569" xml:space="preserve">
<source xml:lang="en">Resize</source>
<target xml:lang="zh">Resize</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1570" xml:space="preserve">
<source xml:lang="en">CheckedChange</source>
<target xml:lang="zh">CheckedChange</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1571" xml:space="preserve">
<source xml:lang="en">SelectedIndexChangedd</source>
<target xml:lang="zh">SelectedIndexChangedd</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1572" xml:space="preserve">
<source xml:lang="en">ValueChange</source>
<target xml:lang="zh">ValueChange</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1573" xml:space="preserve">
<source xml:lang="en">SelectedChange</source>
<target xml:lang="zh">SelectedChange</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1574" xml:space="preserve">
<source xml:lang="en">H / VScrollChanged</source>
<target xml:lang="zh">H / VScrollChanged</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1575" xml:space="preserve">
<source xml:lang="en">TabChanged</source>
<target xml:lang="zh">TabChanged</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1576" xml:space="preserve">
<source xml:lang="en">TextChanged</source>
<target xml:lang="zh">TextChanged</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1577" xml:space="preserve">
<source xml:lang="en">PageFinished</source>
<target xml:lang="zh">PageFinished</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1578" xml:space="preserve">
<source xml:lang="en">Touch</source>
<target xml:lang="zh">Touch</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1579" xml:space="preserve">
<source xml:lang="en">Button</source>
<target xml:lang="zh">Button</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1580" xml:space="preserve">
<source xml:lang="en">Canvas</source>
<target xml:lang="zh">Canvas</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1581" xml:space="preserve">
<source xml:lang="en">CheckBox</source>
<target xml:lang="zh">CheckBox</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1582" xml:space="preserve">
<source xml:lang="en">ChoiceBox</source>
<target xml:lang="zh">ChoiceBox</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1583" xml:space="preserve">
<source xml:lang="en">ComboBox</source>
<target xml:lang="zh">ComboBox</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1584" xml:space="preserve">
<source xml:lang="en">ImageView</source>
<target xml:lang="zh">ImageView</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1585" xml:space="preserve">
<source xml:lang="en">Label</source>
<target xml:lang="zh">Label</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1586" xml:space="preserve">
<source xml:lang="en">ListView</source>
<target xml:lang="zh">ListView</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1587" xml:space="preserve">
<source xml:lang="en">Pane</source>
<target xml:lang="zh">Pane</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1588" xml:space="preserve">
<source xml:lang="en">RadioButton</source>
<target xml:lang="zh">RadioButton</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1589" xml:space="preserve">
<source xml:lang="en">ScrollPane</source>
<target xml:lang="zh">ScrollPane</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1590" xml:space="preserve">
<source xml:lang="en">Slider</source>
<target xml:lang="zh">Slider</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1591" xml:space="preserve">
<source xml:lang="en">Spinner</source>
<target xml:lang="zh">Spinner</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1592" xml:space="preserve">
<source xml:lang="en">TabPane</source>
<target xml:lang="zh">TabPane</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1593" xml:space="preserve">
<source xml:lang="en">TextArea</source>
<target xml:lang="zh">TextArea</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1594" xml:space="preserve">
<source xml:lang="en">TextField</source>
<target xml:lang="zh">TextField</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1595" xml:space="preserve">
<source xml:lang="en">ToggleButton</source>
<target xml:lang="zh">ToggleButton</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1596" xml:space="preserve">
<source xml:lang="en">WebView</source>
<target xml:lang="zh">WebView</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1597" xml:space="preserve">
<source xml:lang="en">The most common events are:</source>
<target xml:lang="zh">The most common events are:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1598" xml:space="preserve">
<source xml:lang="en"><g id="1">Action</g><x id="2"/>Event raised when the user clicks on the node (Button or TextField).<x id="3"/>Example:<x id="4"/><g id="5">Private Sub </g><g id="6">Button1_Action</g><g id="7"><x id="8"/>  </g><g id="9">' Your code<x id="10"/></g><g id="11">End Sub<x id="12"/></g></source>
<target xml:lang="zh"><g id="1">Action</g><x id="2"/>Event raised when the user clicks on the node (Button or TextField).<x id="3"/>Example:<x id="4"/><g id="5">Private Sub </g><g id="6">Button1_Action</g><g id="7"><x id="8"/>  </g><g id="9">' Your code<x id="10"/></g><g id="11">End Sub<x id="12"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1599" xml:space="preserve">
<source xml:lang="en"><g id="1">FocusChanged </g><g id="2">(<g id="3">HasFocus </g><g id="4">As</g><g id="5"> </g><g id="6">Boolean</g><g id="7">)</g></g><x id="8"/>Event raised when the node gets or looses focus.<x id="9"/>Example:<x id="10"/><g id="11">Private Sub </g><g id="12">TextField1_FocusChanged</g><g id="13"> (HasFocus </g><g id="14">As</g><g id="15"> </g><g id="16">Boolean</g><g id="17">)<x id="18"/>  </g><g id="19">' Your code<x id="20"/></g><g id="21">End Sub<x id="22"/></g></source>
<target xml:lang="zh"><g id="1">FocusChanged </g><g id="2">(<g id="3">HasFocus </g><g id="4">As</g><g id="5"> </g><g id="6">Boolean</g><g id="7">)</g></g><x id="8"/>Event raised when the node gets or looses focus.<x id="9"/>Example:<x id="10"/><g id="11">Private Sub </g><g id="12">TextField1_FocusChanged</g><g id="13"> (HasFocus </g><g id="14">As</g><g id="15"> </g><g id="16">Boolean</g><g id="17">)<x id="18"/>  </g><g id="19">' Your code<x id="20"/></g><g id="21">End Sub<x id="22"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1600" xml:space="preserve">
<source xml:lang="en"><g id="1">MouseClicked</g><g id="2"> <g id="3">(EventData </g></g><g id="4">As</g><g id="5"> </g><g id="6">MouseEvent</g><g id="7">)<x id="8"/></g>Event raised when the user clicks on the node. <x id="9"/>Example:<x id="10"/><g id="11">Private</g><g id="12"> </g><g id="13">Sub</g><g id="14"> <g id="15">Pane1_MouseClicked</g> (EventData </g><g id="16">As</g><g id="17"> </g><g id="18">MouseEvent</g><g id="19">)<x id="20"/>  </g><g id="21">' Your code<x id="22"/></g><g id="23">End Sub<x id="24"/></g></source>
<target xml:lang="zh"><g id="1">MouseClicked</g><g id="2"> <g id="3">(EventData </g></g><g id="4">As</g><g id="5"> </g><g id="6">MouseEvent</g><g id="7">)<x id="8"/></g>Event raised when the user clicks on the node. <x id="9"/>Example:<x id="10"/><g id="11">Private</g><g id="12"> </g><g id="13">Sub</g><g id="14"> <g id="15">Pane1_MouseClicked</g> (EventData </g><g id="16">As</g><g id="17"> </g><g id="18">MouseEvent</g><g id="19">)<x id="20"/>  </g><g id="21">' Your code<x id="22"/></g><g id="23">End Sub<x id="24"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1601" xml:space="preserve">
<source xml:lang="en"><g id="1">MouseDragged</g><g id="2"> <g id="3">(EventData </g></g><g id="4">As</g><g id="5"> </g><g id="6">MouseEvent</g><g id="7">)<x id="8"/></g>Event raised when the user draggs over the node (moves with a button pressed). <x id="9"/>Similar to ACTION_MOVE in B4A Touch events.<x id="10"/>Example:<x id="11"/><g id="12">Private</g><g id="13"> </g><g id="14">Sub</g><g id="15"> <g id="16">Pane1_MouseDragged</g> (EventData </g><g id="17">As</g><g id="18"> </g><g id="19">MouseEvent</g><g id="20">)<x id="21"/>  </g><g id="22">' Your code<x id="23"/></g><g id="24">End Sub<x id="25"/></g></source>
<target xml:lang="zh"><g id="1">MouseDragged</g><g id="2"> <g id="3">(EventData </g></g><g id="4">As</g><g id="5"> </g><g id="6">MouseEvent</g><g id="7">)<x id="8"/></g>Event raised when the user draggs over the node (moves with a button pressed). <x id="9"/>Similar to ACTION_MOVE in B4A Touch events.<x id="10"/>Example:<x id="11"/><g id="12">Private</g><g id="13"> </g><g id="14">Sub</g><g id="15"> <g id="16">Pane1_MouseDragged</g> (EventData </g><g id="17">As</g><g id="18"> </g><g id="19">MouseEvent</g><g id="20">)<x id="21"/>  </g><g id="22">' Your code<x id="23"/></g><g id="24">End Sub<x id="25"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1602" xml:space="preserve">
<source xml:lang="en"><g id="1">MouseEntered </g><g id="2">(EventData </g><g id="3">As</g><g id="4"> </g><g id="5">MouseEvent</g><g id="6">)<x id="7"/></g>Event raised when the user enters the node.<x id="8"/>Example:<x id="9"/><g id="10">Private</g><g id="11"> </g><g id="12">Sub</g><g id="13"> <g id="14">Pane1_MouseEntered</g> (EventData </g><g id="15">As</g><g id="16"> </g><g id="17">MouseEvent</g><g id="18">)<x id="19"/>  </g><g id="20">' Your code<x id="21"/></g><g id="22">End Sub<x id="23"/></g></source>
<target xml:lang="zh"><g id="1">MouseEntered </g><g id="2">(EventData </g><g id="3">As</g><g id="4"> </g><g id="5">MouseEvent</g><g id="6">)<x id="7"/></g>Event raised when the user enters the node.<x id="8"/>Example:<x id="9"/><g id="10">Private</g><g id="11"> </g><g id="12">Sub</g><g id="13"> <g id="14">Pane1_MouseEntered</g> (EventData </g><g id="15">As</g><g id="16"> </g><g id="17">MouseEvent</g><g id="18">)<x id="19"/>  </g><g id="20">' Your code<x id="21"/></g><g id="22">End Sub<x id="23"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1603" xml:space="preserve">
<source xml:lang="en"><g id="1">MouseExited </g><g id="2">(EventData </g><g id="3">As</g><g id="4"> </g><g id="5">MouseEvent</g><g id="6">)<x id="7"/></g>Event raised when the user exits the node.<x id="8"/>Example:<x id="9"/><g id="10">Private</g><g id="11"> </g><g id="12">Sub</g><g id="13"> <g id="14">Pane1_MouseExited</g> (EventData </g><g id="15">As</g><g id="16"> </g><g id="17">MouseEvent</g><g id="18">)<x id="19"/>  </g><g id="20">' Your code<x id="21"/></g><g id="22">End Sub<x id="23"/></g></source>
<target xml:lang="zh"><g id="1">MouseExited </g><g id="2">(EventData </g><g id="3">As</g><g id="4"> </g><g id="5">MouseEvent</g><g id="6">)<x id="7"/></g>Event raised when the user exits the node.<x id="8"/>Example:<x id="9"/><g id="10">Private</g><g id="11"> </g><g id="12">Sub</g><g id="13"> <g id="14">Pane1_MouseExited</g> (EventData </g><g id="15">As</g><g id="16"> </g><g id="17">MouseEvent</g><g id="18">)<x id="19"/>  </g><g id="20">' Your code<x id="21"/></g><g id="22">End Sub<x id="23"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1604" xml:space="preserve">
<source xml:lang="en"><g id="1">MouseMoved</g><g id="2"> <g id="3">(EventData </g></g><g id="4">As</g><g id="5"> </g><g id="6">MouseEvent</g><g id="7">)<x id="8"/></g>Event raised when the user moves over the node (without a button pressed). <x id="9"/>Example:<x id="10"/><g id="11">Private</g><g id="12"> </g><g id="13">Sub</g><g id="14"> <g id="15">Pane1_MouseMoved</g> (EventData </g><g id="16">As</g><g id="17"> </g><g id="18">MouseEvent</g><g id="19">)<x id="20"/>  </g><g id="21">' Your code<x id="22"/></g><g id="23">End Sub<x id="24"/></g></source>
<target xml:lang="zh"><g id="1">MouseMoved</g><g id="2"> <g id="3">(EventData </g></g><g id="4">As</g><g id="5"> </g><g id="6">MouseEvent</g><g id="7">)<x id="8"/></g>Event raised when the user moves over the node (without a button pressed). <x id="9"/>Example:<x id="10"/><g id="11">Private</g><g id="12"> </g><g id="13">Sub</g><g id="14"> <g id="15">Pane1_MouseMoved</g> (EventData </g><g id="16">As</g><g id="17"> </g><g id="18">MouseEvent</g><g id="19">)<x id="20"/>  </g><g id="21">' Your code<x id="22"/></g><g id="23">End Sub<x id="24"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1605" xml:space="preserve">
<source xml:lang="en"><g id="1">MousePressed</g><g id="2"> <g id="3">(EventData </g></g><g id="4">As</g><g id="5"> </g><g id="6">MouseEvent</g><g id="7">)<x id="8"/></g>Event raised when the user presses on the node. <x id="9"/>Similar to ACTION_DOWN in B4A Touch events.<x id="10"/>Example:<x id="11"/><g id="12">Private</g><g id="13"> </g><g id="14">Sub</g><g id="15"> <g id="16">Pane1_MousePressed</g> (EventData </g><g id="17">As</g><g id="18"> </g><g id="19">MouseEvent</g><g id="20">)<x id="21"/>  </g><g id="22">' Your code<x id="23"/></g><g id="24">End Sub<x id="25"/></g></source>
<target xml:lang="zh"><g id="1">MousePressed</g><g id="2"> <g id="3">(EventData </g></g><g id="4">As</g><g id="5"> </g><g id="6">MouseEvent</g><g id="7">)<x id="8"/></g>Event raised when the user presses on the node. <x id="9"/>Similar to ACTION_DOWN in B4A Touch events.<x id="10"/>Example:<x id="11"/><g id="12">Private</g><g id="13"> </g><g id="14">Sub</g><g id="15"> <g id="16">Pane1_MousePressed</g> (EventData </g><g id="17">As</g><g id="18"> </g><g id="19">MouseEvent</g><g id="20">)<x id="21"/>  </g><g id="22">' Your code<x id="23"/></g><g id="24">End Sub<x id="25"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1606" xml:space="preserve">
<source xml:lang="en"><g id="1">MouseReleased</g><g id="2"> <g id="3">(EventData </g></g><g id="4">As</g><g id="5"> </g><g id="6">MouseEvent</g><g id="7">)<x id="8"/></g>Event raised when the user releases the node.<x id="9"/>Similar to ACTION_UP in B4A Touch events. <x id="10"/>Example:<x id="11"/><g id="12">Private</g><g id="13"> </g><g id="14">Sub</g><g id="15"> <g id="16">Pane1_MouseReleased</g> (EventData </g><g id="17">As</g><g id="18"> </g><g id="19">MouseEvent</g><g id="20">)<x id="21"/>  </g><g id="22">' Your code<x id="23"/></g><g id="24">End Sub<x id="25"/></g></source>
<target xml:lang="zh"><g id="1">MouseReleased</g><g id="2"> <g id="3">(EventData </g></g><g id="4">As</g><g id="5"> </g><g id="6">MouseEvent</g><g id="7">)<x id="8"/></g>Event raised when the user releases the node.<x id="9"/>Similar to ACTION_UP in B4A Touch events. <x id="10"/>Example:<x id="11"/><g id="12">Private</g><g id="13"> </g><g id="14">Sub</g><g id="15"> <g id="16">Pane1_MouseReleased</g> (EventData </g><g id="17">As</g><g id="18"> </g><g id="19">MouseEvent</g><g id="20">)<x id="21"/>  </g><g id="22">' Your code<x id="23"/></g><g id="24">End Sub<x id="25"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1607" xml:space="preserve">
<source xml:lang="en"><g id="1">MouseEvent</g><x id="2"/>Data includes in the MouseEvent object:</source>
<target xml:lang="zh"><g id="1">MouseEvent</g><x id="2"/>Data includes in the MouseEvent object:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1608" xml:space="preserve">
<source xml:lang="en"><g id="1">ClickCount</g><x id="2"/>Returns the number of clicks associated with this event.</source>
<target xml:lang="zh"><g id="1">ClickCount</g><x id="2"/>Returns the number of clicks associated with this event.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1609" xml:space="preserve">
<source xml:lang="en"><g id="1">Consume</g><x id="2"/>Consumes the current event and prevent it from being handled by the nodes parent.</source>
<target xml:lang="zh"><g id="1">Consume</g><x id="2"/>Consumes the current event and prevent it from being handled by the nodes parent.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1610" xml:space="preserve">
<source xml:lang="en"><g id="1">MiddleButtonDown</g><x id="2"/>Returns true if the middle button is currently down.</source>
<target xml:lang="zh"><g id="1">MiddleButtonDown</g><x id="2"/>Returns true if the middle button is currently down.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1611" xml:space="preserve">
<source xml:lang="en"><g id="1">MiddleButtonPressed</g><x id="2"/>Returns true if the middle button was responsible for raising the current click event.</source>
<target xml:lang="zh"><g id="1">MiddleButtonPressed</g><x id="2"/>Returns true if the middle button was responsible for raising the current click event.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1612" xml:space="preserve">
<source xml:lang="en"><g id="1">PrimaryButtonDown</g><x id="2"/>Returns true if the primary button is currently down.</source>
<target xml:lang="zh"><g id="1">PrimaryButtonDown</g><x id="2"/>Returns true if the primary button is currently down.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1613" xml:space="preserve">
<source xml:lang="en"><g id="1">PrimaryButtonPressed</g><x id="2"/>Returns true if the primary button was responsible for raising the current click event.</source>
<target xml:lang="zh"><g id="1">PrimaryButtonPressed</g><x id="2"/>Returns true if the primary button was responsible for raising the current click event.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1614" xml:space="preserve">
<source xml:lang="en"><g id="1">SecondaryButtonDown</g><x id="2"/>Returns true if the secondary button is currently down.</source>
<target xml:lang="zh"><g id="1">SecondaryButtonDown</g><x id="2"/>Returns true if the secondary button is currently down.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1615" xml:space="preserve">
<source xml:lang="en"><g id="1">SecondaryButtonPressed</g><x id="2"/>Returns true if the secondary button was responsible for raising the current click event.</source>
<target xml:lang="zh"><g id="1">SecondaryButtonPressed</g><x id="2"/>Returns true if the secondary button was responsible for raising the current click event.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1616" xml:space="preserve">
<source xml:lang="en"><g id="1">X<x id="2"/></g>Returns the X coordinate related to the node bounds.</source>
<target xml:lang="zh"><g id="1">X<x id="2"/></g>Returns the X coordinate related to the node bounds.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1617" xml:space="preserve">
<source xml:lang="en"><g id="1">Y<x id="2"/></g>Returns the Y coordinate related to the node bounds.<x id="3"/></source>
<target xml:lang="zh"><g id="1">Y<x id="2"/></g>Returns the Y coordinate related to the node bounds.<x id="3"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1618" xml:space="preserve">
<source xml:lang="en"><g id="1">Touch<x id="2"/></g><g id="3">(Action </g><g id="4">As</g><g id="5"> </g><g id="6">Int</g><g id="7">, X </g><g id="8">As</g><g id="9"> </g><g id="10">Float</g><g id="11">, Y </g><g id="12">As</g><g id="13"> </g><g id="14">Float</g><g id="15">)<x id="16"/></g>Event raised when the user ‘touches’ the screen. <x id="17"/>This event is similar to the Touch events in B4A and B4i.<x id="18"/>Three different actions are handled:<x id="19"/>-  Pane1.<g id="20">TOUCH_</g>ACTION_DOWN, the user touches the screen.<x id="21"/>-  Pane1.<g id="22">TOUCH_</g>ACTION_MOVE, the user moves the finger without leaving the screen.<x id="23"/>-  Pane1.<g id="24">TOUCH_</g>ACTION_UP,<x id="25"/>  the user leaves the screen.<x id="26"/>The X an Y coordinates of the mouse cursor position are given.<x id="27"/>Example:<x id="28"/><g id="29">Sub </g><g id="30">Pane1_Touch</g><g id="31"> (Action </g><g id="32">As</g><g id="33"> </g><g id="34">Int</g><g id="35">, X </g><g id="36">As</g><g id="37"> </g><g id="38">Float</g><g id="39">, Y </g><g id="40">As</g><g id="41"> </g><g id="42">Float</g><g id="43">)<x id="44"/>  </g><g id="45">Select</g><g id="46"> Action<x id="47"/>  </g><g id="48">Case</g><g id="49"> </g><g id="50">Pane1</g><g id="51">.TOUCH_ACTION_DOWN<x id="52"/>    </g><g id="53">' Your code for DOWN action<x id="54"/>  </g><g id="55">Case</g><g id="56"> </g><g id="57">Pane1</g><g id="58">.TOUCH_ACTION_MOVE<x id="59"/>    </g><g id="60">' Your code for MOVE action</g><g id="61"><x id="62"/>  </g><g id="63">Case</g><g id="64"> </g><g id="65">Pane1</g><g id="66">.TOUCH_ACTION_UP<x id="67"/>    </g><g id="68">' Your code for UP action</g><g id="69"><x id="70"/>  </g><g id="71">End</g><g id="72"> </g><g id="73">Select<x id="74"/>End Sub</g><x id="75"/>or<x id="76"/><g id="77">Sub </g><g id="78">Pane1_Touch</g><g id="79"> (Action </g><g id="80">As</g><g id="81"> </g><g id="82">Int</g><g id="83">, X </g><g id="84">As</g><g id="85"> </g><g id="86">Float</g><g id="87">, Y </g><g id="88">As</g><g id="89"> </g><g id="90">Float</g><g id="91">)<x id="92"/>  </g><g id="93">Select</g><g id="94"> Action<x id="95"/>  </g><g id="96">Case</g><g id="97"> 0  </g><g id="98">'DOWN</g><g id="99"><x id="100"/>    </g><g id="101">' Your code for DOWN action<x id="102"/>  </g><g id="103">Case</g><g id="104"> </g><g id="105">2  </g><g id="106">'MOVE</g><g id="107"><x id="108"/>    </g><g id="109">' Your code for MOVE action</g><g id="110"><x id="111"/>  </g><g id="112">Case</g><g id="113"> 1  </g><g id="114">'UP</g><g id="115"><x id="116"/>    </g><g id="117">' Your code for UP action</g><g id="118"><x id="119"/>  </g><g id="120">End</g><g id="121"> </g><g id="122">Select<x id="123"/>End Sub<x id="124"/></g></source>
<target xml:lang="zh"><g id="1">Touch<x id="2"/></g><g id="3">(Action </g><g id="4">As</g><g id="5"> </g><g id="6">Int</g><g id="7">, X </g><g id="8">As</g><g id="9"> </g><g id="10">Float</g><g id="11">, Y </g><g id="12">As</g><g id="13"> </g><g id="14">Float</g><g id="15">)<x id="16"/></g>Event raised when the user ‘touches’ the screen. <x id="17"/>This event is similar to the Touch events in B4A and B4i.<x id="18"/>Three different actions are handled:<x id="19"/>-  Pane1.<g id="20">TOUCH_</g>ACTION_DOWN, the user touches the screen.<x id="21"/>-  Pane1.<g id="22">TOUCH_</g>ACTION_MOVE, the user moves the finger without leaving the screen.<x id="23"/>-  Pane1.<g id="24">TOUCH_</g>ACTION_UP,<x id="25"/>  the user leaves the screen.<x id="26"/>The X an Y coordinates of the mouse cursor position are given.<x id="27"/>Example:<x id="28"/><g id="29">Sub </g><g id="30">Pane1_Touch</g><g id="31"> (Action </g><g id="32">As</g><g id="33"> </g><g id="34">Int</g><g id="35">, X </g><g id="36">As</g><g id="37"> </g><g id="38">Float</g><g id="39">, Y </g><g id="40">As</g><g id="41"> </g><g id="42">Float</g><g id="43">)<x id="44"/>  </g><g id="45">Select</g><g id="46"> Action<x id="47"/>  </g><g id="48">Case</g><g id="49"> </g><g id="50">Pane1</g><g id="51">.TOUCH_ACTION_DOWN<x id="52"/>    </g><g id="53">' Your code for DOWN action<x id="54"/>  </g><g id="55">Case</g><g id="56"> </g><g id="57">Pane1</g><g id="58">.TOUCH_ACTION_MOVE<x id="59"/>    </g><g id="60">' Your code for MOVE action</g><g id="61"><x id="62"/>  </g><g id="63">Case</g><g id="64"> </g><g id="65">Pane1</g><g id="66">.TOUCH_ACTION_UP<x id="67"/>    </g><g id="68">' Your code for UP action</g><g id="69"><x id="70"/>  </g><g id="71">End</g><g id="72"> </g><g id="73">Select<x id="74"/>End Sub</g><x id="75"/>or<x id="76"/><g id="77">Sub </g><g id="78">Pane1_Touch</g><g id="79"> (Action </g><g id="80">As</g><g id="81"> </g><g id="82">Int</g><g id="83">, X </g><g id="84">As</g><g id="85"> </g><g id="86">Float</g><g id="87">, Y </g><g id="88">As</g><g id="89"> </g><g id="90">Float</g><g id="91">)<x id="92"/>  </g><g id="93">Select</g><g id="94"> Action<x id="95"/>  </g><g id="96">Case</g><g id="97"> 0  </g><g id="98">'DOWN</g><g id="99"><x id="100"/>    </g><g id="101">' Your code for DOWN action<x id="102"/>  </g><g id="103">Case</g><g id="104"> </g><g id="105">2  </g><g id="106">'MOVE</g><g id="107"><x id="108"/>    </g><g id="109">' Your code for MOVE action</g><g id="110"><x id="111"/>  </g><g id="112">Case</g><g id="113"> 1  </g><g id="114">'UP</g><g id="115"><x id="116"/>    </g><g id="117">' Your code for UP action</g><g id="118"><x id="119"/>  </g><g id="120">End</g><g id="121"> </g><g id="122">Select<x id="123"/>End Sub<x id="124"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1620" xml:space="preserve">
<source xml:lang="en">B4R</source>
<target xml:lang="zh">B4R</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1621" xml:space="preserve">
<source xml:lang="en">In B4R, the Pin and <g id="1">Timer</g> objects are the only ones raising an event:</source>
<target xml:lang="zh">In B4R, the Pin and <g id="1">Timer</g> objects are the only ones raising an event:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1622" xml:space="preserve">
<source xml:lang="en">Pin<x id="1"/><g id="2">StateChanged </g>(<g id="3">State As Boolean)   E</g>vent raised when the pin changes its state.<x id="4"/>Example:<x id="5"/><g id="6">Sub </g><g id="7">Pin1_StateChanged</g><g id="8">(State As Boolean)</g><g id="9"><x id="10"/>  </g><g id="11">' Your code<x id="12"/></g><g id="13">End Sub<x id="14"/></g></source>
<target xml:lang="zh">Pin<x id="1"/><g id="2">StateChanged </g>(<g id="3">State As Boolean)   E</g>vent raised when the pin changes its state.<x id="4"/>Example:<x id="5"/><g id="6">Sub </g><g id="7">Pin1_StateChanged</g><g id="8">(State As Boolean)</g><g id="9"><x id="10"/>  </g><g id="11">' Your code<x id="12"/></g><g id="13">End Sub<x id="14"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1623" xml:space="preserve">
<source xml:lang="en">Timer<x id="1"/><g id="2">Tick</g><x id="3"/>Event raised at every given interval<x id="4"/>Example:<x id="5"/><g id="6">Private</g><g id="7"> Timer1 </g><g id="8">As</g><g id="9"> </g><g id="10">Timer<x id="11"/></g><g id="12">Timer1.Initialize(</g><g id="13">"Timer1_Tick"</g><g id="14">,</g><g id="15">1000</g><g id="16">)</g><g id="17"><x id="18"/>Sub </g><g id="19">Timer1_Tick</g><g id="20"><x id="21"/>  </g><g id="22">' Your code<x id="23"/></g><g id="24">End Sub<x id="25"/></g><x id="26"/>Be aware that in B4R the initialize method is different from the other B4X products.<x id="27"/>You must declare the full sub name like <g id="28">"Timer1_Tick"</g><g id="29">,</g> and not <g id="30">"Timer1"</g> like in the other products.</source>
<target xml:lang="zh">Timer<x id="1"/><g id="2">Tick</g><x id="3"/>Event raised at every given interval<x id="4"/>Example:<x id="5"/><g id="6">Private</g><g id="7"> Timer1 </g><g id="8">As</g><g id="9"> </g><g id="10">Timer<x id="11"/></g><g id="12">Timer1.Initialize(</g><g id="13">"Timer1_Tick"</g><g id="14">,</g><g id="15">1000</g><g id="16">)</g><g id="17"><x id="18"/>Sub </g><g id="19">Timer1_Tick</g><g id="20"><x id="21"/>  </g><g id="22">' Your code<x id="23"/></g><g id="24">End Sub<x id="25"/></g><x id="26"/>Be aware that in B4R the initialize method is different from the other B4X products.<x id="27"/>You must declare the full sub name like <g id="28">"Timer1_Tick"</g><g id="29">,</g> and not <g id="30">"Timer1"</g> like in the other products.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1625" xml:space="preserve">
<source xml:lang="en">User interface summary</source>
<target xml:lang="zh">User interface summary</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1626" xml:space="preserve">
<source xml:lang="en">The ‘standard’ user interface objects.</source>
<target xml:lang="zh">The ‘standard’ user interface objects.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1627" xml:space="preserve">
<source xml:lang="en">This shows the difference between the three operating systems.</source>
<target xml:lang="zh">This shows the difference between the three operating systems.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1628" xml:space="preserve">
<source xml:lang="en">Some views / nodes which don’t exist as standard objects can exis as CustomViews in other operating systems. You should look in the forums.</source>
<target xml:lang="zh">Some views / nodes which don’t exist as standard objects can exis as CustomViews in other operating systems. You should look in the forums.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1629" xml:space="preserve">
<source xml:lang="en">View / node</source>
<target xml:lang="zh">View / node</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1630" xml:space="preserve">
<source xml:lang="en">B4A</source>
<target xml:lang="zh">B4A</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1631" xml:space="preserve">
<source xml:lang="en">B4i</source>
<target xml:lang="zh">B4i</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1632" xml:space="preserve">
<source xml:lang="en">B4J</source>
<target xml:lang="zh">B4J</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1633" xml:space="preserve">
<source xml:lang="en">Activity</source>
<target xml:lang="zh">Activity</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1634" xml:space="preserve">
<source xml:lang="en">Button</source>
<target xml:lang="zh">Button</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1635" xml:space="preserve">
<source xml:lang="en">CheckBox</source>
<target xml:lang="zh">CheckBox</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1636" xml:space="preserve">
<source xml:lang="en">EditText</source>
<target xml:lang="zh">EditText</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1637" xml:space="preserve">
<source xml:lang="en">HorizontalScrollView</source>
<target xml:lang="zh">HorizontalScrollView</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1638" xml:space="preserve">
<source xml:lang="en">ImageView</source>
<target xml:lang="zh">ImageView</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1639" xml:space="preserve">
<source xml:lang="en">Label</source>
<target xml:lang="zh">Label</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1640" xml:space="preserve">
<source xml:lang="en">ListView</source>
<target xml:lang="zh">ListView</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1641" xml:space="preserve">
<source xml:lang="en">Panel</source>
<target xml:lang="zh">Panel</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1642" xml:space="preserve">
<source xml:lang="en">RadioButton</source>
<target xml:lang="zh">RadioButton</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1643" xml:space="preserve">
<source xml:lang="en">ScrollView</source>
<target xml:lang="zh">ScrollView</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1644" xml:space="preserve">
<source xml:lang="en">SeekBar</source>
<target xml:lang="zh">SeekBar</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1645" xml:space="preserve">
<source xml:lang="en">Spinner</source>
<target xml:lang="zh">Spinner</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1646" xml:space="preserve">
<source xml:lang="en">TabHost</source>
<target xml:lang="zh">TabHost</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1647" xml:space="preserve">
<source xml:lang="en">ToggleButton</source>
<target xml:lang="zh">ToggleButton</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1648" xml:space="preserve">
<source xml:lang="en">WebView</source>
<target xml:lang="zh">WebView</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1649" xml:space="preserve">
<source xml:lang="en">TextField</source>
<target xml:lang="zh">TextField</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1650" xml:space="preserve">
<source xml:lang="en">TextView</source>
<target xml:lang="zh">TextView</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1651" xml:space="preserve">
<source xml:lang="en">ScrollView different from B4A  2D</source>
<target xml:lang="zh">ScrollView different from B4A  2D</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1652" xml:space="preserve">
<source xml:lang="en">Slider</source>
<target xml:lang="zh">Slider</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1653" xml:space="preserve">
<source xml:lang="en">Picker</source>
<target xml:lang="zh">Picker</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1654" xml:space="preserve">
<source xml:lang="en">Stepper</source>
<target xml:lang="zh">Stepper</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1655" xml:space="preserve">
<source xml:lang="en">Switch</source>
<target xml:lang="zh">Switch</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1656" xml:space="preserve">
<source xml:lang="en">SegmentedControl</source>
<target xml:lang="zh">SegmentedControl</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1657" xml:space="preserve">
<source xml:lang="en">Canvas  a node on its own</source>
<target xml:lang="zh">Canvas  a node on its own</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1658" xml:space="preserve">
<source xml:lang="en">ChoiceBox</source>
<target xml:lang="zh">ChoiceBox</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1659" xml:space="preserve">
<source xml:lang="en">ComboBox</source>
<target xml:lang="zh">ComboBox</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1660" xml:space="preserve">
<source xml:lang="en">Pane  similar to Panel in B4A and B4i</source>
<target xml:lang="zh">Pane  similar to Panel in B4A and B4i</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1661" xml:space="preserve">
<source xml:lang="en">ScrollPane  similar to ScrollView</source>
<target xml:lang="zh">ScrollPane  similar to ScrollView</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1662" xml:space="preserve">
<source xml:lang="en">TabPane</source>
<target xml:lang="zh">TabPane</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1663" xml:space="preserve">
<source xml:lang="en">TextArea</source>
<target xml:lang="zh">TextArea</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1664" xml:space="preserve">
<source xml:lang="en"> <x id="1"/>Libraries</source>
<target xml:lang="zh"> <x id="1"/>Libraries</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1665" xml:space="preserve">
<source xml:lang="en">Libraries add more objects and functionalities to B4X.</source>
<target xml:lang="zh">Libraries add more objects and functionalities to B4X.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1666" xml:space="preserve">
<source xml:lang="en">Some of these libraries are shipped with the B4X products and are part of the standard development system.</source>
<target xml:lang="zh">Some of these libraries are shipped with the B4X products and are part of the standard development system.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1667" xml:space="preserve">
<source xml:lang="en">Other, often developed by users, can be downloaded (by registered users only) to add supplementary functionalities to the B4X development environments. </source>
<target xml:lang="zh">Other, often developed by users, can be downloaded (by registered users only) to add supplementary functionalities to the B4X development environments. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1668" xml:space="preserve">
<source xml:lang="en">When you need a library, you have to:</source>
<target xml:lang="zh">When you need a library, you have to:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1669" xml:space="preserve">
<source xml:lang="en">Check it in the Libs Tab, if you already have the library.</source>
<target xml:lang="zh">Check it in the Libs Tab, if you already have the library.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1670" xml:space="preserve">
<source xml:lang="en">For additional libraries, check if it's the latest version.<x id="1"/>You can check the versions in the documentation page<x id="2"/><g id="3">B4A</g>, <g id="4">B4i</g>, <g id="5">B4J</g>, <g id="6">B4R</g><x id="7"/>To find the library files use a query like <g id="8">http://www.b4x.com/search?query=betterdialogs+library</g> <x id="9"/>in your internet browser.</source>
<target xml:lang="zh">For additional libraries, check if it's the latest version.<x id="1"/>You can check the versions in the documentation page<x id="2"/><g id="3">B4A</g>, <g id="4">B4i</g>, <g id="5">B4J</g>, <g id="6">B4R</g><x id="7"/>To find the library files use a query like <g id="8">http://www.b4x.com/search?query=betterdialogs+library</g> <x id="9"/>in your internet browser.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1671" xml:space="preserve">
<source xml:lang="en">If <g id="1">yes</g>, then check the library in the list to select it.<x id="2"/><x id="3"/><x id="4"/></source>
<target xml:lang="zh">If <g id="1">yes</g>, then check the library in the list to select it.<x id="2"/><x id="3"/><x id="4"/></target>
</trans-unit>
<trans-unit id="N8523F2F5-sub1" xml:space="preserve">
<source xml:lang="en">Image 1862</source>
<target xml:lang="zh">Image 1862</target>
</trans-unit>
<trans-unit id="N8523F2F5-sub2" xml:space="preserve">
<source xml:lang="en">Picture 17</source>
<target xml:lang="zh">Picture 17</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1672" xml:space="preserve">
<source xml:lang="en">If <g id="1">no</g>, download the library, unzip it and copy the<x id="2"/>&lt;LibraryName>.jar and &lt;LibraryName>.xml files to the additional libraries folder for the give product.<x id="3"/>If it’s a <g id="4">B4XLibrary</g>, copy the &lt;LibraryName>.b4xlib file To AdditionalLibraries\B4X folder.</source>
<target xml:lang="zh">If <g id="1">no</g>, download the library, unzip it and copy the<x id="2"/>&lt;LibraryName>.jar and &lt;LibraryName>.xml files to the additional libraries folder for the give product.<x id="3"/>If it’s a <g id="4">B4XLibrary</g>, copy the &lt;LibraryName>.b4xlib file To AdditionalLibraries\B4X folder.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1673" xml:space="preserve">
<source xml:lang="en">Right click in the Lib area and click on <x id="1"/> and check the library in the list to select it.<x id="2"/><x id="3"/></source>
<target xml:lang="zh">Right click in the Lib area and click on <x id="1"/> and check the library in the list to select it.<x id="2"/><x id="3"/></target>
</trans-unit>
<trans-unit id="N8523F2F7-sub1" xml:space="preserve">
<source xml:lang="en">Image 156</source>
<target xml:lang="zh">Image 156</target>
</trans-unit>
<trans-unit id="N8523F2F7-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N8523F2F7-sub3" xml:space="preserve">
<source xml:lang="en">Image 153</source>
<target xml:lang="zh">Image 153</target>
</trans-unit>
<trans-unit id="N8523F2F7-sub4" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1674" xml:space="preserve">
<source xml:lang="en">Standard libraries</source>
<target xml:lang="zh">Standard libraries</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1675" xml:space="preserve">
<source xml:lang="en">The standard B4X libraries are saved in the Libraries folder in the B4X program folder.</source>
<target xml:lang="zh">The standard B4X libraries are saved in the Libraries folder in the B4X program folder.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1676" xml:space="preserve">
<source xml:lang="en">Normally in: </source>
<target xml:lang="zh">Normally in: </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1677" xml:space="preserve">
<source xml:lang="en">C:\Program Files\Anywhere Software\B4A\Libraries</source>
<target xml:lang="zh">C:\Program Files\Anywhere Software\B4A\Libraries</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1678" xml:space="preserve">
<source xml:lang="en">C:\Program Files\Anywhere Software\B4i\Libraries</source>
<target xml:lang="zh">C:\Program Files\Anywhere Software\B4i\Libraries</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1679" xml:space="preserve">
<source xml:lang="en">C:\Program Files\Anywhere Software\B4J\Libraries</source>
<target xml:lang="zh">C:\Program Files\Anywhere Software\B4J\Libraries</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1680" xml:space="preserve">
<source xml:lang="en">C:\Program Files\Anywhere Software\B4R\Libraries</source>
<target xml:lang="zh">C:\Program Files\Anywhere Software\B4R\Libraries</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1681" xml:space="preserve">
<source xml:lang="en">Additional libraries folder</source>
<target xml:lang="zh">Additional libraries folder</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1682" xml:space="preserve">
<source xml:lang="en">Additional Libraries are composed of two files: an <g id="1">xxx.jar</g> and an <g id="2">xxx.xml</g> file.</source>
<target xml:lang="zh">Additional Libraries are composed of two files: an <g id="1">xxx.jar</g> and an <g id="2">xxx.xml</g> file.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1683" xml:space="preserve">
<source xml:lang="en">B4X libraries have only one file <g id="1">xxx.b4xlib</g>.</source>
<target xml:lang="zh">B4X libraries have only one file <g id="1">xxx.b4xlib</g>.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1684" xml:space="preserve">
<source xml:lang="en">For the additional libraries it is necessary to setup a special folder to save them somewhere else. </source>
<target xml:lang="zh">For the additional libraries it is necessary to setup a special folder to save them somewhere else. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1685" xml:space="preserve">
<source xml:lang="en">This folder must have the following structure:</source>
<target xml:lang="zh">This folder must have the following structure:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1686" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N8523F319-sub1" xml:space="preserve">
<source xml:lang="en">Image 1885</source>
<target xml:lang="zh">Image 1885</target>
</trans-unit>
<trans-unit id="N8523F319-sub2" xml:space="preserve">
<source xml:lang="en">Picture 15</source>
<target xml:lang="zh">Picture 15</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1687" xml:space="preserve">
<source xml:lang="en">Folder for B4A additional libraries.</source>
<target xml:lang="zh">Folder for B4A additional libraries.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1688" xml:space="preserve">
<source xml:lang="en">Folder for B4i additional libraries.</source>
<target xml:lang="zh">Folder for B4i additional libraries.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1689" xml:space="preserve">
<source xml:lang="en">Folder for B4J additional libraries.</source>
<target xml:lang="zh">Folder for B4J additional libraries.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1690" xml:space="preserve">
<source xml:lang="en">Folder for B4R additional libraries.</source>
<target xml:lang="zh">Folder for B4R additional libraries.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1691" xml:space="preserve">
<source xml:lang="en">Folder for <g id="1">B4X libraries</g>.</source>
<target xml:lang="zh">Folder for <g id="1">B4X libraries</g>.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1692" xml:space="preserve">
<source xml:lang="en">Folder for B4X libraries XML files.</source>
<target xml:lang="zh">Folder for B4X libraries XML files.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1693" xml:space="preserve">
<source xml:lang="en">One subfolder for each product: B4A, B4i, B4J, B4R and another B4X for B4X libraries.</source>
<target xml:lang="zh">One subfolder for each product: B4A, B4i, B4J, B4R and another B4X for B4X libraries.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1694" xml:space="preserve">
<source xml:lang="en">When you install a new version of a B4X product, all standard libraries are automatically updated, but the additional libraries are not included. The advantage of the special folder is that you don't need to care about them because this folder is not affected when you install the new version of B4X.</source>
<target xml:lang="zh">When you install a new version of a B4X product, all standard libraries are automatically updated, but the additional libraries are not included. The advantage of the special folder is that you don't need to care about them because this folder is not affected when you install the new version of B4X.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1695" xml:space="preserve">
<source xml:lang="en">The additional libraries are not systematically updated with new version of B4X.</source>
<target xml:lang="zh">The additional libraries are not systematically updated with new version of B4X.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1696" xml:space="preserve">
<source xml:lang="en">When the IDE starts, it looks first for the available libraries in the Libraries folder of B4X and then in the additional libraries folders.</source>
<target xml:lang="zh">When the IDE starts, it looks first for the available libraries in the Libraries folder of B4X and then in the additional libraries folders.</target>
</trans-unit>
<trans-unit id="N8523F338-sub1" xml:space="preserve">
<source xml:lang="en">Image 115</source>
<target xml:lang="zh">Image 115</target>
</trans-unit>
<trans-unit id="N8523F338-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1697" xml:space="preserve">
<source xml:lang="en">To setup the special additional libraries folder, click in the IDE menu on Tools / Configure Paths.</source>
<target xml:lang="zh">To setup the special additional libraries folder, click in the IDE menu on Tools / Configure Paths.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1698" xml:space="preserve">
<source xml:lang="en">In my system, I added a B4XlibXMLFiles folder for XML help files.</source>
<target xml:lang="zh">In my system, I added a B4XlibXMLFiles folder for XML help files.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1699" xml:space="preserve">
<source xml:lang="en">The standard and additional libraries have an XML file. B4X Libraries do not.</source>
<target xml:lang="zh">The standard and additional libraries have an XML file. B4X Libraries do not.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1700" xml:space="preserve">
<source xml:lang="en">But, if you use the <g id="1">B4X Help Viewer</g> you would be interested in having these help files if they are available.</source>
<target xml:lang="zh">But, if you use the <g id="1">B4X Help Viewer</g> you would be interested in having these help files if they are available.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1701" xml:space="preserve">
<source xml:lang="en">You can create xml files for b4xlib libraries with this tool: <g id="1">b4xlib – XML generation</g>.</source>
<target xml:lang="zh">You can create xml files for b4xlib libraries with this tool: <g id="1">b4xlib – XML generation</g>.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1702" xml:space="preserve">
<source xml:lang="en">Paths configuration B4A</source>
<target xml:lang="zh">Paths configuration B4A</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1703" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N8523F5DF-sub1" xml:space="preserve">
<source xml:lang="en">Image 394</source>
<target xml:lang="zh">Image 394</target>
</trans-unit>
<trans-unit id="N8523F5DF-sub2" xml:space="preserve">
<source xml:lang="en">Picture 34</source>
<target xml:lang="zh">Picture 34</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1704" xml:space="preserve">
<source xml:lang="en">Enter the folder names and click on  <x id="1"/>.</source>
<target xml:lang="zh">Enter the folder names and click on  <x id="1"/>.</target>
</trans-unit>
<trans-unit id="N8523F5E0-sub1" xml:space="preserve">
<source xml:lang="en">Image 500</source>
<target xml:lang="zh">Image 500</target>
</trans-unit>
<trans-unit id="N8523F5E0-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1705" xml:space="preserve">
<source xml:lang="en">Paths configuration B4i</source>
<target xml:lang="zh">Paths configuration B4i</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1706" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N8523F5E2-sub1" xml:space="preserve">
<source xml:lang="en">Image 395</source>
<target xml:lang="zh">Image 395</target>
</trans-unit>
<trans-unit id="N8523F5E2-sub2" xml:space="preserve">
<source xml:lang="en">Picture 36</source>
<target xml:lang="zh">Picture 36</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1707" xml:space="preserve">
<source xml:lang="en">Paths configuration B4J</source>
<target xml:lang="zh">Paths configuration B4J</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1708" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N8523F5E4-sub1" xml:space="preserve">
<source xml:lang="en">Image 292</source>
<target xml:lang="zh">Image 292</target>
</trans-unit>
<trans-unit id="N8523F5E4-sub2" xml:space="preserve">
<source xml:lang="en">Picture 7</source>
<target xml:lang="zh">Picture 7</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1709" xml:space="preserve">
<source xml:lang="en">Paths configuration B4R</source>
<target xml:lang="zh">Paths configuration B4R</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1710" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N8523F5FB-sub1" xml:space="preserve">
<source xml:lang="en">Image 328</source>
<target xml:lang="zh">Image 328</target>
</trans-unit>
<trans-unit id="N8523F5FB-sub2" xml:space="preserve">
<source xml:lang="en">Picture 16</source>
<target xml:lang="zh">Picture 16</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1711" xml:space="preserve">
<source xml:lang="en">B4X Libraries  *.b4xlib</source>
<target xml:lang="zh">B4X Libraries  *.b4xlib</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1712" xml:space="preserve">
<source xml:lang="en">B4X libraries are cross platform libraries introduced in B4A 8.80, B4i 5.50 and B4J 7.00.</source>
<target xml:lang="zh">B4X libraries are cross platform libraries introduced in B4A 8.80, B4i 5.50 and B4J 7.00.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1713" xml:space="preserve">
<source xml:lang="en">These libraries contain cross platform classes which don’t need to be compiled as libraries.</source>
<target xml:lang="zh">These libraries contain cross platform classes which don’t need to be compiled as libraries.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1714" xml:space="preserve">
<source xml:lang="en">A B4X library is a simple zip file with the following structure:</source>
<target xml:lang="zh">A B4X library is a simple zip file with the following structure:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1715" xml:space="preserve">
<source xml:lang="en">Code modules. All types are supported including Activities and Services.</source>
<target xml:lang="zh">Code modules. All types are supported including Activities and Services.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1716" xml:space="preserve">
<source xml:lang="en">Files, including layout files.</source>
<target xml:lang="zh">Files, including layout files.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1717" xml:space="preserve">
<source xml:lang="en">Optional manifest file with the following fields:</source>
<target xml:lang="zh">Optional manifest file with the following fields:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1718" xml:space="preserve">
<source xml:lang="en">Version</source>
<target xml:lang="zh">Version</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1719" xml:space="preserve">
<source xml:lang="en">Author</source>
<target xml:lang="zh">Author</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1720" xml:space="preserve">
<source xml:lang="en">DependsOn (list of required libraries), Supported Platforms. Fields can be shared between the platforms or be platform specific.<x id="1"/></source>
<target xml:lang="zh">DependsOn (list of required libraries), Supported Platforms. Fields can be shared between the platforms or be platform specific.<x id="1"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1721" xml:space="preserve">
<source xml:lang="en">Files and code modules can also be platform specific.</source>
<target xml:lang="zh">Files and code modules can also be platform specific.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1722" xml:space="preserve">
<source xml:lang="en">Creating a b4x library is very simple. You just need to create a zip file with these resources. The zip file extension should be b4xlib. That's all.<x id="1"/>Note that the source code can be extracted from a b4x library.<x id="2"/>b4x libraries appear like all other libraries in the Libraries tab.</source>
<target xml:lang="zh">Creating a b4x library is very simple. You just need to create a zip file with these resources. The zip file extension should be b4xlib. That's all.<x id="1"/>Note that the source code can be extracted from a b4x library.<x id="2"/>b4x libraries appear like all other libraries in the Libraries tab.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1723" xml:space="preserve">
<source xml:lang="en">Example: the AnotherDatePicker.b4xlib</source>
<target xml:lang="zh">Example: the AnotherDatePicker.b4xlib</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1724" xml:space="preserve">
<source xml:lang="en">The zip file structure:</source>
<target xml:lang="zh">The zip file structure:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1725" xml:space="preserve">
<source xml:lang="en">       </source>
<target xml:lang="zh">       </target>
</trans-unit>
<trans-unit id="N8523F61F-sub1" xml:space="preserve">
<source xml:lang="en">Image 223</source>
<target xml:lang="zh">Image 223</target>
</trans-unit>
<trans-unit id="N8523F61F-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1726" xml:space="preserve">
<source xml:lang="en"><g id="1">Files</g> contains all the needed files, the three layout files in the example.</source>
<target xml:lang="zh"><g id="1">Files</g> contains all the needed files, the three layout files in the example.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1727" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N8523F621-sub1" xml:space="preserve">
<source xml:lang="en">Image 324</source>
<target xml:lang="zh">Image 324</target>
</trans-unit>
<trans-unit id="N8523F621-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1728" xml:space="preserve">
<source xml:lang="en"><g id="1">AnotherDatePicker.bas</g> is the crossplatform Custom View file.</source>
<target xml:lang="zh"><g id="1">AnotherDatePicker.bas</g> is the crossplatform Custom View file.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1729" xml:space="preserve">
<source xml:lang="en"><g id="1">Manifest.txt</g> contains:</source>
<target xml:lang="zh"><g id="1">Manifest.txt</g> contains:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1730" xml:space="preserve">
<source xml:lang="en"><g id="1">Version=2.00</g><x id="2"/>version number.<x id="3"/></source>
<target xml:lang="zh"><g id="1">Version=2.00</g><x id="2"/>version number.<x id="3"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1731" xml:space="preserve">
<source xml:lang="en"><g id="1">B4J.DependsOn=jXUI, jDateUtils</g><x id="2"/>libraries used for B4J.</source>
<target xml:lang="zh"><g id="1">B4J.DependsOn=jXUI, jDateUtils</g><x id="2"/>libraries used for B4J.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1732" xml:space="preserve">
<source xml:lang="en"><g id="1">B4A.DependsOn=XUI, DateUtils</g><x id="2"/>libraries used for B4A.</source>
<target xml:lang="zh"><g id="1">B4A.DependsOn=XUI, DateUtils</g><x id="2"/>libraries used for B4A.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1733" xml:space="preserve">
<source xml:lang="en"><g id="1">B4i.DependsOn=iXUI, iDateUtils</g><x id="2"/>libraries used for B4i.</source>
<target xml:lang="zh"><g id="1">B4i.DependsOn=iXUI, iDateUtils</g><x id="2"/>libraries used for B4i.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1734" xml:space="preserve">
<source xml:lang="en">Copy the xxx.b4xlib file to the AdditionalLibaries\B4X folder.</source>
<target xml:lang="zh">Copy the xxx.b4xlib file to the AdditionalLibaries\B4X folder.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1735" xml:space="preserve">
<source xml:lang="en">If there is an xxx.xml file, you must not save it there but in another folder. </source>
<target xml:lang="zh">If there is an xxx.xml file, you must not save it there but in another folder. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1736" xml:space="preserve">
<source xml:lang="en">B4XLibraries are explained in the <g id="1">B4X Custom Views Booklet</g>.</source>
<target xml:lang="zh">B4XLibraries are explained in the <g id="1">B4X Custom Views Booklet</g>.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1737" xml:space="preserve">
<source xml:lang="en">Load and update a Library</source>
<target xml:lang="zh">Load and update a Library</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1738" xml:space="preserve">
<source xml:lang="en">A list of the official and additional libraries with links to the relevant help documentation can be found on the B4X site in the:</source>
<target xml:lang="zh">A list of the official and additional libraries with links to the relevant help documentation can be found on the B4X site in the:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1739" xml:space="preserve">
<source xml:lang="en">B4A Documentation page: <g id="1">List of Libraries</g><g id="2">.</g></source>
<target xml:lang="zh">B4A Documentation page: <g id="1">List of Libraries</g><g id="2">.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1740" xml:space="preserve">
<source xml:lang="en">B4i Documentation page: <g id="1">List of Libraries</g><g id="2">.</g></source>
<target xml:lang="zh">B4i Documentation page: <g id="1">List of Libraries</g><g id="2">.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1741" xml:space="preserve">
<source xml:lang="en">B4J Documentation page: <g id="1">List of Libraries</g><g id="2">.</g></source>
<target xml:lang="zh">B4J Documentation page: <g id="1">List of Libraries</g><g id="2">.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1742" xml:space="preserve">
<source xml:lang="en">B4R Documentation page: <g id="1">List of Libraries</g><g id="2">.</g></source>
<target xml:lang="zh">B4R Documentation page: <g id="1">List of Libraries</g><g id="2">.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1743" xml:space="preserve">
<source xml:lang="en">To find the library files use a query like <g id="1">http://www.b4x.com/search?query=betterdialogs+library</g> </source>
<target xml:lang="zh">To find the library files use a query like <g id="1">http://www.b4x.com/search?query=betterdialogs+library</g> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1744" xml:space="preserve">
<source xml:lang="en">in your internet browser.</source>
<target xml:lang="zh">in your internet browser.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1745" xml:space="preserve">
<source xml:lang="en">To load or update a library follow the steps below:</source>
<target xml:lang="zh">To load or update a library follow the steps below:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1746" xml:space="preserve">
<source xml:lang="en">Download the library zip file somewhere.</source>
<target xml:lang="zh">Download the library zip file somewhere.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1747" xml:space="preserve">
<source xml:lang="en">Unzip it.</source>
<target xml:lang="zh">Unzip it.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1748" xml:space="preserve">
<source xml:lang="en">Copy the xxx.jar and xxx.xml files to the </source>
<target xml:lang="zh">Copy the xxx.jar and xxx.xml files to the </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1749" xml:space="preserve">
<source xml:lang="en">B4X Library folder for a standard B4X library</source>
<target xml:lang="zh">B4X Library folder for a standard B4X library</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1750" xml:space="preserve">
<source xml:lang="en"><g id="1">Additional libraries folder</g> for an additional library.</source>
<target xml:lang="zh"><g id="1">Additional libraries folder</g> for an additional library.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1751" xml:space="preserve">
<source xml:lang="en">Right click in the libraries list in the <g id="1">Lib Tab</g> and click on <x id="2"/> and select the library.<x id="3"/><x id="4"/></source>
<target xml:lang="zh">Right click in the libraries list in the <g id="1">Lib Tab</g> and click on <x id="2"/> and select the library.<x id="3"/><x id="4"/></target>
</trans-unit>
<trans-unit id="N8523F678-sub1" xml:space="preserve">
<source xml:lang="en">Image 157</source>
<target xml:lang="zh">Image 157</target>
</trans-unit>
<trans-unit id="N8523F678-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N8523F678-sub3" xml:space="preserve">
<source xml:lang="en">Image 158</source>
<target xml:lang="zh">Image 158</target>
</trans-unit>
<trans-unit id="N8523F678-sub4" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1752" xml:space="preserve">
<source xml:lang="en">Error message "Are you missing a library reference?"</source>
<target xml:lang="zh">Error message "Are you missing a library reference?"</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1753" xml:space="preserve">
<source xml:lang="en">If you get a message similar to this, it means that you forgot to check the specified library in the Lib Tab list !</source>
<target xml:lang="zh">If you get a message similar to this, it means that you forgot to check the specified library in the Lib Tab list !</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1754" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N8523F67B-sub1" xml:space="preserve">
<source xml:lang="en">Image 1864</source>
<target xml:lang="zh">Image 1864</target>
</trans-unit>
<trans-unit id="N8523F67B-sub2" xml:space="preserve">
<source xml:lang="en">Picture 19</source>
<target xml:lang="zh">Picture 19</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1755" xml:space="preserve">
<source xml:lang="en">String manipulation</source>
<target xml:lang="zh">String manipulation</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1756" xml:space="preserve">
<source xml:lang="en">B4A, B4i, B4J  String</source>
<target xml:lang="zh">B4A, B4i, B4J  String</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1757" xml:space="preserve">
<source xml:lang="en">B4A, B4i and B4J allow string manipulations like other Basic languages but with some differences.</source>
<target xml:lang="zh">B4A, B4i and B4J allow string manipulations like other Basic languages but with some differences.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1758" xml:space="preserve">
<source xml:lang="en">These manipulations can be done directly on a string.</source>
<target xml:lang="zh">These manipulations can be done directly on a string.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1759" xml:space="preserve">
<source xml:lang="en">Example:</source>
<target xml:lang="zh">Example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1760" xml:space="preserve">
<source xml:lang="en"><x id="1"/>txt = <g id="2">"123,234,45,23"</g></source>
<target xml:lang="zh"><x id="1"/>txt = <g id="2">"123,234,45,23"</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1761" xml:space="preserve">
<source xml:lang="en"><x id="1"/>txt = txt.Replace(<g id="2">","</g>, <g id="3">";"</g>)</source>
<target xml:lang="zh"><x id="1"/>txt = txt.Replace(<g id="2">","</g>, <g id="3">";"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1762" xml:space="preserve">
<source xml:lang="en">Result: <g id="1">123;234;45;23</g></source>
<target xml:lang="zh">Result: <g id="1">123;234;45;23</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1763" xml:space="preserve">
<source xml:lang="en">The different functions are:</source>
<target xml:lang="zh">The different functions are:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1764" xml:space="preserve">
<source xml:lang="en"><g id="1">CharAt(Index)</g><x id="2"/>Returns the character at the given index.</source>
<target xml:lang="zh"><g id="1">CharAt(Index)</g><x id="2"/>Returns the character at the given index.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1765" xml:space="preserve">
<source xml:lang="en"><g id="1">CompareTo(Other)</g><x id="2"/>Lexicographically compares the string with the Other string.</source>
<target xml:lang="zh"><g id="1">CompareTo(Other)</g><x id="2"/>Lexicographically compares the string with the Other string.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1766" xml:space="preserve">
<source xml:lang="en"><g id="1">Contains(SearchFor)</g><x id="2"/>Tests whether the string contains the given SearchFor string.</source>
<target xml:lang="zh"><g id="1">Contains(SearchFor)</g><x id="2"/>Tests whether the string contains the given SearchFor string.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1767" xml:space="preserve">
<source xml:lang="en"><g id="1">EndsWith(Suffix)</g><x id="2"/>Returns True if the string ends with the given Suffix substring.</source>
<target xml:lang="zh"><g id="1">EndsWith(Suffix)</g><x id="2"/>Returns True if the string ends with the given Suffix substring.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1768" xml:space="preserve">
<source xml:lang="en"><g id="1">EqualsIgnoreCase(Other)</g><x id="2"/>Returns True if both strings are equal ignoring their case.</source>
<target xml:lang="zh"><g id="1">EqualsIgnoreCase(Other)</g><x id="2"/>Returns True if both strings are equal ignoring their case.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1769" xml:space="preserve">
<source xml:lang="en"><g id="1">GetBytes(Charset)</g><x id="2"/>Encodes the Charset string into a new array of bytes.</source>
<target xml:lang="zh"><g id="1">GetBytes(Charset)</g><x id="2"/>Encodes the Charset string into a new array of bytes.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1770" xml:space="preserve">
<source xml:lang="en"><g id="1">IndexOf(SearchFor)</g><x id="2"/>Returns the index of the first occurrence of SearchFor in the    string. The index is 0 based. Returns -1 if no occurrence is found.</source>
<target xml:lang="zh"><g id="1">IndexOf(SearchFor)</g><x id="2"/>Returns the index of the first occurrence of SearchFor in the    string. The index is 0 based. Returns -1 if no occurrence is found.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1771" xml:space="preserve">
<source xml:lang="en"><g id="1">IndexOf2(SearchFor, Index)</g><x id="2"/>Returns the index of the first occurrence of SearchFor in the string. Starts searching from the given index. <x id="3"/>The index is 0 based. Returns -1 if no occurrence is found.</source>
<target xml:lang="zh"><g id="1">IndexOf2(SearchFor, Index)</g><x id="2"/>Returns the index of the first occurrence of SearchFor in the string. Starts searching from the given index. <x id="3"/>The index is 0 based. Returns -1 if no occurrence is found.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1772" xml:space="preserve">
<source xml:lang="en"><g id="1">LastIndexOf(SearchFor)</g><x id="2"/>Returns the index of the first occurrence of SearchFor in the string. The search starts at the end of the string and advances to the beginning. <x id="3"/>The index is 0 based. Returns -1 if no occurrence is found.</source>
<target xml:lang="zh"><g id="1">LastIndexOf(SearchFor)</g><x id="2"/>Returns the index of the first occurrence of SearchFor in the string. The search starts at the end of the string and advances to the beginning. <x id="3"/>The index is 0 based. Returns -1 if no occurrence is found.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1773" xml:space="preserve">
<source xml:lang="en"><g id="1">LastIndexOf2(SearchFor)</g><x id="2"/>Returns the index of the first occurrence of SearchFor in the string. The search starts at the given index and advances to the beginning. <x id="3"/>The index is 0 based. Returns -1 if no occurrence is found.</source>
<target xml:lang="zh"><g id="1">LastIndexOf2(SearchFor)</g><x id="2"/>Returns the index of the first occurrence of SearchFor in the string. The search starts at the given index and advances to the beginning. <x id="3"/>The index is 0 based. Returns -1 if no occurrence is found.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1774" xml:space="preserve">
<source xml:lang="en"><g id="1">Length</g><x id="2"/>Returns the length, number of characters, of the string.</source>
<target xml:lang="zh"><g id="1">Length</g><x id="2"/>Returns the length, number of characters, of the string.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1775" xml:space="preserve">
<source xml:lang="en"><g id="1">Replace(Target, Replacement)</g><x id="2"/>Returns a new string resulting from the replacement of all the occurrences of Target with Replacement.</source>
<target xml:lang="zh"><g id="1">Replace(Target, Replacement)</g><x id="2"/>Returns a new string resulting from the replacement of all the occurrences of Target with Replacement.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1776" xml:space="preserve">
<source xml:lang="en"><g id="1">StartsWith(Prefix)</g><x id="2"/>Returns True if this string starts with the given Prefix.</source>
<target xml:lang="zh"><g id="1">StartsWith(Prefix)</g><x id="2"/>Returns True if this string starts with the given Prefix.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1777" xml:space="preserve">
<source xml:lang="en"><g id="1">Substring(BeginIndex)</g><x id="2"/>Returns a new string which is a substring of the original string.<x id="3"/>The new string will include the character at BeginIndex and will extend to the end of the string.</source>
<target xml:lang="zh"><g id="1">Substring(BeginIndex)</g><x id="2"/>Returns a new string which is a substring of the original string.<x id="3"/>The new string will include the character at BeginIndex and will extend to the end of the string.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1778" xml:space="preserve">
<source xml:lang="en"><g id="1">Substring2(BeginIndex, EndIndex)<x id="2"/></g>Returns a new string which is a substring of the original string. The new string will include the character at BeginIndex and will extend to the character at EndIndex, not including the last character.<x id="3"/><g id="4">Note that EndIndex</g> is the end index and not the length like in other languages.</source>
<target xml:lang="zh"><g id="1">Substring2(BeginIndex, EndIndex)<x id="2"/></g>Returns a new string which is a substring of the original string. The new string will include the character at BeginIndex and will extend to the character at EndIndex, not including the last character.<x id="3"/><g id="4">Note that EndIndex</g> is the end index and not the length like in other languages.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1779" xml:space="preserve">
<source xml:lang="en"><g id="1">ToLowerCase</g><x id="2"/>Returns a new string which is the result of lower casing this string.</source>
<target xml:lang="zh"><g id="1">ToLowerCase</g><x id="2"/>Returns a new string which is the result of lower casing this string.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1780" xml:space="preserve">
<source xml:lang="en"><g id="1">ToUpperCase</g><x id="2"/>Returns a new string which is the result of upper casing this string.</source>
<target xml:lang="zh"><g id="1">ToUpperCase</g><x id="2"/>Returns a new string which is the result of upper casing this string.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1781" xml:space="preserve">
<source xml:lang="en"><g id="1">Trim</g><x id="2"/>Returns a copy of the original string without any leading or trailing white spaces.</source>
<target xml:lang="zh"><g id="1">Trim</g><x id="2"/>Returns a copy of the original string without any leading or trailing white spaces.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1782" xml:space="preserve">
<source xml:lang="en"><g id="1">Note:</g> The string functions are case sensitive.</source>
<target xml:lang="zh"><g id="1">Note:</g> The string functions are case sensitive.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1783" xml:space="preserve">
<source xml:lang="en">If you want to use case insensitive functions you should use either ToLowerCase or ToUpperCase.</source>
<target xml:lang="zh">If you want to use case insensitive functions you should use either ToLowerCase or ToUpperCase.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1784" xml:space="preserve">
<source xml:lang="en">Example: <g id="1">NewString = OriginalString.ToLowerCase.StartsWith(</g><g id="2">"pre"</g><g id="3">)</g></source>
<target xml:lang="zh">Example: <g id="1">NewString = OriginalString.ToLowerCase.StartsWith(</g><g id="2">"pre"</g><g id="3">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1785" xml:space="preserve">
<source xml:lang="en">String concatenation</source>
<target xml:lang="zh">String concatenation</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1786" xml:space="preserve">
<source xml:lang="en">The concatenation character to join Strings is: &amp;</source>
<target xml:lang="zh">The concatenation character to join Strings is: &amp;</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1787" xml:space="preserve">
<source xml:lang="en">Examples:</source>
<target xml:lang="zh">Examples:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1788" xml:space="preserve">
<source xml:lang="en">Strings<x id="1"/><g id="2">Private</g><g id="3"> MyString </g><g id="4">As</g><g id="5"> </g><g id="6">String<x id="7"/></g><g id="8">MyString = </g><g id="9">"aaa"</g><g id="10"> &amp; </g><g id="11">"bbb"</g><g id="12"> &amp; </g><g id="13">"ccc"</g>    <x id="14"/>result: aaabbbccc<x id="15"/></source>
<target xml:lang="zh">Strings<x id="1"/><g id="2">Private</g><g id="3"> MyString </g><g id="4">As</g><g id="5"> </g><g id="6">String<x id="7"/></g><g id="8">MyString = </g><g id="9">"aaa"</g><g id="10"> &amp; </g><g id="11">"bbb"</g><g id="12"> &amp; </g><g id="13">"ccc"</g>    <x id="14"/>result: aaabbbccc<x id="15"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1789" xml:space="preserve">
<source xml:lang="en">String and number<x id="1"/><g id="2">MyString = </g><g id="3">"$: "</g><g id="4"> &amp; </g><g id="5">1.25</g>   <x id="6"/>result: $: 1.25<x id="7"/></source>
<target xml:lang="zh">String and number<x id="1"/><g id="2">MyString = </g><g id="3">"$: "</g><g id="4"> &amp; </g><g id="5">1.25</g>   <x id="6"/>result: $: 1.25<x id="7"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1790" xml:space="preserve">
<source xml:lang="en">String and variable, it can be either another string or a number.<x id="1"/><g id="2">Private</g><g id="3"> Val </g><g id="4">As</g><g id="5"> </g><g id="6">Double<x id="7"/></g><g id="8">Val = </g><g id="9">1.25<x id="10"/></g><g id="11">MyString = </g><g id="12">"$: "</g><g id="13"> &amp; Val<x id="14"/></g>result: $: 1.25<x id="15"/></source>
<target xml:lang="zh">String and variable, it can be either another string or a number.<x id="1"/><g id="2">Private</g><g id="3"> Val </g><g id="4">As</g><g id="5"> </g><g id="6">Double<x id="7"/></g><g id="8">Val = </g><g id="9">1.25<x id="10"/></g><g id="11">MyString = </g><g id="12">"$: "</g><g id="13"> &amp; Val<x id="14"/></g>result: $: 1.25<x id="15"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1791" xml:space="preserve">
<source xml:lang="en">Don’t confuse with VB syntax:</source>
<target xml:lang="zh">Don’t confuse with VB syntax:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1792" xml:space="preserve">
<source xml:lang="en">MyString = <g id="1">"aaa"</g> + <g id="2">"bbb"</g> + <g id="3">"ccc"  </g></source>
<target xml:lang="zh">MyString = <g id="1">"aaa"</g> + <g id="2">"bbb"</g> + <g id="3">"ccc"  </g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1793" xml:space="preserve">
<source xml:lang="en">This doesn’t work!</source>
<target xml:lang="zh">This doesn’t work!</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1794" xml:space="preserve">
<source xml:lang="en">B4A, B4i, B4J  StringBuilder</source>
<target xml:lang="zh">B4A, B4i, B4J  StringBuilder</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1795" xml:space="preserve">
<source xml:lang="en">StringBuilder is a mutable string, unlike regular strings which are immutable.<x id="1"/>StringBuilder is especially useful when you need to concatenate many strings.<x id="2"/></source>
<target xml:lang="zh">StringBuilder is a mutable string, unlike regular strings which are immutable.<x id="1"/>StringBuilder is especially useful when you need to concatenate many strings.<x id="2"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1796" xml:space="preserve">
<source xml:lang="en">The following code demonstrates the performance boosting of StringBuilder: </source>
<target xml:lang="zh">The following code demonstrates the performance boosting of StringBuilder: </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1797" xml:space="preserve">
<source xml:lang="en"><g id="1">Dim</g><g id="2"> <g id="3">start</g> <g id="4">As</g> <g id="5">Long</g> <x id="6"/><g id="7">start</g> = <g id="8">DateTime</g>.<g id="9">Now</g> <x id="10"/><g id="11">'Regular string</g> <x id="12"/><g id="13">Dim</g> <g id="14">s</g> <g id="15">As</g> <g id="16">String</g> <x id="17"/><g id="18">For</g> <g id="19">i</g> = <g id="20">1</g> <g id="21">To</g> <g id="22">5000</g> <x id="23"/>  <g id="24">s</g> = <g id="25">s</g> &amp; <g id="26">i</g> <x id="27"/><g id="28">Next</g> <x id="29"/><g id="30">Log</g>(<g id="31">DateTime</g>.<g id="32">Now</g> - <g id="33">start</g>) <x id="34"/><g id="35">'StringBuilder</g> <x id="36"/><g id="37">start</g> = <g id="38">DateTime</g>.<g id="39">Now</g> <x id="40"/><g id="41">Dim</g> <g id="42">sb</g> <g id="43">As</g> <g id="44">StringBuilder</g> <x id="45"/><g id="46">sb</g>.<g id="47">Initialize</g> <x id="48"/><g id="49">For</g> <g id="50">i</g> = <g id="51">1</g> <g id="52">To</g> <g id="53">5000</g> <x id="54"/>  <g id="55">sb</g>.<g id="56">Append</g>(<g id="57">i</g>) <x id="58"/><g id="59">Next</g> <x id="60"/><g id="61">Log</g>(<g id="62">DateTime</g>.<g id="63">Now</g> - <g id="64">start</g>)<x id="65"/></g></source>
<target xml:lang="zh"><g id="1">Dim</g><g id="2"> <g id="3">start</g> <g id="4">As</g> <g id="5">Long</g> <x id="6"/><g id="7">start</g> = <g id="8">DateTime</g>.<g id="9">Now</g> <x id="10"/><g id="11">'Regular string</g> <x id="12"/><g id="13">Dim</g> <g id="14">s</g> <g id="15">As</g> <g id="16">String</g> <x id="17"/><g id="18">For</g> <g id="19">i</g> = <g id="20">1</g> <g id="21">To</g> <g id="22">5000</g> <x id="23"/>  <g id="24">s</g> = <g id="25">s</g> &amp; <g id="26">i</g> <x id="27"/><g id="28">Next</g> <x id="29"/><g id="30">Log</g>(<g id="31">DateTime</g>.<g id="32">Now</g> - <g id="33">start</g>) <x id="34"/><g id="35">'StringBuilder</g> <x id="36"/><g id="37">start</g> = <g id="38">DateTime</g>.<g id="39">Now</g> <x id="40"/><g id="41">Dim</g> <g id="42">sb</g> <g id="43">As</g> <g id="44">StringBuilder</g> <x id="45"/><g id="46">sb</g>.<g id="47">Initialize</g> <x id="48"/><g id="49">For</g> <g id="50">i</g> = <g id="51">1</g> <g id="52">To</g> <g id="53">5000</g> <x id="54"/>  <g id="55">sb</g>.<g id="56">Append</g>(<g id="57">i</g>) <x id="58"/><g id="59">Next</g> <x id="60"/><g id="61">Log</g>(<g id="62">DateTime</g>.<g id="63">Now</g> - <g id="64">start</g>)<x id="65"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1798" xml:space="preserve">
<source xml:lang="en">Tested on a real device, the first 'for loop' took about 20 seconds and the second took less then a tenth of a second.<x id="1"/>The reason is that the code: <g id="2">s</g> = <g id="3">s</g> &amp; <g id="4">i</g> creates a new string each iteration (strings are immutable).<x id="5"/>The method <g id="6">StringBuilder</g>.<g id="7">ToString</g> converts the object to a string.</source>
<target xml:lang="zh">Tested on a real device, the first 'for loop' took about 20 seconds and the second took less then a tenth of a second.<x id="1"/>The reason is that the code: <g id="2">s</g> = <g id="3">s</g> &amp; <g id="4">i</g> creates a new string each iteration (strings are immutable).<x id="5"/>The method <g id="6">StringBuilder</g>.<g id="7">ToString</g> converts the object to a string.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1799" xml:space="preserve">
<source xml:lang="en">StringBuilder Methods</source>
<target xml:lang="zh">StringBuilder Methods</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1800" xml:space="preserve">
<source xml:lang="en"><g id="1">Append</g> (<g id="2">Text</g> <g id="3">As</g> String) <g id="4">As</g> StringBuilder</source>
<target xml:lang="zh"><g id="1">Append</g> (<g id="2">Text</g> <g id="3">As</g> String) <g id="4">As</g> StringBuilder</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1801" xml:space="preserve">
<source xml:lang="en">Appends the specified text at the end.<x id="1"/>Returns the same object, so you can chain methods.<x id="2"/>Example: <x id="3"/><g id="4">sb</g><g id="5">.<g id="6">Append</g>(<g id="7">"First line"</g>).<g id="8">Append</g>(<g id="9">CRLF</g>).<g id="10">Append</g>(<g id="11">"Second line"</g>)<x id="12"/> </g></source>
<target xml:lang="zh">Appends the specified text at the end.<x id="1"/>Returns the same object, so you can chain methods.<x id="2"/>Example: <x id="3"/><g id="4">sb</g><g id="5">.<g id="6">Append</g>(<g id="7">"First line"</g>).<g id="8">Append</g>(<g id="9">CRLF</g>).<g id="10">Append</g>(<g id="11">"Second line"</g>)<x id="12"/> </g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1802" xml:space="preserve">
<source xml:lang="en">Initialize</source>
<target xml:lang="zh">Initialize</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1803" xml:space="preserve">
<source xml:lang="en">Initializes the object.<x id="1"/>Example: <x id="2"/><g id="3">Dim</g><g id="4"> <g id="5">sb</g> <g id="6">As</g> <g id="7">StringBuilder</g> <x id="8"/><g id="9">sb</g>.<g id="10">Initialize</g> <x id="11"/><g id="12">sb</g>.<g id="13">Append</g>(<g id="14">"The value is: "</g>).<g id="15">Append</g>(<g id="16">SomeOtherVariable</g>).<g id="17">Append</g>(<g id="18">CRLF</g>)<x id="19"/></g> </source>
<target xml:lang="zh">Initializes the object.<x id="1"/>Example: <x id="2"/><g id="3">Dim</g><g id="4"> <g id="5">sb</g> <g id="6">As</g> <g id="7">StringBuilder</g> <x id="8"/><g id="9">sb</g>.<g id="10">Initialize</g> <x id="11"/><g id="12">sb</g>.<g id="13">Append</g>(<g id="14">"The value is: "</g>).<g id="15">Append</g>(<g id="16">SomeOtherVariable</g>).<g id="17">Append</g>(<g id="18">CRLF</g>)<x id="19"/></g> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1804" xml:space="preserve">
<source xml:lang="en"><g id="1">Insert</g> (<g id="2">Offset</g> <g id="3">As</g> Int, <g id="4">Text</g> <g id="5">As</g> String) <g id="6">As</g> StringBuilder</source>
<target xml:lang="zh"><g id="1">Insert</g> (<g id="2">Offset</g> <g id="3">As</g> Int, <g id="4">Text</g> <g id="5">As</g> String) <g id="6">As</g> StringBuilder</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1805" xml:space="preserve">
<source xml:lang="en">Inserts the specified text at the specified offset.<x id="1"/> </source>
<target xml:lang="zh">Inserts the specified text at the specified offset.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1806" xml:space="preserve">
<source xml:lang="en"><g id="1">IsInitialized</g> <g id="2">As</g> <g id="3">Boolean</g></source>
<target xml:lang="zh"><g id="1">IsInitialized</g> <g id="2">As</g> <g id="3">Boolean</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1807" xml:space="preserve">
<source xml:lang="en"><g id="1">Length</g> <g id="2">As</g> <g id="3">Int</g> [read only]</source>
<target xml:lang="zh"><g id="1">Length</g> <g id="2">As</g> <g id="3">Int</g> [read only]</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1808" xml:space="preserve">
<source xml:lang="en">Returns the number of characters.<x id="1"/> </source>
<target xml:lang="zh">Returns the number of characters.<x id="1"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1809" xml:space="preserve">
<source xml:lang="en"><g id="1">Remove</g> (StartOffset <g id="2">As</g> <g id="3">Int</g>, EndOffset <g id="4">As</g> <g id="5">Int</g>) <g id="6">As</g> <g id="7">StringBuilder</g></source>
<target xml:lang="zh"><g id="1">Remove</g> (StartOffset <g id="2">As</g> <g id="3">Int</g>, EndOffset <g id="4">As</g> <g id="5">Int</g>) <g id="6">As</g> <g id="7">StringBuilder</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1810" xml:space="preserve">
<source xml:lang="en">Removes the specified characters.<x id="1"/>StartOffset - The first character to remove.<x id="2"/>EndOffset - The ending index. This character will not be removed.<x id="3"/> </source>
<target xml:lang="zh">Removes the specified characters.<x id="1"/>StartOffset - The first character to remove.<x id="2"/>EndOffset - The ending index. This character will not be removed.<x id="3"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1811" xml:space="preserve">
<source xml:lang="en"><g id="1">ToString</g> <g id="2">As</g> <g id="3">String</g></source>
<target xml:lang="zh"><g id="1">ToString</g> <g id="2">As</g> <g id="3">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1812" xml:space="preserve">
<source xml:lang="en">Converts the object to a string.</source>
<target xml:lang="zh">Converts the object to a string.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1813" xml:space="preserve">
<source xml:lang="en">Smart String Literal</source>
<target xml:lang="zh">Smart String Literal</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1814" xml:space="preserve">
<source xml:lang="en">The "smart string" literal is a more powerful version of the standard string literal.<x id="1"/>It has three advantages:</source>
<target xml:lang="zh">The "smart string" literal is a more powerful version of the standard string literal.<x id="1"/>It has three advantages:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1815" xml:space="preserve">
<source xml:lang="en">Supports multi-line strings.</source>
<target xml:lang="zh">Supports multi-line strings.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1816" xml:space="preserve">
<source xml:lang="en">No need to escape quotes.</source>
<target xml:lang="zh">No need to escape quotes.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1817" xml:space="preserve">
<source xml:lang="en">Supports string interpolation.</source>
<target xml:lang="zh">Supports string interpolation.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1818" xml:space="preserve">
<source xml:lang="en">The smart string literal starts with $" and ends with "$.</source>
<target xml:lang="zh">The smart string literal starts with $" and ends with "$.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1819" xml:space="preserve">
<source xml:lang="en">Example:</source>
<target xml:lang="zh">Example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1820" xml:space="preserve">
<source xml:lang="en">Dim<g id="1"> s </g>As<g id="2"> </g><g id="3">String</g><g id="4"> = </g><g id="5">$"Hello world"$<x id="6"/></g>Dim<g id="7"> query </g>As<g id="8"> </g><g id="9">String</g><g id="10"> = </g><g id="11">$"<x id="12"/>SELECT value_id FROM table3<x id="13"/>WHERE rowid >= random()%(SELECT max(rowid)FROM table3)<x id="14"/>AND second_value ISNOTNULL<x id="15"/>LIMIT 1"$<x id="16"/></g>Log<g id="17">(</g><g id="18">$"No need to escape "quotes"! "$</g><g id="19">)</g></source>
<target xml:lang="zh">Dim<g id="1"> s </g>As<g id="2"> </g><g id="3">String</g><g id="4"> = </g><g id="5">$"Hello world"$<x id="6"/></g>Dim<g id="7"> query </g>As<g id="8"> </g><g id="9">String</g><g id="10"> = </g><g id="11">$"<x id="12"/>SELECT value_id FROM table3<x id="13"/>WHERE rowid >= random()%(SELECT max(rowid)FROM table3)<x id="14"/>AND second_value ISNOTNULL<x id="15"/>LIMIT 1"$<x id="16"/></g>Log<g id="17">(</g><g id="18">$"No need to escape "quotes"! "$</g><g id="19">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1821" xml:space="preserve">
<source xml:lang="en">String Interpolation</source>
<target xml:lang="zh">String Interpolation</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1822" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Smart strings can hold zero or more placeholders with code. The placeholders can be easily formatted.<x id="2"/>A placeholder starts with $[optional formatter]{ and ends with }:</source>
<target xml:lang="zh"><x id="1"/>Smart strings can hold zero or more placeholders with code. The placeholders can be easily formatted.<x id="2"/>A placeholder starts with $[optional formatter]{ and ends with }:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1823" xml:space="preserve">
<source xml:lang="en">Log<g id="1">(</g><g id="2">$"5 * 3 = ${</g><g id="3">5</g><g id="4"> * </g><g id="5">3</g><g id="6">}"$</g><g id="7">) </g><g id="8">'5 * 3 = 15</g></source>
<target xml:lang="zh">Log<g id="1">(</g><g id="2">$"5 * 3 = ${</g><g id="3">5</g><g id="4"> * </g><g id="5">3</g><g id="6">}"$</g><g id="7">) </g><g id="8">'5 * 3 = 15</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1824" xml:space="preserve">
<source xml:lang="en">You can put any code you like inside the placeholders.</source>
<target xml:lang="zh">You can put any code you like inside the placeholders.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1825" xml:space="preserve">
<source xml:lang="en">Dim<g id="1"> x = </g><g id="2">1</g><g id="3">, y = </g><g id="4">2</g><g id="5">, z = </g><g id="6">4</g><g id="7"> </g>As<g id="8"> Int<x id="9"/></g>Log<g id="10">(</g><g id="11">$"x = ${</g><g id="12">x</g><g id="13">}, y = ${</g><g id="14">y</g><g id="15">}, z = ${</g>Sin<g id="16">(z)</g><g id="17">}"$</g><g id="18">) </g><g id="19">'x = 1, y = 2, z = -0.7568024953079282</g></source>
<target xml:lang="zh">Dim<g id="1"> x = </g><g id="2">1</g><g id="3">, y = </g><g id="4">2</g><g id="5">, z = </g><g id="6">4</g><g id="7"> </g>As<g id="8"> Int<x id="9"/></g>Log<g id="10">(</g><g id="11">$"x = ${</g><g id="12">x</g><g id="13">}, y = ${</g><g id="14">y</g><g id="15">}, z = ${</g>Sin<g id="16">(z)</g><g id="17">}"$</g><g id="18">) </g><g id="19">'x = 1, y = 2, z = -0.7568024953079282</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1826" xml:space="preserve">
<source xml:lang="en">This is a compile time feature. You cannot load the strings from a file for example.</source>
<target xml:lang="zh">This is a compile time feature. You cannot load the strings from a file for example.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1827" xml:space="preserve">
<source xml:lang="en">Number Formatter</source>
<target xml:lang="zh">Number Formatter</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1828" xml:space="preserve">
<source xml:lang="en"><x id="1"/>The number formatter allows you to set the minimum number of integers and the maximum number of fractions digits. It is similar to NumberFormat keyword.<x id="2"/>The number formatter structure: MinIntegers.MaxFractions. MaxFractions component is optional.<x id="3"/>Examples:</source>
<target xml:lang="zh"><x id="1"/>The number formatter allows you to set the minimum number of integers and the maximum number of fractions digits. It is similar to NumberFormat keyword.<x id="2"/>The number formatter structure: MinIntegers.MaxFractions. MaxFractions component is optional.<x id="3"/>Examples:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1829" xml:space="preserve">
<source xml:lang="en">Dim<g id="1"> h = </g><g id="2">2</g><g id="3">, m = </g><g id="4">15</g><g id="5">, s = </g><g id="6">7</g><g id="7"> </g>As<g id="8"> Int<x id="9"/></g>Log<g id="10">(</g><g id="11">$"Remaining time $2{</g><g id="12">h</g><g id="13">}:$2{</g><g id="14">m</g><g id="15">}:$2{</g><g id="16">s</g><g id="17">}"$</g><g id="18">) </g><g id="19">'Remaining time 02:15:07<x id="20"/></g>Log<g id="21">(</g><g id="22">$"10 / 7 = $0.3{</g><g id="23">10</g><g id="24"> / </g><g id="25">7</g><g id="26">}"$</g><g id="27">) </g><g id="28">'10 / 7 = 1.429<x id="29"/></g>Log<g id="30">(</g><g id="31">$"$1.2{"The value is not a number!"}"$</g><g id="32">) </g><g id="33">'NaN</g></source>
<target xml:lang="zh">Dim<g id="1"> h = </g><g id="2">2</g><g id="3">, m = </g><g id="4">15</g><g id="5">, s = </g><g id="6">7</g><g id="7"> </g>As<g id="8"> Int<x id="9"/></g>Log<g id="10">(</g><g id="11">$"Remaining time $2{</g><g id="12">h</g><g id="13">}:$2{</g><g id="14">m</g><g id="15">}:$2{</g><g id="16">s</g><g id="17">}"$</g><g id="18">) </g><g id="19">'Remaining time 02:15:07<x id="20"/></g>Log<g id="21">(</g><g id="22">$"10 / 7 = $0.3{</g><g id="23">10</g><g id="24"> / </g><g id="25">7</g><g id="26">}"$</g><g id="27">) </g><g id="28">'10 / 7 = 1.429<x id="29"/></g>Log<g id="30">(</g><g id="31">$"$1.2{"The value is not a number!"}"$</g><g id="32">) </g><g id="33">'NaN</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1830" xml:space="preserve">
<source xml:lang="en">Other Formatters</source>
<target xml:lang="zh">Other Formatters</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1831" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Note that the formatters are case insensitive.<x id="2"/><g id="3">Date</g> - Equivalent to DateTime.Date:</source>
<target xml:lang="zh"><x id="1"/>Note that the formatters are case insensitive.<x id="2"/><g id="3">Date</g> - Equivalent to DateTime.Date:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1832" xml:space="preserve">
<source xml:lang="en">Log<g id="1">(</g><g id="2">$"Current date is $date{</g>DateTime<g id="3">.Now</g><g id="4">}"$</g><g id="5">) </g><g id="6">'Current date is 02/02/2015</g></source>
<target xml:lang="zh">Log<g id="1">(</g><g id="2">$"Current date is $date{</g>DateTime<g id="3">.Now</g><g id="4">}"$</g><g id="5">) </g><g id="6">'Current date is 02/02/2015</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1833" xml:space="preserve">
<source xml:lang="en"><g id="1">Time</g> - Equivalent to DateTime.Time:</source>
<target xml:lang="zh"><g id="1">Time</g> - Equivalent to DateTime.Time:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1834" xml:space="preserve">
<source xml:lang="en">Log<g id="1">(</g><g id="2">$"Current time is $time{</g>DateTime<g id="3">.Now</g><g id="4">}"$</g><g id="5">) </g><g id="6">'Current time is 11:17:45</g></source>
<target xml:lang="zh">Log<g id="1">(</g><g id="2">$"Current time is $time{</g>DateTime<g id="3">.Now</g><g id="4">}"$</g><g id="5">) </g><g id="6">'Current time is 11:17:45</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1835" xml:space="preserve">
<source xml:lang="en"><g id="1">DateTime</g> - Equivalent to DateTime.Date &amp; " " &amp; DateTime.Time:</source>
<target xml:lang="zh"><g id="1">DateTime</g> - Equivalent to DateTime.Date &amp; " " &amp; DateTime.Time:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1836" xml:space="preserve">
<source xml:lang="en">Log<g id="1">(</g><g id="2">$"Current time is $DateTime{</g>DateTime<g id="3">.Now</g><g id="4">}"$</g><g id="5">) </g><g id="6">'Current time is 02/02/2015 11:18:36</g></source>
<target xml:lang="zh">Log<g id="1">(</g><g id="2">$"Current time is $DateTime{</g>DateTime<g id="3">.Now</g><g id="4">}"$</g><g id="5">) </g><g id="6">'Current time is 02/02/2015 11:18:36</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1837" xml:space="preserve">
<source xml:lang="en"><g id="1">XML</g> - Escapes the five XML entities (", ', &lt;, >, &amp;):</source>
<target xml:lang="zh"><g id="1">XML</g> - Escapes the five XML entities (", ', &lt;, >, &amp;):</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1838" xml:space="preserve">
<source xml:lang="en">Dim<g id="1"> UserString </g>As<g id="2"> </g><g id="3">String</g><g id="4"> = </g><g id="5">$"will it break your parser >&lt;'"&amp;?"$<x id="6"/></g>Log<g id="7">(</g><g id="8">$"User input is: $xml{</g><g id="9">UserString</g><g id="10">}"$</g><g id="11">)<x id="12"/></g><g id="13">'User input is: will it break your parser &amp;gt;&amp;lt;&amp;#39;&amp;quot;&amp;amp;?</g></source>
<target xml:lang="zh">Dim<g id="1"> UserString </g>As<g id="2"> </g><g id="3">String</g><g id="4"> = </g><g id="5">$"will it break your parser >&lt;'"&amp;?"$<x id="6"/></g>Log<g id="7">(</g><g id="8">$"User input is: $xml{</g><g id="9">UserString</g><g id="10">}"$</g><g id="11">)<x id="12"/></g><g id="13">'User input is: will it break your parser &amp;gt;&amp;lt;&amp;#39;&amp;quot;&amp;amp;?</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1839" xml:space="preserve">
<source xml:lang="en">This is also useful for html content.</source>
<target xml:lang="zh">This is also useful for html content.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1840" xml:space="preserve">
<source xml:lang="en">B4A, B4i  CharSequence  CSBuilder</source>
<target xml:lang="zh">B4A, B4i  CharSequence  CSBuilder</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1841" xml:space="preserve">
<source xml:lang="en">CharSequence is a native interface in Android SDK. </source>
<target xml:lang="zh">CharSequence is a native interface in Android SDK. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1842" xml:space="preserve">
<source xml:lang="en">A String is one implementation of CharSequence.<x id="1"/>There are other implementations of CharSequence that provide more features and allow us to format the string, add images and even make parts of the text clickable.<x id="2"/>Starting from B4A v6.80 many methods accept CharSequence instead of String. Existing code will work properly as you can pass regular strings. However you can now also pass more interesting CharSequences.<x id="3"/><g id="4">Note to library developers, </g>if your library makes calls to APIs that work with CharSequences then you should change your method signatures to expect CharSequence instead of String. This will allow developers to format the text.<x id="5"/>This tutorial covers the CSBuilder object.<x id="6"/>CSBuilder is similar to StringBuilder. Instead of building strings, it builds CharSequences that include style information.</source>
<target xml:lang="zh">A String is one implementation of CharSequence.<x id="1"/>There are other implementations of CharSequence that provide more features and allow us to format the string, add images and even make parts of the text clickable.<x id="2"/>Starting from B4A v6.80 many methods accept CharSequence instead of String. Existing code will work properly as you can pass regular strings. However you can now also pass more interesting CharSequences.<x id="3"/><g id="4">Note to library developers, </g>if your library makes calls to APIs that work with CharSequences then you should change your method signatures to expect CharSequence instead of String. This will allow developers to format the text.<x id="5"/>This tutorial covers the CSBuilder object.<x id="6"/>CSBuilder is similar to StringBuilder. Instead of building strings, it builds CharSequences that include style information.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1843" xml:space="preserve">
<source xml:lang="en">The examples are made with B4A, but the principles are the same for B4i</source>
<target xml:lang="zh">The examples are made with B4A, but the principles are the same for B4i</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1844" xml:space="preserve">
<source xml:lang="en">Using it is quite simple.</source>
<target xml:lang="zh">Using it is quite simple.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1845" xml:space="preserve">
<source xml:lang="en">Text</source>
<target xml:lang="zh">Text</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1846" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> cs </g>As<g id="2"> </g><g id="3">CSBuilder</g></source>
<target xml:lang="zh">Private<g id="1"> cs </g>As<g id="2"> </g><g id="3">CSBuilder</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1847" xml:space="preserve">
<source xml:lang="en">cs = cs.Initialize.Color(<g id="1">Colors</g>.Red).Append(<g id="2">"Hello World!"</g>).PopAll</source>
<target xml:lang="zh">cs = cs.Initialize.Color(<g id="1">Colors</g>.Red).Append(<g id="2">"Hello World!"</g>).PopAll</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1848" xml:space="preserve">
<source xml:lang="en">Label1.Text = cs</source>
<target xml:lang="zh">Label1.Text = cs</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1849" xml:space="preserve">
<source xml:lang="en"> The default background color can be different depending on the Android version.</source>
<target xml:lang="zh"> The default background color can be different depending on the Android version.</target>
</trans-unit>
<trans-unit id="N8523FA22-sub1" xml:space="preserve">
<source xml:lang="en">Image 1867</source>
<target xml:lang="zh">Image 1867</target>
</trans-unit>
<trans-unit id="N8523FA22-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1850" xml:space="preserve">
<source xml:lang="en">Almost all methods of CSBuilder return the object itself. This allows us to chain the method calls.<x id="1"/>Text is always appended with the Append method.<x id="2"/>There are various attributes that can be set. Setting an attribute marks the beginning of a style span.<x id="3"/>Calling Pop ends the last span that was added (and not ended yet).<x id="4"/>Calling PopAll ends all open spans. It is convenient to always call PopAll at the end to ensure that all spans are closed.</source>
<target xml:lang="zh">Almost all methods of CSBuilder return the object itself. This allows us to chain the method calls.<x id="1"/>Text is always appended with the Append method.<x id="2"/>There are various attributes that can be set. Setting an attribute marks the beginning of a style span.<x id="3"/>Calling Pop ends the last span that was added (and not ended yet).<x id="4"/>Calling PopAll ends all open spans. It is convenient to always call PopAll at the end to ensure that all spans are closed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1851" xml:space="preserve">
<source xml:lang="en">'example of explicitly popping an attribute:</source>
<target xml:lang="zh">'example of explicitly popping an attribute:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1852" xml:space="preserve">
<source xml:lang="en">Label1.Text = cs.Initialize.Color(<g id="1">Colors</g>.Red).Append(<g id="2">"Hello "</g>).Pop.Append(<g id="3">"World!"</g>).PopAll</source>
<target xml:lang="zh">Label1.Text = cs.Initialize.Color(<g id="1">Colors</g>.Red).Append(<g id="2">"Hello "</g>).Pop.Append(<g id="3">"World!"</g>).PopAll</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1853" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N8523FA3B-sub1" xml:space="preserve">
<source xml:lang="en">Image 1868</source>
<target xml:lang="zh">Image 1868</target>
</trans-unit>
<trans-unit id="N8523FA3B-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1854" xml:space="preserve">
<source xml:lang="en">'It doesn't matter whether the methods are chained or split into several lines:</source>
<target xml:lang="zh">'It doesn't matter whether the methods are chained or split into several lines:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1855" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> cs </g>As<g id="2"> </g><g id="3">CSBuilder</g></source>
<target xml:lang="zh">Private<g id="1"> cs </g>As<g id="2"> </g><g id="3">CSBuilder</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1856" xml:space="preserve">
<source xml:lang="en">cs.Initialize.Color(<g id="1">Colors</g>.Red).Append(<g id="2">"Hello "</g>)</source>
<target xml:lang="zh">cs.Initialize.Color(<g id="1">Colors</g>.Red).Append(<g id="2">"Hello "</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1857" xml:space="preserve">
<source xml:lang="en">cs.Bold.Color(<g id="1">Colors</g>.Green).Append(<g id="2">"Colorful "</g>).Pop.Pop </source>
<target xml:lang="zh">cs.Bold.Color(<g id="1">Colors</g>.Green).Append(<g id="2">"Colorful "</g>).Pop.Pop </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1858" xml:space="preserve">
<source xml:lang="en">'two pops: the first removes the green color and the second removes the bold style</source>
<target xml:lang="zh">'two pops: the first removes the green color and the second removes the bold style</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1859" xml:space="preserve">
<source xml:lang="en">cs.Append(<g id="1">"World!"</g>).PopAll</source>
<target xml:lang="zh">cs.Append(<g id="1">"World!"</g>).PopAll</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1860" xml:space="preserve">
<source xml:lang="en">Label1.Text = cs</source>
<target xml:lang="zh">Label1.Text = cs</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1861" xml:space="preserve">
<source xml:lang="en">'can also be set as the activity title</source>
<target xml:lang="zh">'can also be set as the activity title</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1862" xml:space="preserve">
<source xml:lang="en">Activity.Title = cs</source>
<target xml:lang="zh">Activity.Title = cs</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1863" xml:space="preserve">
<source xml:lang="en">'and Toast messages and in other places...</source>
<target xml:lang="zh">'and Toast messages and in other places...</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1864" xml:space="preserve">
<source xml:lang="en">ToastMessageShow<g id="1">(cs, </g>True<g id="2">)</g></source>
<target xml:lang="zh">ToastMessageShow<g id="1">(cs, </g>True<g id="2">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1865" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N8523FA5C-sub1" xml:space="preserve">
<source xml:lang="en">Image 1869</source>
<target xml:lang="zh">Image 1869</target>
</trans-unit>
<trans-unit id="N8523FA5C-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1866" xml:space="preserve">
<source xml:lang="en">With FontAwesome or MaterialIcons</source>
<target xml:lang="zh">With FontAwesome or MaterialIcons</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1867" xml:space="preserve">
<source xml:lang="en">Private<g id="1">  cs </g>As<g id="2"> </g><g id="3">CSBuilder</g></source>
<target xml:lang="zh">Private<g id="1">  cs </g>As<g id="2"> </g><g id="3">CSBuilder</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1868" xml:space="preserve">
<source xml:lang="en">Label1.Text = cs.Initialize.Append(<g id="1">"Text with FontAwesome: "</g>).<g id="2">Typeface</g>(<g id="3">Typeface</g>.FONTAWESOME).Append(<g id="4">Chr</g>(<g id="5">0xF209</g>)).PopAll</source>
<target xml:lang="zh">Label1.Text = cs.Initialize.Append(<g id="1">"Text with FontAwesome: "</g>).<g id="2">Typeface</g>(<g id="3">Typeface</g>.FONTAWESOME).Append(<g id="4">Chr</g>(<g id="5">0xF209</g>)).PopAll</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1869" xml:space="preserve">
<source xml:lang="en">'Using the same builder multiple times. Note that it is initialized each time.</source>
<target xml:lang="zh">'Using the same builder multiple times. Note that it is initialized each time.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1870" xml:space="preserve">
<source xml:lang="en">'Note that we vertically align the material icon character.</source>
<target xml:lang="zh">'Note that we vertically align the material icon character.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1871" xml:space="preserve">
<source xml:lang="en">cs.Initialize.Append(<g id="1">"Text with MaterialIcons: "</g>).<g id="2">Typeface</g>(<g id="3">Typeface</g>.MATERIALICONS).VerticalAlign(<g id="4">5dip</g>).Append(<g id="5">Chr</g>(<g id="6">0xE531</g>)).PopAll</source>
<target xml:lang="zh">cs.Initialize.Append(<g id="1">"Text with MaterialIcons: "</g>).<g id="2">Typeface</g>(<g id="3">Typeface</g>.MATERIALICONS).VerticalAlign(<g id="4">5dip</g>).Append(<g id="5">Chr</g>(<g id="6">0xE531</g>)).PopAll</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1872" xml:space="preserve">
<source xml:lang="en">Activity.Title = cs</source>
<target xml:lang="zh">Activity.Title = cs</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1873" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N8523FA79-sub1" xml:space="preserve">
<source xml:lang="en">Image 1872</source>
<target xml:lang="zh">Image 1872</target>
</trans-unit>
<trans-unit id="N8523FA79-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1874" xml:space="preserve">
<source xml:lang="en">Images</source>
<target xml:lang="zh">Images</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1875" xml:space="preserve">
<source xml:lang="en">Private<g id="1">  cs </g>As<g id="2"> </g><g id="3">CSBuilder</g></source>
<target xml:lang="zh">Private<g id="1">  cs </g>As<g id="2"> </g><g id="3">CSBuilder</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1876" xml:space="preserve">
<source xml:lang="en">cs.Initialize.Size(<g id="1">18</g>).<g id="2">Typeface</g>(<g id="3">Typeface</g>.MONOSPACE)</source>
<target xml:lang="zh">cs.Initialize.Size(<g id="1">18</g>).<g id="2">Typeface</g>(<g id="3">Typeface</g>.MONOSPACE)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1877" xml:space="preserve">
<source xml:lang="en">cs.Image(<g id="1">LoadBitmap</g>(<g id="2">File</g>.DirAssets, <g id="3">"edelweiss.jpg"</g>), <g id="4">60dip</g>, <g id="5">40dip</g>, <g id="6">False</g>).Append(<g id="7">" Edelweiss"</g>).Append(<g id="8">CRLF</g>)</source>
<target xml:lang="zh">cs.Image(<g id="1">LoadBitmap</g>(<g id="2">File</g>.DirAssets, <g id="3">"edelweiss.jpg"</g>), <g id="4">60dip</g>, <g id="5">40dip</g>, <g id="6">False</g>).Append(<g id="7">" Edelweiss"</g>).Append(<g id="8">CRLF</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1878" xml:space="preserve">
<source xml:lang="en">cs.Image(<g id="1">LoadBitmap</g>(<g id="2">File</g>.DirAssets, <g id="3">"gentiane.jpg"</g>), <g id="4">60dip</g>, <g id="5">40dip</g>, <g id="6">False</g>).Append(<g id="7">" Gentiane"</g>).Append(<g id="8">CRLF</g>)</source>
<target xml:lang="zh">cs.Image(<g id="1">LoadBitmap</g>(<g id="2">File</g>.DirAssets, <g id="3">"gentiane.jpg"</g>), <g id="4">60dip</g>, <g id="5">40dip</g>, <g id="6">False</g>).Append(<g id="7">" Gentiane"</g>).Append(<g id="8">CRLF</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1879" xml:space="preserve">
<source xml:lang="en">cs.Image(<g id="1">LoadBitmap</g>(<g id="2">File</g>.DirAssets, <g id="3">"lys_martagon.jpg"</g>), <g id="4">60dip</g>, <g id="5">40dip</g>, <g id="6">False</g>).Append(<g id="7">" Lys martagon"</g>).Append(<g id="8">CRLF</g>)</source>
<target xml:lang="zh">cs.Image(<g id="1">LoadBitmap</g>(<g id="2">File</g>.DirAssets, <g id="3">"lys_martagon.jpg"</g>), <g id="4">60dip</g>, <g id="5">40dip</g>, <g id="6">False</g>).Append(<g id="7">" Lys martagon"</g>).Append(<g id="8">CRLF</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1880" xml:space="preserve">
<source xml:lang="en">cs.Image(<g id="1">LoadBitmap</g>(<g id="2">File</g>.DirAssets, <g id="3">"rose.jpg"</g>), <g id="4">60dip</g>, <g id="5">40dip</g>, <g id="6">False</g>).Append(<g id="7">" Rose"</g>).Append(<g id="8">CRLF</g>)</source>
<target xml:lang="zh">cs.Image(<g id="1">LoadBitmap</g>(<g id="2">File</g>.DirAssets, <g id="3">"rose.jpg"</g>), <g id="4">60dip</g>, <g id="5">40dip</g>, <g id="6">False</g>).Append(<g id="7">" Rose"</g>).Append(<g id="8">CRLF</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1881" xml:space="preserve">
<source xml:lang="en">cs.PopAll</source>
<target xml:lang="zh">cs.PopAll</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1882" xml:space="preserve">
<source xml:lang="en">Label1.Text = cs</source>
<target xml:lang="zh">Label1.Text = cs</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1883" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N8523FA98-sub1" xml:space="preserve">
<source xml:lang="en">Image 1874</source>
<target xml:lang="zh">Image 1874</target>
</trans-unit>
<trans-unit id="N8523FA98-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1884" xml:space="preserve">
<source xml:lang="en">Clickable text</source>
<target xml:lang="zh">Clickable text</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1885" xml:space="preserve">
<source xml:lang="en">The Clickable method creates clickable text. For the event to be raised you must call cs.EnableClickEvents.<x id="1"/>The Append method accepts a CharSequence. In the following code the CreateClickableWord sub returns a CharSequence that is then appended to the other CharSqeuence.</source>
<target xml:lang="zh">The Clickable method creates clickable text. For the event to be raised you must call cs.EnableClickEvents.<x id="1"/>The Append method accepts a CharSequence. In the following code the CreateClickableWord sub returns a CharSequence that is then appended to the other CharSqeuence.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1886" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N8523FA9B-sub1" xml:space="preserve">
<source xml:lang="en">Image 1875</source>
<target xml:lang="zh">Image 1875</target>
</trans-unit>
<trans-unit id="N8523FA9B-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1887" xml:space="preserve">
<source xml:lang="en">Highlight text</source>
<target xml:lang="zh">Highlight text</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1888" xml:space="preserve">
<source xml:lang="en">Example from the <g id="1">SearchView</g> class.</source>
<target xml:lang="zh">Example from the <g id="1">SearchView</g> class.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1889" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> </g>Sub<g id="2"> <g id="3">AddItemsToList</g>(li </g>As<g id="4"> </g><g id="5">List</g><g id="6">, full </g>As<g id="7"> </g><g id="8">String</g><g id="9">)</g></source>
<target xml:lang="zh">Private<g id="1"> </g>Sub<g id="2"> <g id="3">AddItemsToList</g>(li </g>As<g id="4"> </g><g id="5">List</g><g id="6">, full </g>As<g id="7"> </g><g id="8">String</g><g id="9">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1890" xml:space="preserve">
<source xml:lang="en"><g id="1">If</g> li.IsInitialized = <g id="2">False</g> <g id="3">Then</g> <g id="4">Return</g></source>
<target xml:lang="zh"><g id="1">If</g> li.IsInitialized = <g id="2">False</g> <g id="3">Then</g> <g id="4">Return</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1891" xml:space="preserve">
<source xml:lang="en"><g id="1">Dim</g> cs <g id="2">As</g> <g id="3">CSBuilder</g></source>
<target xml:lang="zh"><g id="1">Dim</g> cs <g id="2">As</g> <g id="3">CSBuilder</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1892" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g> i = <g id="2">0</g> <g id="3">To</g> li.Size - <g id="4">1</g></source>
<target xml:lang="zh"><g id="1">For</g> i = <g id="2">0</g> <g id="3">To</g> li.Size - <g id="4">1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1893" xml:space="preserve">
<source xml:lang="en"><g id="1">Dim</g> item <g id="2">As</g> <g id="3">String</g> = li.Get(i)</source>
<target xml:lang="zh"><g id="1">Dim</g> item <g id="2">As</g> <g id="3">String</g> = li.Get(i)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1894" xml:space="preserve">
<source xml:lang="en"><g id="1">Dim</g> x <g id="2">As</g> <g id="3">Int</g> = item.ToLowerCase.IndexOf(full)</source>
<target xml:lang="zh"><g id="1">Dim</g> x <g id="2">As</g> <g id="3">Int</g> = item.ToLowerCase.IndexOf(full)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1895" xml:space="preserve">
<source xml:lang="en"><g id="1">If</g> x = -<g id="2">1</g> <g id="3">Then</g></source>
<target xml:lang="zh"><g id="1">If</g> x = -<g id="2">1</g> <g id="3">Then</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1896" xml:space="preserve">
<source xml:lang="en"><g id="1">Continue</g></source>
<target xml:lang="zh"><g id="1">Continue</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1897" xml:space="preserve">
<source xml:lang="en"><g id="1">End</g> <g id="2">If</g></source>
<target xml:lang="zh"><g id="1">End</g> <g id="2">If</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1898" xml:space="preserve">
<source xml:lang="en"><x id="1"/>cs.Initialize.Append(item.SubString2(<g id="2">0</g>, x)).Color(highlightColor).Append(item.SubString2(x, x + full.Length)).Pop</source>
<target xml:lang="zh"><x id="1"/>cs.Initialize.Append(item.SubString2(<g id="2">0</g>, x)).Color(highlightColor).Append(item.SubString2(x, x + full.Length)).Pop</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1899" xml:space="preserve">
<source xml:lang="en"><x id="1"/>cs.Append(item.SubString(x + full.Length))</source>
<target xml:lang="zh"><x id="1"/>cs.Append(item.SubString(x + full.Length))</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1900" xml:space="preserve">
<source xml:lang="en"><x id="1"/>lv.AddSingleLine(cs)</source>
<target xml:lang="zh"><x id="1"/>lv.AddSingleLine(cs)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1901" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1902" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1903" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N8523FD61-sub1" xml:space="preserve">
<source xml:lang="en">Image 1877</source>
<target xml:lang="zh">Image 1877</target>
</trans-unit>
<trans-unit id="N8523FD61-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1904" xml:space="preserve">
<source xml:lang="en">Center aligned text</source>
<target xml:lang="zh">Center aligned text</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1905" xml:space="preserve">
<source xml:lang="en">Msgbox<g id="1">(cs.Initialize.Alignment(</g><g id="2">"ALIGN_CENTER"</g><g id="3">).Append(</g><g id="4">$"Lorem ipsum dolor sit amet, consectetur adipiscing elit.<x id="5"/>Nam tristique metus eget sem sollicitudin, vel pulvinar nisl interdum. In sed ullamcorper lacus.<x id="6"/>Duis ultricies urna eget faucibus ullamcorper. Donec maximus egestas tortor, vitae suscipit est varius in<x id="7"/>Donec at arcu ut odio hendrerit molestie. Curabitur molestie felis enim, ac sodales sapien posuere sit amet."$</g><g id="8">).PopAll, _<x id="9"/>cs.Initialize.Typeface(</g>Typeface<g id="10">.FONTAWESOME).Color(</g><g id="11">0xFF01FF20</g><g id="12">).Size(</g><g id="13">40</g><g id="14">).Append(</g>Chr<g id="15">(</g><g id="16">0xF17B</g><g id="17">) &amp; </g><g id="18">" "</g><g id="19"> &amp; </g>Chr<g id="20">(</g><g id="21">0xF17B</g><g id="22">) &amp; </g><g id="23">" "</g><g id="24">&amp; </g>Chr<g id="25">(</g><g id="26">0xF17B</g><g id="27">)).PopAll)</g></source>
<target xml:lang="zh">Msgbox<g id="1">(cs.Initialize.Alignment(</g><g id="2">"ALIGN_CENTER"</g><g id="3">).Append(</g><g id="4">$"Lorem ipsum dolor sit amet, consectetur adipiscing elit.<x id="5"/>Nam tristique metus eget sem sollicitudin, vel pulvinar nisl interdum. In sed ullamcorper lacus.<x id="6"/>Duis ultricies urna eget faucibus ullamcorper. Donec maximus egestas tortor, vitae suscipit est varius in<x id="7"/>Donec at arcu ut odio hendrerit molestie. Curabitur molestie felis enim, ac sodales sapien posuere sit amet."$</g><g id="8">).PopAll, _<x id="9"/>cs.Initialize.Typeface(</g>Typeface<g id="10">.FONTAWESOME).Color(</g><g id="11">0xFF01FF20</g><g id="12">).Size(</g><g id="13">40</g><g id="14">).Append(</g>Chr<g id="15">(</g><g id="16">0xF17B</g><g id="17">) &amp; </g><g id="18">" "</g><g id="19"> &amp; </g>Chr<g id="20">(</g><g id="21">0xF17B</g><g id="22">) &amp; </g><g id="23">" "</g><g id="24">&amp; </g>Chr<g id="25">(</g><g id="26">0xF17B</g><g id="27">)).PopAll)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1906" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N8523FD64-sub1" xml:space="preserve">
<source xml:lang="en">Image 1876</source>
<target xml:lang="zh">Image 1876</target>
</trans-unit>
<trans-unit id="N8523FD64-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1907" xml:space="preserve">
<source xml:lang="en">CSBuilder Methods</source>
<target xml:lang="zh">CSBuilder Methods</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1908" xml:space="preserve">
<source xml:lang="en">B4A / B4i</source>
<target xml:lang="zh">B4A / B4i</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1909" xml:space="preserve">
<source xml:lang="en"><g id="1">Alignement</g> (Alignment As Alignment Enum)<x id="2"/>Starts an alignment span.<x id="3"/>Alignment - One of the following strings: <x id="4"/>ALIGN_NORMAL, ALIGN_OPPOSITE or ALIGN_CENTER<x id="5"/></source>
<target xml:lang="zh"><g id="1">Alignement</g> (Alignment As Alignment Enum)<x id="2"/>Starts an alignment span.<x id="3"/>Alignment - One of the following strings: <x id="4"/>ALIGN_NORMAL, ALIGN_OPPOSITE or ALIGN_CENTER<x id="5"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1910" xml:space="preserve">
<source xml:lang="en"><g id="1">Append</g> (Text As CharSequence)<x id="2"/>Appends the provided String or CharSequence.<x id="3"/></source>
<target xml:lang="zh"><g id="1">Append</g> (Text As CharSequence)<x id="2"/>Appends the provided String or CharSequence.<x id="3"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1911" xml:space="preserve">
<source xml:lang="en"><g id="1">BackgroundColor</g> (Color As Int)<x id="2"/>Starts a background color span.<x id="3"/></source>
<target xml:lang="zh"><g id="1">BackgroundColor</g> (Color As Int)<x id="2"/>Starts a background color span.<x id="3"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1912" xml:space="preserve">
<source xml:lang="en"><g id="1">Color</g> (Color As Int)<x id="2"/>Starts a foreground color span.<x id="3"/></source>
<target xml:lang="zh"><g id="1">Color</g> (Color As Int)<x id="2"/>Starts a foreground color span.<x id="3"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1913" xml:space="preserve">
<source xml:lang="en"><g id="1">Initialize</g><x id="2"/>Initializes the builder. You can call this method multiple times to create new CharSequences.<x id="3"/>Note that like most other methods it returns the current object.<x id="4"/></source>
<target xml:lang="zh"><g id="1">Initialize</g><x id="2"/>Initializes the builder. You can call this method multiple times to create new CharSequences.<x id="3"/>Note that like most other methods it returns the current object.<x id="4"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1914" xml:space="preserve">
<source xml:lang="en"><g id="1">IsInitialized</g><x id="2"/>Tests whether this object was initialized. Returns a Boolean.<x id="3"/></source>
<target xml:lang="zh"><g id="1">IsInitialized</g><x id="2"/>Tests whether this object was initialized. Returns a Boolean.<x id="3"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1915" xml:space="preserve">
<source xml:lang="en"><g id="1">Pop</g><x id="2"/>Closes the most recent span. All spans must be closed. You can call PopAll to close all open spans.<x id="3"/></source>
<target xml:lang="zh"><g id="1">Pop</g><x id="2"/>Closes the most recent span. All spans must be closed. You can call PopAll to close all open spans.<x id="3"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1916" xml:space="preserve">
<source xml:lang="en"><g id="1">PopAll</g><x id="2"/>Closes all open spans.<x id="3"/>It is convenient to always call PopAll at the end to ensure that all spans are closed.<x id="4"/></source>
<target xml:lang="zh"><g id="1">PopAll</g><x id="2"/>Closes all open spans.<x id="3"/>It is convenient to always call PopAll at the end to ensure that all spans are closed.<x id="4"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1917" xml:space="preserve">
<source xml:lang="en"><g id="1">Strikethrough</g><x id="2"/>Starts a strikethrough span.<x id="3"/></source>
<target xml:lang="zh"><g id="1">Strikethrough</g><x id="2"/>Starts a strikethrough span.<x id="3"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1918" xml:space="preserve">
<source xml:lang="en"><g id="1">ToString</g><x id="2"/>Returns a string with the characters.<x id="3"/></source>
<target xml:lang="zh"><g id="1">ToString</g><x id="2"/>Returns a string with the characters.<x id="3"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1919" xml:space="preserve">
<source xml:lang="en"><g id="1">Underline</g><x id="2"/>Starts an underline span.<x id="3"/></source>
<target xml:lang="zh"><g id="1">Underline</g><x id="2"/>Starts an underline span.<x id="3"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1920" xml:space="preserve">
<source xml:lang="en"><g id="1">VerticalAlign</g> (Shift As Int)<x id="2"/>Starts a vertical alignment span (positive = downwards).<x id="3"/></source>
<target xml:lang="zh"><g id="1">VerticalAlign</g> (Shift As Int)<x id="2"/>Starts a vertical alignment span (positive = downwards).<x id="3"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1921" xml:space="preserve">
<source xml:lang="en">B4A only</source>
<target xml:lang="zh">B4A only</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1922" xml:space="preserve">
<source xml:lang="en"><g id="1">Bold</g><x id="2"/>Starts a bold span.<x id="3"/></source>
<target xml:lang="zh"><g id="1">Bold</g><x id="2"/>Starts a bold span.<x id="3"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1923" xml:space="preserve">
<source xml:lang="en"><g id="1">Clickable</g> (EventName As String, Tag As Object)<x id="2"/>Starts a clickable span. For the event to be raised you need to call the EnableClickEvents method.<x id="3"/>Example:<x id="4"/><g id="5">Sub </g><g id="6">Activity_Create(FirstTime </g><g id="7">As</g><g id="8"> Boolean)<x id="9"/>   </g><g id="10">Activity</g><g id="11">.LoadLayout(</g><g id="12">"1"</g><g id="13">)<x id="14"/>   </g><g id="15">Dim</g><g id="16"> cs </g><g id="17">As</g><g id="18"> CSBuilder<x id="19"/>   cs.Initialize.Size(</g><g id="20">30</g><g id="21">).Append(</g><g id="22">"Some "</g><g id="23">).Append(CreateClickableWord(</g><g id="24">"words"</g><g id="25">))<x id="26"/>   cs.Append(</g><g id="27">" are "</g><g id="28">).Append(CreateClickableWord(</g><g id="29">"clickable"</g><g id="30">)).Append(</g><g id="31">"."</g><g id="32">).PopAll<x id="33"/>   Label1.Text = cs<x id="34"/>   cs.EnableClickEvents(Label1)<x id="35"/></g><g id="36">End Sub<x id="37"/>Sub </g><g id="38">CreateClickableWord(Text </g><g id="39">As</g><g id="40"> </g><g id="41">String</g><g id="42">) </g><g id="43">As</g><g id="44"> CSBuilder<x id="45"/>   </g><g id="46">Dim</g><g id="47"> cs </g><g id="48">As</g><g id="49"> CSBuilder<x id="50"/>   </g><g id="51">Return</g><g id="52"> cs.Initialize.Underline.Color(</g><g id="53">0xFF00D0FF</g><g id="54">).Clickable(</g><g id="55">"word"</g><g id="56">, Text).Append(Text).PopAll<x id="57"/></g><g id="58">End Sub<x id="59"/>Sub </g><g id="60">Word_Click (Tag </g><g id="61">As</g><g id="62"> Object)<x id="63"/>   </g><g id="64">Log</g><g id="65">(</g><g id="66">$"You have clicked on word: ${</g><g id="67">Tag</g><g id="68">}"$</g><g id="69">)<x id="70"/></g><g id="71">End Sub<x id="72"/></g></source>
<target xml:lang="zh"><g id="1">Clickable</g> (EventName As String, Tag As Object)<x id="2"/>Starts a clickable span. For the event to be raised you need to call the EnableClickEvents method.<x id="3"/>Example:<x id="4"/><g id="5">Sub </g><g id="6">Activity_Create(FirstTime </g><g id="7">As</g><g id="8"> Boolean)<x id="9"/>   </g><g id="10">Activity</g><g id="11">.LoadLayout(</g><g id="12">"1"</g><g id="13">)<x id="14"/>   </g><g id="15">Dim</g><g id="16"> cs </g><g id="17">As</g><g id="18"> CSBuilder<x id="19"/>   cs.Initialize.Size(</g><g id="20">30</g><g id="21">).Append(</g><g id="22">"Some "</g><g id="23">).Append(CreateClickableWord(</g><g id="24">"words"</g><g id="25">))<x id="26"/>   cs.Append(</g><g id="27">" are "</g><g id="28">).Append(CreateClickableWord(</g><g id="29">"clickable"</g><g id="30">)).Append(</g><g id="31">"."</g><g id="32">).PopAll<x id="33"/>   Label1.Text = cs<x id="34"/>   cs.EnableClickEvents(Label1)<x id="35"/></g><g id="36">End Sub<x id="37"/>Sub </g><g id="38">CreateClickableWord(Text </g><g id="39">As</g><g id="40"> </g><g id="41">String</g><g id="42">) </g><g id="43">As</g><g id="44"> CSBuilder<x id="45"/>   </g><g id="46">Dim</g><g id="47"> cs </g><g id="48">As</g><g id="49"> CSBuilder<x id="50"/>   </g><g id="51">Return</g><g id="52"> cs.Initialize.Underline.Color(</g><g id="53">0xFF00D0FF</g><g id="54">).Clickable(</g><g id="55">"word"</g><g id="56">, Text).Append(Text).PopAll<x id="57"/></g><g id="58">End Sub<x id="59"/>Sub </g><g id="60">Word_Click (Tag </g><g id="61">As</g><g id="62"> Object)<x id="63"/>   </g><g id="64">Log</g><g id="65">(</g><g id="66">$"You have clicked on word: ${</g><g id="67">Tag</g><g id="68">}"$</g><g id="69">)<x id="70"/></g><g id="71">End Sub<x id="72"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1924" xml:space="preserve">
<source xml:lang="en"><g id="1">EnableClickEvents</g> (Label As TextView)<x id="2"/>This method should be called when using clickable spans.<x id="3"/></source>
<target xml:lang="zh"><g id="1">EnableClickEvents</g> (Label As TextView)<x id="2"/>This method should be called when using clickable spans.<x id="3"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1925" xml:space="preserve">
<source xml:lang="en"><g id="1">Image</g> (Bitmap As Bitmap, Width As Int, Height As Int, Baseline As Boolean)<x id="2"/>Adds an image span. This method will add a space character as a placeholder for the image.<x id="3"/>Unlike the other methods you do not need to call Pop to close this span as it is closed automatically.<x id="4"/>Bitmap - The image.<x id="5"/>Width / Height - Image dimensions, use ‘dip’ units.<x id="6"/>Baseline - If true then the image will be aligned based on the baseline. Otherwise it will be aligned based on the lowest descender in the text.<x id="7"/></source>
<target xml:lang="zh"><g id="1">Image</g> (Bitmap As Bitmap, Width As Int, Height As Int, Baseline As Boolean)<x id="2"/>Adds an image span. This method will add a space character as a placeholder for the image.<x id="3"/>Unlike the other methods you do not need to call Pop to close this span as it is closed automatically.<x id="4"/>Bitmap - The image.<x id="5"/>Width / Height - Image dimensions, use ‘dip’ units.<x id="6"/>Baseline - If true then the image will be aligned based on the baseline. Otherwise it will be aligned based on the lowest descender in the text.<x id="7"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1926" xml:space="preserve">
<source xml:lang="en"><g id="1">RelativeSize</g> (Proportion As Float)<x id="2"/>Starts a relative size span. The actual text size will be multiplied with the set Proportion.<x id="3"/></source>
<target xml:lang="zh"><g id="1">RelativeSize</g> (Proportion As Float)<x id="2"/>Starts a relative size span. The actual text size will be multiplied with the set Proportion.<x id="3"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1927" xml:space="preserve">
<source xml:lang="en"><g id="1">ScaleX</g> (Proportion As Float)<x id="2"/>Starts a scale X span. It horizontally scales the text.<x id="3"/></source>
<target xml:lang="zh"><g id="1">ScaleX</g> (Proportion As Float)<x id="2"/>Starts a scale X span. It horizontally scales the text.<x id="3"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1928" xml:space="preserve">
<source xml:lang="en"><g id="1">Size</g> (Size As Int)<x id="2"/>Starts a text size span. Note that you should not use 'dip' units with text size dimensions.<x id="3"/></source>
<target xml:lang="zh"><g id="1">Size</g> (Size As Int)<x id="2"/>Starts a text size span. Note that you should not use 'dip' units with text size dimensions.<x id="3"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1929" xml:space="preserve">
<source xml:lang="en"><g id="1">TypeFace</g> (Typeface As Typeface)<x id="2"/>Starts a custom typeface span.<x id="3"/>Similar to Font for B4i.</source>
<target xml:lang="zh"><g id="1">TypeFace</g> (Typeface As Typeface)<x id="2"/>Starts a custom typeface span.<x id="3"/>Similar to Font for B4i.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1930" xml:space="preserve">
<source xml:lang="en">B4i only</source>
<target xml:lang="zh">B4i only</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1931" xml:space="preserve">
<source xml:lang="en"> <g id="1">Font</g> (Font As B4IFontWrapper)<x id="2"/>Starts a font span. <x id="3"/>Note that when AutoScaleAll is called the font is reset.<x id="4"/>You should change the font in the parent Resize event or remove the call to AutoScaleAll from the layout designer script.<x id="5"/>Similar to TypeFace for B4A.<x id="6"/></source>
<target xml:lang="zh"> <g id="1">Font</g> (Font As B4IFontWrapper)<x id="2"/>Starts a font span. <x id="3"/>Note that when AutoScaleAll is called the font is reset.<x id="4"/>You should change the font in the parent Resize event or remove the call to AutoScaleAll from the layout designer script.<x id="5"/>Similar to TypeFace for B4A.<x id="6"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1932" xml:space="preserve">
<source xml:lang="en"><g id="1">KerningScale</g> (Scale As Float)<x id="2"/>Sets the kerning (horizontal spacing) scale.<x id="3"/></source>
<target xml:lang="zh"><g id="1">KerningScale</g> (Scale As Float)<x id="2"/>Sets the kerning (horizontal spacing) scale.<x id="3"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1933" xml:space="preserve">
<source xml:lang="en"><g id="1">Link</g> (URL As NSString)<x id="2"/>Creates a link. Links will be clickable in non-editable TextViews.<x id="3"/></source>
<target xml:lang="zh"><g id="1">Link</g> (URL As NSString)<x id="2"/>Creates a link. Links will be clickable in non-editable TextViews.<x id="3"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1934" xml:space="preserve">
<source xml:lang="en">B4J  TextFlow class</source>
<target xml:lang="zh">B4J  TextFlow class</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1935" xml:space="preserve">
<source xml:lang="en">The <g id="1">TextFlow Class</g> uses JavaObject to create a TextFlow node. With a TextFlow you can display rich text with different colors, fonts and other attributes.</source>
<target xml:lang="zh">The <g id="1">TextFlow Class</g> uses JavaObject to create a TextFlow node. With a TextFlow you can display rich text with different colors, fonts and other attributes.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1936" xml:space="preserve">
<source xml:lang="en">Usage:<x id="1"/>- Add the TextFlow class module to your project (Tools - Add Existing Module).<x id="2"/>- Create a TextFlow object.<x id="3"/>- Call AddText to add a text section and set its attributes.<x id="4"/>- Eventually you should call CreateTextFlow to create the node that will be added to the layout.<x id="5"/>Note that the set attributes return the class instance which allows chaining the calls.</source>
<target xml:lang="zh">Usage:<x id="1"/>- Add the TextFlow class module to your project (Tools - Add Existing Module).<x id="2"/>- Create a TextFlow object.<x id="3"/>- Call AddText to add a text section and set its attributes.<x id="4"/>- Eventually you should call CreateTextFlow to create the node that will be added to the layout.<x id="5"/>Note that the set attributes return the class instance which allows chaining the calls.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1937" xml:space="preserve">
<source xml:lang="en">Example code:</source>
<target xml:lang="zh">Example code:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1938" xml:space="preserve">
<source xml:lang="en">Dim<g id="1"> tf </g>As<g id="2"> TextFlow<x id="3"/>tf.Initialize<x id="4"/>tf.AddText(</g><g id="5">"1 2 3"</g><g id="6">).SetColor(fx.Colors.Red).SetUnderline(</g>True<g id="7">)<x id="8"/>tf.AddText(</g><g id="9">" 4 5 6 "</g><g id="10">).SetColor(fx.Colors.Green).SetFont(fx.CreateFont(</g><g id="11">""</g><g id="12">, </g><g id="13">17</g><g id="14">, </g>True<g id="15">, </g>True<g id="16">))<x id="17"/>tf.AddText(</g><g id="18">"7 8 9"</g><g id="19">).SetColor(fx.Colors.Blue).SetStrikethrough(</g>True<g id="20">).SetFont(fx.DefaultFont(</g><g id="21">20</g><g id="22">))<x id="23"/></g>Dim<g id="24"> </g><g id="25">pane</g><g id="26"> </g>As<g id="27"> </g><g id="28">Pane</g><g id="29"> = tf.CreateTextFlow<x id="30"/>MainForm.RootPane.AddNode(</g><g id="31">pane</g><g id="32">, </g><g id="33">10</g><g id="34">, </g><g id="35">10</g><g id="36">, </g><g id="37">200</g><g id="38">, </g><g id="39">100</g><g id="40">)</g></source>
<target xml:lang="zh">Dim<g id="1"> tf </g>As<g id="2"> TextFlow<x id="3"/>tf.Initialize<x id="4"/>tf.AddText(</g><g id="5">"1 2 3"</g><g id="6">).SetColor(fx.Colors.Red).SetUnderline(</g>True<g id="7">)<x id="8"/>tf.AddText(</g><g id="9">" 4 5 6 "</g><g id="10">).SetColor(fx.Colors.Green).SetFont(fx.CreateFont(</g><g id="11">""</g><g id="12">, </g><g id="13">17</g><g id="14">, </g>True<g id="15">, </g>True<g id="16">))<x id="17"/>tf.AddText(</g><g id="18">"7 8 9"</g><g id="19">).SetColor(fx.Colors.Blue).SetStrikethrough(</g>True<g id="20">).SetFont(fx.DefaultFont(</g><g id="21">20</g><g id="22">))<x id="23"/></g>Dim<g id="24"> </g><g id="25">pane</g><g id="26"> </g>As<g id="27"> </g><g id="28">Pane</g><g id="29"> = tf.CreateTextFlow<x id="30"/>MainForm.RootPane.AddNode(</g><g id="31">pane</g><g id="32">, </g><g id="33">10</g><g id="34">, </g><g id="35">10</g><g id="36">, </g><g id="37">200</g><g id="38">, </g><g id="39">100</g><g id="40">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1939" xml:space="preserve">
<source xml:lang="en">B4R</source>
<target xml:lang="zh">B4R</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1940" xml:space="preserve">
<source xml:lang="en">B4R doesn’t support string manipulations like other Basic languages.</source>
<target xml:lang="zh">B4R doesn’t support string manipulations like other Basic languages.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1941" xml:space="preserve">
<source xml:lang="en">These kind of manipulations can be done with the ByteConverter object in the rRandomAccesFile library.</source>
<target xml:lang="zh">These kind of manipulations can be done with the ByteConverter object in the rRandomAccesFile library.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1942" xml:space="preserve">
<source xml:lang="en">B4R strings are different than in other B4X tools. The reasons for these differences are:</source>
<target xml:lang="zh">B4R strings are different than in other B4X tools. The reasons for these differences are:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1943" xml:space="preserve">
<source xml:lang="en">Very limited memory.</source>
<target xml:lang="zh">Very limited memory.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1944" xml:space="preserve">
<source xml:lang="en">Lack of Unicode encoders.<x id="1"/></source>
<target xml:lang="zh">Lack of Unicode encoders.<x id="1"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1945" xml:space="preserve">
<source xml:lang="en">A String object in B4R is the same as a C language char* string. It is an array of bytes with an additional zero byte at the end.<x id="1"/>The requirement of the last zero byte makes it impossible to create a substring without copying the memory to a new address. </source>
<target xml:lang="zh">A String object in B4R is the same as a C language char* string. It is an array of bytes with an additional zero byte at the end.<x id="1"/>The requirement of the last zero byte makes it impossible to create a substring without copying the memory to a new address. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1946" xml:space="preserve">
<source xml:lang="en"><g id="1">For that reason, arrays of bytes are preferable over Strings</g>. </source>
<target xml:lang="zh"><g id="1">For that reason, arrays of bytes are preferable over Strings</g>. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1947" xml:space="preserve">
<source xml:lang="en">The various string related methods work with arrays of bytes.<x id="1"/>Converting a string to an array of bytes is very simple and doesn't involve any memory copying. The compiler will do it automatically when needed:</source>
<target xml:lang="zh">The various string related methods work with arrays of bytes.<x id="1"/>Converting a string to an array of bytes is very simple and doesn't involve any memory copying. The compiler will do it automatically when needed:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1948" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> b() </g>As<g id="2"> Byte = </g><g id="3">"abc"</g><g id="4"> </g><g id="5">'equivalent to Private b() As Byte = "abc".GetBytes</g></source>
<target xml:lang="zh">Private<g id="1"> b() </g>As<g id="2"> Byte = </g><g id="3">"abc"</g><g id="4"> </g><g id="5">'equivalent to Private b() As Byte = "abc".GetBytes</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1949" xml:space="preserve">
<source xml:lang="en">Only two functions are supported:</source>
<target xml:lang="zh">Only two functions are supported:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1950" xml:space="preserve">
<source xml:lang="en">These functions are:</source>
<target xml:lang="zh">These functions are:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1951" xml:space="preserve">
<source xml:lang="en"><g id="1">GetBytes(Charset)</g><x id="2"/>Returns the string content as an array of bytes.<x id="3"/>     <x id="4"/>Note that the array and string share the same memory</source>
<target xml:lang="zh"><g id="1">GetBytes(Charset)</g><x id="2"/>Returns the string content as an array of bytes.<x id="3"/>     <x id="4"/>Note that the array and string share the same memory</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1952" xml:space="preserve">
<source xml:lang="en"><g id="1">Length</g><x id="2"/>Returns the length, number of characters, of the string.</source>
<target xml:lang="zh"><g id="1">Length</g><x id="2"/>Returns the length, number of characters, of the string.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1954" xml:space="preserve">
<source xml:lang="en"><g id="1">String Methods</g><x id="2"/>The standard string methods are available in ByteConverter type (rRandomAccessFile library).<x id="3"/>They are similar to the string methods in other B4X tools:</source>
<target xml:lang="zh"><g id="1">String Methods</g><x id="2"/>The standard string methods are available in ByteConverter type (rRandomAccessFile library).<x id="3"/>They are similar to the string methods in other B4X tools:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1955" xml:space="preserve">
<source xml:lang="en">Private Sub <g id="1">AppStart<x id="2"/>   Serial1.Initialize(</g><g id="3">115200</g><g id="4">)<x id="5"/>   </g>Log<g id="6">(</g><g id="7">"AppStart"</g><g id="8">)   <x id="9"/>   </g>Dim<g id="10"> bc </g>As<g id="11"> </g><g id="12">ByteConverter</g><g id="13"><x id="14"/>   </g>Log<g id="15">(</g><g id="16">"IndexOf: "</g><g id="17">, bc.IndexOf(</g><g id="18">"0123456"</g><g id="19">, </g><g id="20">"3"</g><g id="21">)) </g><g id="22">'IndexOf: 3<x id="23"/></g><g id="24">   </g>Dim<g id="25"> b() </g>As<g id="26"> Byte = </g><g id="27">" abc,def,ghijkl "</g><g id="28"><x id="29"/>   </g>Log<g id="30">(</g><g id="31">"Substring: "</g><g id="32">, bc.SubString(b, </g><g id="33">3</g><g id="34">)) </g><g id="35">'Substring: c,def,ghijkl<x id="36"/></g><g id="37">   </g>Log<g id="38">(</g><g id="39">"Trim: "</g><g id="40">, bc.Trim(b)) </g><g id="41">'Trim: abc,def,ghijkl<x id="42"/></g><g id="43">   </g>For<g id="44"> </g>Each<g id="45"> s() </g>As<g id="46"> Byte </g>In<g id="47"> bc.Split(b, </g><g id="48">","</g><g id="49">)<x id="50"/>     </g>Log<g id="51">(</g><g id="52">"Split: "</g><g id="53">, s)<x id="54"/>     </g><g id="55">'Split: abc<x id="56"/></g><g id="57">     </g><g id="58">'Split: def<x id="59"/></g><g id="60">     </g><g id="61">'Split: ghijkl<x id="62"/></g><g id="63">   </g>Next<g id="64"><x id="65"/>   </g>Dim<g id="66"> c </g>As<g id="67"> </g><g id="68">String</g><g id="69"> = JoinStrings(</g>Array<g id="70"> </g>As<g id="71"> </g><g id="72">String</g><g id="73">(</g><g id="74">"Number of millis: "</g><g id="75">, Millis, </g>CRLF<g id="76">, </g><g id="77">"Number of micros: "</g><g id="78">, Micros))<x id="79"/>   </g>Log<g id="80">(</g><g id="81">"c = "</g><g id="82">, c)<x id="83"/>   </g>Dim<g id="84"> b() </g>As<g id="85"> Byte = bc.SubString2(c, </g><g id="86">0</g><g id="87">, </g><g id="88">5</g><g id="89">)<x id="90"/>   b(</g><g id="91">0</g><g id="92">) = </g>Asc<g id="93">(</g><g id="94">"X"</g><g id="95">)<x id="96"/>   </g>Log<g id="97">(</g><g id="98">"b = "</g><g id="99">, b)<x id="100"/>   </g>Log<g id="101">(</g><g id="102">"c = "</g><g id="103">, c) </g><g id="104">'first character will be X<x id="105"/></g>End Sub</source>
<target xml:lang="zh">Private Sub <g id="1">AppStart<x id="2"/>   Serial1.Initialize(</g><g id="3">115200</g><g id="4">)<x id="5"/>   </g>Log<g id="6">(</g><g id="7">"AppStart"</g><g id="8">)   <x id="9"/>   </g>Dim<g id="10"> bc </g>As<g id="11"> </g><g id="12">ByteConverter</g><g id="13"><x id="14"/>   </g>Log<g id="15">(</g><g id="16">"IndexOf: "</g><g id="17">, bc.IndexOf(</g><g id="18">"0123456"</g><g id="19">, </g><g id="20">"3"</g><g id="21">)) </g><g id="22">'IndexOf: 3<x id="23"/></g><g id="24">   </g>Dim<g id="25"> b() </g>As<g id="26"> Byte = </g><g id="27">" abc,def,ghijkl "</g><g id="28"><x id="29"/>   </g>Log<g id="30">(</g><g id="31">"Substring: "</g><g id="32">, bc.SubString(b, </g><g id="33">3</g><g id="34">)) </g><g id="35">'Substring: c,def,ghijkl<x id="36"/></g><g id="37">   </g>Log<g id="38">(</g><g id="39">"Trim: "</g><g id="40">, bc.Trim(b)) </g><g id="41">'Trim: abc,def,ghijkl<x id="42"/></g><g id="43">   </g>For<g id="44"> </g>Each<g id="45"> s() </g>As<g id="46"> Byte </g>In<g id="47"> bc.Split(b, </g><g id="48">","</g><g id="49">)<x id="50"/>     </g>Log<g id="51">(</g><g id="52">"Split: "</g><g id="53">, s)<x id="54"/>     </g><g id="55">'Split: abc<x id="56"/></g><g id="57">     </g><g id="58">'Split: def<x id="59"/></g><g id="60">     </g><g id="61">'Split: ghijkl<x id="62"/></g><g id="63">   </g>Next<g id="64"><x id="65"/>   </g>Dim<g id="66"> c </g>As<g id="67"> </g><g id="68">String</g><g id="69"> = JoinStrings(</g>Array<g id="70"> </g>As<g id="71"> </g><g id="72">String</g><g id="73">(</g><g id="74">"Number of millis: "</g><g id="75">, Millis, </g>CRLF<g id="76">, </g><g id="77">"Number of micros: "</g><g id="78">, Micros))<x id="79"/>   </g>Log<g id="80">(</g><g id="81">"c = "</g><g id="82">, c)<x id="83"/>   </g>Dim<g id="84"> b() </g>As<g id="85"> Byte = bc.SubString2(c, </g><g id="86">0</g><g id="87">, </g><g id="88">5</g><g id="89">)<x id="90"/>   b(</g><g id="91">0</g><g id="92">) = </g>Asc<g id="93">(</g><g id="94">"X"</g><g id="95">)<x id="96"/>   </g>Log<g id="97">(</g><g id="98">"b = "</g><g id="99">, b)<x id="100"/>   </g>Log<g id="101">(</g><g id="102">"c = "</g><g id="103">, c) </g><g id="104">'first character will be X<x id="105"/></g>End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1956" xml:space="preserve">
<source xml:lang="en">Note how both strings and array of bytes can be used as the compiler converts strings to arrays of bytes automatically.<x id="1"/>With the exception of JoinStrings, none of the above methods make a copy of the original string / bytes.<x id="2"/>This means that modifying the returned array as in the last three lines will also modify the original array.<x id="3"/>It will also happen with string literals that all share the same memory block:</source>
<target xml:lang="zh">Note how both strings and array of bytes can be used as the compiler converts strings to arrays of bytes automatically.<x id="1"/>With the exception of JoinStrings, none of the above methods make a copy of the original string / bytes.<x id="2"/>This means that modifying the returned array as in the last three lines will also modify the original array.<x id="3"/>It will also happen with string literals that all share the same memory block:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1957" xml:space="preserve">
<source xml:lang="en">Private Sub <g id="1">AppStart</g></source>
<target xml:lang="zh">Private Sub <g id="1">AppStart</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1958" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Serial1.Initialize(<g id="2">115200</g>)</source>
<target xml:lang="zh"><x id="1"/>Serial1.Initialize(<g id="2">115200</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1959" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Log<g id="2">(</g><g id="3">"AppStart"</g><g id="4">)</g></source>
<target xml:lang="zh"><x id="1"/>Log<g id="2">(</g><g id="3">"AppStart"</g><g id="4">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1960" xml:space="preserve">
<source xml:lang="en"><g id="1">Dim</g> bc <g id="2">As</g> <g id="3">ByteConverter</g></source>
<target xml:lang="zh"><g id="1">Dim</g> bc <g id="2">As</g> <g id="3">ByteConverter</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1961" xml:space="preserve">
<source xml:lang="en"><g id="1">Dim</g><g id="2"> b() </g><g id="3">As</g><g id="4"> Byte = bc.Trim(</g><g id="5">"abcdef "</g><g id="6">)</g></source>
<target xml:lang="zh"><g id="1">Dim</g><g id="2"> b() </g><g id="3">As</g><g id="4"> Byte = bc.Trim(</g><g id="5">"abcdef "</g><g id="6">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1962" xml:space="preserve">
<source xml:lang="en"><x id="1"/>b(<g id="2">0</g>) = <g id="3">Asc</g>(<g id="4">"M"</g>) <g id="5">'this line will change the value of the literal string</g></source>
<target xml:lang="zh"><x id="1"/>b(<g id="2">0</g>) = <g id="3">Asc</g>(<g id="4">"M"</g>) <g id="5">'this line will change the value of the literal string</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1963" xml:space="preserve">
<source xml:lang="en"><g id="1">Dim</g><g id="2"> s </g><g id="3">as</g><g id="4"> </g><g id="5">String</g><g id="6"> = </g><g id="7">"abcdef "</g></source>
<target xml:lang="zh"><g id="1">Dim</g><g id="2"> s </g><g id="3">as</g><g id="4"> </g><g id="5">String</g><g id="6"> = </g><g id="7">"abcdef "</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1964" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g><g id="2">(s) </g><g id="3">'Mbcdef<x id="4"/></g><g id="5">End Sub</g></source>
<target xml:lang="zh"><g id="1">Log</g><g id="2">(s) </g><g id="3">'Mbcdef<x id="4"/></g><g id="5">End Sub</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1965" xml:space="preserve">
<source xml:lang="en">String manipulations in the ByteConverter object in the rRandomAccessFile library:</source>
<target xml:lang="zh">String manipulations in the ByteConverter object in the rRandomAccessFile library:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1966" xml:space="preserve">
<source xml:lang="en"><g id="1">EndsWith(Source As Byte(), Suffix As Byte())</g><x id="2"/>Returns True if the string ends with the given Suffix substring.</source>
<target xml:lang="zh"><g id="1">EndsWith(Source As Byte(), Suffix As Byte())</g><x id="2"/>Returns True if the string ends with the given Suffix substring.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1967" xml:space="preserve">
<source xml:lang="en"><g id="1">IndexOf(Source As Byte(), SearchFor As Byte())</g><x id="2"/>Returns the index of the first occurrence of SearchFor in the    string.</source>
<target xml:lang="zh"><g id="1">IndexOf(Source As Byte(), SearchFor As Byte())</g><x id="2"/>Returns the index of the first occurrence of SearchFor in the    string.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1968" xml:space="preserve">
<source xml:lang="en"><g id="1">IndexOf2(Source As Byte(), SearchFor As Byte(), Index As UInt)</g><x id="2"/>Returns the index of the first occurrence of SearchFor in the string. Starts searching from the given index.</source>
<target xml:lang="zh"><g id="1">IndexOf2(Source As Byte(), SearchFor As Byte(), Index As UInt)</g><x id="2"/>Returns the index of the first occurrence of SearchFor in the string. Starts searching from the given index.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1969" xml:space="preserve">
<source xml:lang="en"><g id="1">LastIndexOf(Source As Byte(), SearchFor As Byte())</g><x id="2"/>Returns the index of the first occurrence of SearchFor in the Source string. Starts searching from the end of the string.</source>
<target xml:lang="zh"><g id="1">LastIndexOf(Source As Byte(), SearchFor As Byte())</g><x id="2"/>Returns the index of the first occurrence of SearchFor in the Source string. Starts searching from the end of the string.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1970" xml:space="preserve">
<source xml:lang="en"><g id="1">LastIndexOf2(Source As Byte(), SearchFor As Byte(), Index As UInt)</g><x id="2"/>Returns the index of the first occurrence of SearchFor in the Source string. Starts searching from the given index and advances to the beginning.</source>
<target xml:lang="zh"><g id="1">LastIndexOf2(Source As Byte(), SearchFor As Byte(), Index As UInt)</g><x id="2"/>Returns the index of the first occurrence of SearchFor in the Source string. Starts searching from the given index and advances to the beginning.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1971" xml:space="preserve">
<source xml:lang="en"><g id="1">StartsWith(Source As Byte(), Prefix As Byte())</g><x id="2"/>Returns True if this string starts with the given Prefix.</source>
<target xml:lang="zh"><g id="1">StartsWith(Source As Byte(), Prefix As Byte())</g><x id="2"/>Returns True if this string starts with the given Prefix.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1972" xml:space="preserve">
<source xml:lang="en"><g id="1">Substring(Source As Byte(), BeginIndex As UInt)</g><x id="2"/>Returns a new string which is a substring of the original string.<x id="3"/>The new string will include the character at BeginIndex and will extend to the end of the string.</source>
<target xml:lang="zh"><g id="1">Substring(Source As Byte(), BeginIndex As UInt)</g><x id="2"/>Returns a new string which is a substring of the original string.<x id="3"/>The new string will include the character at BeginIndex and will extend to the end of the string.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1973" xml:space="preserve">
<source xml:lang="en"><g id="1">Substring2(Source As Byte(), BeginIndex As UInt, EndIndex As UInt)<x id="2"/></g><x id="3"/>Returns a new string which is a substring of the original string. The new string will include the character at BeginIndex and will extend to the character at EndIndex, not including the last character.</source>
<target xml:lang="zh"><g id="1">Substring2(Source As Byte(), BeginIndex As UInt, EndIndex As UInt)<x id="2"/></g><x id="3"/>Returns a new string which is a substring of the original string. The new string will include the character at BeginIndex and will extend to the character at EndIndex, not including the last character.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1974" xml:space="preserve">
<source xml:lang="en"><g id="1">Trim(Source As Byte())</g><x id="2"/>Returns a copy of the original string without any leading or trailing white spaces.</source>
<target xml:lang="zh"><g id="1">Trim(Source As Byte())</g><x id="2"/>Returns a copy of the original string without any leading or trailing white spaces.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1975" xml:space="preserve">
<source xml:lang="en">Number formatting</source>
<target xml:lang="zh">Number formatting</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1976" xml:space="preserve">
<source xml:lang="en">B4A, B4i, B4J</source>
<target xml:lang="zh">B4A, B4i, B4J</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1977" xml:space="preserve">
<source xml:lang="en">Number formatting, display numbers as strings with different formats, there are two keywords:</source>
<target xml:lang="zh">Number formatting, display numbers as strings with different formats, there are two keywords:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1978" xml:space="preserve">
<source xml:lang="en"><g id="1">NumberFormat</g>(Number As Double, MinimumIntegers As Int, MaximumFractions As Int)<x id="2"/><g id="3">NumberFormat(12345.6789, 0, 2)</g><x id="4"/>=  12,345.68<x id="5"/><g id="6">NumberFormat(1, 3 ,0)</g><x id="7"/>=   001<x id="8"/><g id="9">NumberFormat(Value, 3 ,0)</g><x id="10"/>variables can be used.<x id="11"/><g id="12">NumberFormat(Value + 10, 3 ,0)</g><x id="13"/>arithmetic operations can be used.<x id="14"/><g id="15">NumberFormat((lblscore.Text + 10), 0, 0)</g> if one variable is a string add parentheses.<x id="16"/></source>
<target xml:lang="zh"><g id="1">NumberFormat</g>(Number As Double, MinimumIntegers As Int, MaximumFractions As Int)<x id="2"/><g id="3">NumberFormat(12345.6789, 0, 2)</g><x id="4"/>=  12,345.68<x id="5"/><g id="6">NumberFormat(1, 3 ,0)</g><x id="7"/>=   001<x id="8"/><g id="9">NumberFormat(Value, 3 ,0)</g><x id="10"/>variables can be used.<x id="11"/><g id="12">NumberFormat(Value + 10, 3 ,0)</g><x id="13"/>arithmetic operations can be used.<x id="14"/><g id="15">NumberFormat((lblscore.Text + 10), 0, 0)</g> if one variable is a string add parentheses.<x id="16"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1979" xml:space="preserve">
<source xml:lang="en"><g id="1">NumberFormat2</g>(Number As Double, MinimumIntegers As Int, MaximumFractions As Int, MinimumFractions As Int, GroupingUsed As Boolean)<x id="2"/><g id="3">NumberFormat2(12345.67, 0, 3, 3, True)</g> <x id="4"/>=  12,345.670<x id="5"/><g id="6">NumberFormat2(12345.67, 0, 3, 3, False)</g> <x id="7"/>=  12345.670</source>
<target xml:lang="zh"><g id="1">NumberFormat2</g>(Number As Double, MinimumIntegers As Int, MaximumFractions As Int, MinimumFractions As Int, GroupingUsed As Boolean)<x id="2"/><g id="3">NumberFormat2(12345.67, 0, 3, 3, True)</g> <x id="4"/>=  12,345.670<x id="5"/><g id="6">NumberFormat2(12345.67, 0, 3, 3, False)</g> <x id="7"/>=  12345.670</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1980" xml:space="preserve">
<source xml:lang="en">B4X NumberFormatter</source>
<target xml:lang="zh">B4X NumberFormatter</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1981" xml:space="preserve">
<source xml:lang="en"><g id="1">B4XFormatter</g> is an alternative to NumberFormat / NumberFormat2 keywords. It is implemented in B4X as a b4xlib and it is cross platform.<x id="2"/>There are two types in the library:<x id="3"/>B4XFormatter - The main class.<x id="4"/>B4XFormatData - A type with various configurable fields.<x id="5"/>The formatter holds a list of format data objects. A new formatter starts with a single format data which acts as the default format.</source>
<target xml:lang="zh"><g id="1">B4XFormatter</g> is an alternative to NumberFormat / NumberFormat2 keywords. It is implemented in B4X as a b4xlib and it is cross platform.<x id="2"/>There are two types in the library:<x id="3"/>B4XFormatter - The main class.<x id="4"/>B4XFormatData - A type with various configurable fields.<x id="5"/>The formatter holds a list of format data objects. A new formatter starts with a single format data which acts as the default format.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1982" xml:space="preserve">
<source xml:lang="en">B4R</source>
<target xml:lang="zh">B4R</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1983" xml:space="preserve">
<source xml:lang="en"><g id="1">Number formatting</g>, display numbers as strings with different formats:</source>
<target xml:lang="zh"><g id="1">Number formatting</g>, display numbers as strings with different formats:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1984" xml:space="preserve">
<source xml:lang="en"><g id="1">NumberFormat</g>(Number As Double, MinimumIntegers As Int, MaximumFractions As Int)<x id="2"/><g id="3">NumberFormat(12345.6789, 0, 2)</g><x id="4"/>=  12,345.68<x id="5"/><g id="6">NumberFormat(1, 3 ,0)</g><x id="7"/>=   001<x id="8"/><g id="9">NumberFormat(Value, 3 ,0)</g><x id="10"/>variables can be used.<x id="11"/><g id="12">NumberFormat(Value + 10, 3 ,0)</g><x id="13"/>arithmetic operations can be used.<x id="14"/><g id="15">NumberFormat((lblscore.Text + 10), 0, 0)</g> if one variable is a string add parentheses.<x id="16"/></source>
<target xml:lang="zh"><g id="1">NumberFormat</g>(Number As Double, MinimumIntegers As Int, MaximumFractions As Int)<x id="2"/><g id="3">NumberFormat(12345.6789, 0, 2)</g><x id="4"/>=  12,345.68<x id="5"/><g id="6">NumberFormat(1, 3 ,0)</g><x id="7"/>=   001<x id="8"/><g id="9">NumberFormat(Value, 3 ,0)</g><x id="10"/>variables can be used.<x id="11"/><g id="12">NumberFormat(Value + 10, 3 ,0)</g><x id="13"/>arithmetic operations can be used.<x id="14"/><g id="15">NumberFormat((lblscore.Text + 10), 0, 0)</g> if one variable is a string add parentheses.<x id="16"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1985" xml:space="preserve">
<source xml:lang="en"> <x id="1"/>Timers</source>
<target xml:lang="zh"> <x id="1"/>Timers</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1986" xml:space="preserve">
<source xml:lang="en">A Timer object generates Tick events at specified intervals. Using a timer is a good alternative to a long loop, as it allows the UI thread to handle other events and messages.<x id="1"/>Note that the timer events will not fire while the UI thread is busy running other code.<x id="2"/>Timer events will not fire when the activity is paused, or if a blocking dialog (like Msgbox) is visible.<x id="3"/>It is also important, in B4A, to disable the timer when the activity is pausing and then enable it when it resumes. This will save CPU and battery.</source>
<target xml:lang="zh">A Timer object generates Tick events at specified intervals. Using a timer is a good alternative to a long loop, as it allows the UI thread to handle other events and messages.<x id="1"/>Note that the timer events will not fire while the UI thread is busy running other code.<x id="2"/>Timer events will not fire when the activity is paused, or if a blocking dialog (like Msgbox) is visible.<x id="3"/>It is also important, in B4A, to disable the timer when the activity is pausing and then enable it when it resumes. This will save CPU and battery.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1987" xml:space="preserve">
<source xml:lang="en">A timer has:</source>
<target xml:lang="zh">A timer has:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1988" xml:space="preserve">
<source xml:lang="en">Three parameters.</source>
<target xml:lang="zh">Three parameters.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1989" xml:space="preserve">
<source xml:lang="en"><g id="1">Initialize</g><x id="2"/>Initializes the timer with two parameters, the EventName and the interval. <x id="3"/>Timer1.Initialize(EventName As String, Interval As Long)<x id="4"/>Ex: <x id="5"/><g id="6">Timer1.Initialize(</g><g id="7">"Timer1"</g><g id="8">, </g><g id="9">1000</g><g id="10">)<x id="11"/></g></source>
<target xml:lang="zh"><g id="1">Initialize</g><x id="2"/>Initializes the timer with two parameters, the EventName and the interval. <x id="3"/>Timer1.Initialize(EventName As String, Interval As Long)<x id="4"/>Ex: <x id="5"/><g id="6">Timer1.Initialize(</g><g id="7">"Timer1"</g><g id="8">, </g><g id="9">1000</g><g id="10">)<x id="11"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1990" xml:space="preserve">
<source xml:lang="en"><g id="1">Interval</g><x id="2"/>Sets the timer interval in milli-seconds.<x id="3"/>Timer1. Interval = Interval<x id="4"/>Ex: <x id="5"/><g id="6">Timer1.Interval = </g><g id="7">1000</g>, 1 second<x id="8"/></source>
<target xml:lang="zh"><g id="1">Interval</g><x id="2"/>Sets the timer interval in milli-seconds.<x id="3"/>Timer1. Interval = Interval<x id="4"/>Ex: <x id="5"/><g id="6">Timer1.Interval = </g><g id="7">1000</g>, 1 second<x id="8"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1991" xml:space="preserve">
<source xml:lang="en"><g id="1">Enabled</g><x id="2"/>Enables or disables the timer. <g id="3">It is False by default.</g><x id="4"/>Ex: <x id="5"/><g id="6">Timer1.Enabled = </g><g id="7">True<x id="8"/></g></source>
<target xml:lang="zh"><g id="1">Enabled</g><x id="2"/>Enables or disables the timer. <g id="3">It is False by default.</g><x id="4"/>Ex: <x id="5"/><g id="6">Timer1.Enabled = </g><g id="7">True<x id="8"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1992" xml:space="preserve">
<source xml:lang="en">One Event</source>
<target xml:lang="zh">One Event</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1993" xml:space="preserve">
<source xml:lang="en"><g id="1">Tick<x id="2"/></g>The Tick routine is called every time interval.<x id="3"/>Ex: <x id="4"/><g id="5">Sub </g><g id="6">Timer1_Tick<x id="7"/></g></source>
<target xml:lang="zh"><g id="1">Tick<x id="2"/></g>The Tick routine is called every time interval.<x id="3"/>Ex: <x id="4"/><g id="5">Sub </g><g id="6">Timer1_Tick<x id="7"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1994" xml:space="preserve">
<source xml:lang="en">The Timer must be declared in a Process_Global routine.</source>
<target xml:lang="zh">The Timer must be declared in a Process_Global routine.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1995" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Process_Globals</g></source>
<target xml:lang="zh">Sub <g id="1">Process_Globals</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1996" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g> <g id="2">Timer1</g> <g id="3">As</g> <g id="4">Timer</g></source>
<target xml:lang="zh"><g id="1">Public</g> <g id="2">Timer1</g> <g id="3">As</g> <g id="4">Timer</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1997" xml:space="preserve">
<source xml:lang="en">But it must be initialized in one of the following routines in the module where the timer tick event routine is used.</source>
<target xml:lang="zh">But it must be initialized in one of the following routines in the module where the timer tick event routine is used.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1998" xml:space="preserve">
<source xml:lang="en"><g id="1">B4A:  </g>Activity_Create routine</source>
<target xml:lang="zh"><g id="1">B4A:  </g>Activity_Create routine</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu1999" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Activity_Create</g><g id="2">(FirstTime </g>As<g id="3"> </g><g id="4">Boolean</g><g id="5">)</g></source>
<target xml:lang="zh">Sub <g id="1">Activity_Create</g><g id="2">(FirstTime </g>As<g id="3"> </g><g id="4">Boolean</g><g id="5">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2000" xml:space="preserve">
<source xml:lang="en"><g id="1">If</g> FirstTime = <g id="2">True</g> <g id="3">Then</g></source>
<target xml:lang="zh"><g id="1">If</g> FirstTime = <g id="2">True</g> <g id="3">Then</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2001" xml:space="preserve">
<source xml:lang="en"><g id="1">Timer1</g>.Initialize(<g id="2">"Timer1"</g>, <g id="3">1000</g>)</source>
<target xml:lang="zh"><g id="1">Timer1</g>.Initialize(<g id="2">"Timer1"</g>, <g id="3">1000</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2002" xml:space="preserve">
<source xml:lang="en"><g id="1">End</g> <g id="2">If</g></source>
<target xml:lang="zh"><g id="1">End</g> <g id="2">If</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2003" xml:space="preserve">
<source xml:lang="en"><g id="1">B4i:  </g><g id="2">Application_Start</g><g id="3"> </g>routine</source>
<target xml:lang="zh"><g id="1">B4i:  </g><g id="2">Application_Start</g><g id="3"> </g>routine</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2004" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> </g>Sub<g id="2"> <g id="3">Application_Start</g> (Nav </g>As<g id="4"> </g><g id="5">NavigationController</g><g id="6">)</g></source>
<target xml:lang="zh">Private<g id="1"> </g>Sub<g id="2"> <g id="3">Application_Start</g> (Nav </g>As<g id="4"> </g><g id="5">NavigationController</g><g id="6">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2005" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Timer1.Initialize(<g id="2">"Timer1"</g>, <g id="3">1000</g>)</source>
<target xml:lang="zh"><x id="1"/>Timer1.Initialize(<g id="2">"Timer1"</g>, <g id="3">1000</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2006" xml:space="preserve">
<source xml:lang="en"><g id="1">B4J:  </g>AppStart routine<g id="2"> </g></source>
<target xml:lang="zh"><g id="1">B4J:  </g>AppStart routine<g id="2"> </g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2007" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">AppStart</g> (Form1 </g>As<g id="3"> </g><g id="4">Form</g><g id="5">, Args() </g>As<g id="6"> </g><g id="7">String</g><g id="8">)</g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">AppStart</g> (Form1 </g>As<g id="3"> </g><g id="4">Form</g><g id="5">, Args() </g>As<g id="6"> </g><g id="7">String</g><g id="8">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2008" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Timer1.Initialize(<g id="2">"Timer1_Tick"</g>, <g id="3">1000</g>)</source>
<target xml:lang="zh"><x id="1"/>Timer1.Initialize(<g id="2">"Timer1_Tick"</g>, <g id="3">1000</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2009" xml:space="preserve">
<source xml:lang="en"><g id="1">B4R:  </g>AppStart routine<g id="2"> </g></source>
<target xml:lang="zh"><g id="1">B4R:  </g>AppStart routine<g id="2"> </g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2010" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> </g>Sub<g id="2"> <g id="3">AppStart</g></g></source>
<target xml:lang="zh">Private<g id="1"> </g>Sub<g id="2"> <g id="3">AppStart</g></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2011" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Timer1.Initialize(<g id="2">"Timer1"</g>, <g id="3">1000</g>)</source>
<target xml:lang="zh"><x id="1"/>Timer1.Initialize(<g id="2">"Timer1"</g>, <g id="3">1000</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2012" xml:space="preserve">
<source xml:lang="en">And the Timer Tick event routine. </source>
<target xml:lang="zh">And the Timer Tick event routine. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2013" xml:space="preserve">
<source xml:lang="en">This routine will be called every second (1000 milli-seconds) by the operating system.</source>
<target xml:lang="zh">This routine will be called every second (1000 milli-seconds) by the operating system.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2014" xml:space="preserve">
<source xml:lang="en">Private Sub <g id="1">Timer1_Tick</g></source>
<target xml:lang="zh">Private Sub <g id="1">Timer1_Tick</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2015" xml:space="preserve">
<source xml:lang="en"><g id="1">' Do something</g></source>
<target xml:lang="zh"><g id="1">' Do something</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2016" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2017" xml:space="preserve">
<source xml:lang="en">  <x id="1"/>Files  B4A, B4i, B4J</source>
<target xml:lang="zh">  <x id="1"/>Files  B4A, B4i, B4J</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2018" xml:space="preserve">
<source xml:lang="en">Many applications require access to a persistent storage. The two most common storage types are files and databases.<x id="1"/></source>
<target xml:lang="zh">Many applications require access to a persistent storage. The two most common storage types are files and databases.<x id="1"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2019" xml:space="preserve">
<source xml:lang="en">Android and iOS have their own file system. B4A nor B4i programs have access to files in the Windows system.</source>
<target xml:lang="zh">Android and iOS have their own file system. B4A nor B4i programs have access to files in the Windows system.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2020" xml:space="preserve">
<source xml:lang="en">To add files to your project you must add those in the IDE in the Files Tab. These files will be added to the project Files folder.</source>
<target xml:lang="zh">To add files to your project you must add those in the IDE in the Files Tab. These files will be added to the project Files folder.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2021" xml:space="preserve">
<source xml:lang="en">File object<x id="1"/>   </source>
<target xml:lang="zh">File object<x id="1"/>   </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2022" xml:space="preserve">
<source xml:lang="en">The predefined object <g id="1">File</g> has a number of functions for working with files.</source>
<target xml:lang="zh">The predefined object <g id="1">File</g> has a number of functions for working with files.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2023" xml:space="preserve">
<source xml:lang="en">File locations</source>
<target xml:lang="zh">File locations</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2024" xml:space="preserve">
<source xml:lang="en">There are several important locations where you can read or write files.</source>
<target xml:lang="zh">There are several important locations where you can read or write files.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2025" xml:space="preserve">
<source xml:lang="en"><g id="1">File.DirAssets</g><x id="2"/>The assets folder includes the files that were added with the file manager in the IDE. </source>
<target xml:lang="zh"><g id="1">File.DirAssets</g><x id="2"/>The assets folder includes the files that were added with the file manager in the IDE. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2026" xml:space="preserve">
<source xml:lang="en">It's the Files folder in the project folder.</source>
<target xml:lang="zh">It's the Files folder in the project folder.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2027" xml:space="preserve">
<source xml:lang="en"><g id="1">These files are read-only !</g> </source>
<target xml:lang="zh"><g id="1">These files are read-only !</g> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2028" xml:space="preserve">
<source xml:lang="en">You can not create new files in this folder (which is actually located inside the apk file).</source>
<target xml:lang="zh">You can not create new files in this folder (which is actually located inside the apk file).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2029" xml:space="preserve">
<source xml:lang="en">If you have a database file in the Dir.Assets folder you need to copy it to another folder before you can use it.</source>
<target xml:lang="zh">If you have a database file in the Dir.Assets folder you need to copy it to another folder before you can use it.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2030" xml:space="preserve">
<source xml:lang="en">  <x id="1"/>B4X</source>
<target xml:lang="zh">  <x id="1"/>B4X</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2031" xml:space="preserve">
<source xml:lang="en">To save data generated by the application and used only by the application you might use the xui, (jxui or ixui) library get the default folder.</source>
<target xml:lang="zh">To save data generated by the application and used only by the application you might use the xui, (jxui or ixui) library get the default folder.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2032" xml:space="preserve">
<source xml:lang="en">xui.DefaultFolder</source>
<target xml:lang="zh">xui.DefaultFolder</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2033" xml:space="preserve">
<source xml:lang="en">This folder is the same as:</source>
<target xml:lang="zh">This folder is the same as:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2034" xml:space="preserve">
<source xml:lang="en">B4A - Same as File.DirInternal.</source>
<target xml:lang="zh">B4A - Same as File.DirInternal.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2035" xml:space="preserve">
<source xml:lang="en">B4i  - Same as File.DirDocuments.</source>
<target xml:lang="zh">B4i  - Same as File.DirDocuments.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2036" xml:space="preserve">
<source xml:lang="en">B4J  - Same as File.DirData. <x id="1"/>You must first call SetDataFolder once before you can use this folder.<x id="2"/><g id="3">xui.<g id="4">SetDataFolder</g></g><g id="5">(AppName As String)</g></source>
<target xml:lang="zh">B4J  - Same as File.DirData. <x id="1"/>You must first call SetDataFolder once before you can use this folder.<x id="2"/><g id="3">xui.<g id="4">SetDataFolder</g></g><g id="5">(AppName As String)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2037" xml:space="preserve">
<source xml:lang="en">  <x id="1"/>B4A only</source>
<target xml:lang="zh">  <x id="1"/>B4A only</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2038" xml:space="preserve">
<source xml:lang="en"><g id="1">File.DirInternal / File.DirInternalCache<x id="2"/></g>These two folders are stored in the main memory of the device and are private to your application. Other applications cannot access these files.<x id="3"/>The cache folder may get deleted by the OS if it needs more space.<x id="4"/></source>
<target xml:lang="zh"><g id="1">File.DirInternal / File.DirInternalCache<x id="2"/></g>These two folders are stored in the main memory of the device and are private to your application. Other applications cannot access these files.<x id="3"/>The cache folder may get deleted by the OS if it needs more space.<x id="4"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2039" xml:space="preserve">
<source xml:lang="en"><g id="1">File.DirRootExternal<x id="2"/></g>The storage card root folder. In most cases this is an internal storage card and not an external SD card.<x id="3"/><g id="4">File.DirDefaultExternal<x id="5"/></g>The default folder for your application in the SD card.<x id="6"/>The folder is: &lt;storage card>/Android/data/&lt;package>/files/<x id="7"/>It will be created if required.</source>
<target xml:lang="zh"><g id="1">File.DirRootExternal<x id="2"/></g>The storage card root folder. In most cases this is an internal storage card and not an external SD card.<x id="3"/><g id="4">File.DirDefaultExternal<x id="5"/></g>The default folder for your application in the SD card.<x id="6"/>The folder is: &lt;storage card>/Android/data/&lt;package>/files/<x id="7"/>It will be created if required.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2040" xml:space="preserve">
<source xml:lang="en">Note that calling any of the two above properties will add the EXTERNAL_STORAGE permission to your application.<x id="1"/>Tip: You can check if there is a storage card and whether it is available with <g id="2">File.ExternalReadable</g> and <g id="3">File.ExternalWritable</g>.</source>
<target xml:lang="zh">Note that calling any of the two above properties will add the EXTERNAL_STORAGE permission to your application.<x id="1"/>Tip: You can check if there is a storage card and whether it is available with <g id="2">File.ExternalReadable</g> and <g id="3">File.ExternalWritable</g>.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2041" xml:space="preserve">
<source xml:lang="en">External storage.</source>
<target xml:lang="zh">External storage.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2042" xml:space="preserve">
<source xml:lang="en">You should use the RuntimePermissions library to get the best folder with:</source>
<target xml:lang="zh">You should use the RuntimePermissions library to get the best folder with:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2043" xml:space="preserve">
<source xml:lang="en">MyFolder = RuntimePermissions.GetSafeDirDefaultExternal(SubFolder As String)</source>
<target xml:lang="zh">MyFolder = RuntimePermissions.GetSafeDirDefaultExternal(SubFolder As String)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2044" xml:space="preserve">
<source xml:lang="en">Returns the path to the app's default folder on the secondary storage device.</source>
<target xml:lang="zh">Returns the path to the app's default folder on the secondary storage device.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2045" xml:space="preserve">
<source xml:lang="en">The path to File.DirInternal will be returned if there is no secondary storage available.</source>
<target xml:lang="zh">The path to File.DirInternal will be returned if there is no secondary storage available.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2046" xml:space="preserve">
<source xml:lang="en">It is a better alternative to File.DirDefaultExternal. </source>
<target xml:lang="zh">It is a better alternative to File.DirDefaultExternal. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2047" xml:space="preserve">
<source xml:lang="en">On Android 4.4+ no permission is required to access this folder.</source>
<target xml:lang="zh">On Android 4.4+ no permission is required to access this folder.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2048" xml:space="preserve">
<source xml:lang="en">SubFolder - A sub folder that will be created for your app. Pass an empty string if not needed.</source>
<target xml:lang="zh">SubFolder - A sub folder that will be created for your app. Pass an empty string if not needed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2049" xml:space="preserve">
<source xml:lang="en">Acces a file in external stroge devices has become cumbersome in Android.</source>
<target xml:lang="zh">Acces a file in external stroge devices has become cumbersome in Android.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2050" xml:space="preserve">
<source xml:lang="en">Erel has written a Class <g id="1">ExternalStorage - Access SD cards and USB sticks</g> to ‘simplify’ the access.</source>
<target xml:lang="zh">Erel has written a Class <g id="1">ExternalStorage - Access SD cards and USB sticks</g> to ‘simplify’ the access.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2051" xml:space="preserve">
<source xml:lang="en">Extract from Erels thread:</source>
<target xml:lang="zh">Extract from Erels thread:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2052" xml:space="preserve">
<source xml:lang="en">Before we start:<x id="1"/>1. External storage means a real sd card or a connected mass storage USB device.<x id="2"/>2. It has nothing to do with File.DirRootExternal / DirDefaultExternal which actually point to an internal storage.<x id="3"/>3. It has nothing to do with runtime permissions.<x id="4"/>4. You can use RuntimePermissions.GetAllSafeDirsExternal to directly access a specific folder on the SD card.<x id="5"/>5. The minimum version for this class is Android 5. It might work with Android 4.4 (change minSdkVersion if you like to try it).<x id="6"/></source>
<target xml:lang="zh">Before we start:<x id="1"/>1. External storage means a real sd card or a connected mass storage USB device.<x id="2"/>2. It has nothing to do with File.DirRootExternal / DirDefaultExternal which actually point to an internal storage.<x id="3"/>3. It has nothing to do with runtime permissions.<x id="4"/>4. You can use RuntimePermissions.GetAllSafeDirsExternal to directly access a specific folder on the SD card.<x id="5"/>5. The minimum version for this class is Android 5. It might work with Android 4.4 (change minSdkVersion if you like to try it).<x id="6"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2053" xml:space="preserve">
<source xml:lang="en">Starting from Android 4.4 it is no longer possible to directly access external storages.<x id="1"/>The only way to access these storages is through the Storage Access Framework (SAF), which is a quite complex and under-documented framework.</source>
<target xml:lang="zh">Starting from Android 4.4 it is no longer possible to directly access external storages.<x id="1"/>The only way to access these storages is through the Storage Access Framework (SAF), which is a quite complex and under-documented framework.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2054" xml:space="preserve">
<source xml:lang="en">The ExternalStorage class makes it simpler to work with SAF.</source>
<target xml:lang="zh">The ExternalStorage class makes it simpler to work with SAF.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2055" xml:space="preserve">
<source xml:lang="en">Usage:<x id="1"/>1. Call ExternalStorage.SelectDir. This will open a dialog that will allow the user to select the root folder. Once selected the uri of the root folder is stored and can be later used without requiring the user to select the folder again. Even after the device is booted.<x id="2"/>2. Wait For the ExternalFolderAvailable event.<x id="3"/>Now you can access the files under Storage.Root, including inside subfolders.<x id="4"/>3. Files are represented as a custom type named ExternalFile.<x id="5"/>4. The following operations are supported: ListFiles, Delete, CreateNewFile, FindFile, OpenInputStream and OpenOutputStream.<x id="6"/>See the attached example.<x id="7"/>Depends on: ContentResolver and JavaObject libraries.<x id="8"/>Add:</source>
<target xml:lang="zh">Usage:<x id="1"/>1. Call ExternalStorage.SelectDir. This will open a dialog that will allow the user to select the root folder. Once selected the uri of the root folder is stored and can be later used without requiring the user to select the folder again. Even after the device is booted.<x id="2"/>2. Wait For the ExternalFolderAvailable event.<x id="3"/>Now you can access the files under Storage.Root, including inside subfolders.<x id="4"/>3. Files are represented as a custom type named ExternalFile.<x id="5"/>4. The following operations are supported: ListFiles, Delete, CreateNewFile, FindFile, OpenInputStream and OpenOutputStream.<x id="6"/>See the attached example.<x id="7"/>Depends on: ContentResolver and JavaObject libraries.<x id="8"/>Add:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2056" xml:space="preserve">
<source xml:lang="en">#AdditionalJar<g id="1">: com.android.support:support-core-utils</g></source>
<target xml:lang="zh">#AdditionalJar<g id="1">: com.android.support:support-core-utils</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2058" xml:space="preserve">
<source xml:lang="en">  <x id="1"/>B4i only</source>
<target xml:lang="zh">  <x id="1"/>B4i only</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2059" xml:space="preserve">
<source xml:lang="en"><g id="1">File.DirDocuments<x id="2"/></g>The documents folder should only be used to store user generated content. It is possible to make this folder sharable through iTunes.</source>
<target xml:lang="zh"><g id="1">File.DirDocuments<x id="2"/></g>The documents folder should only be used to store user generated content. It is possible to make this folder sharable through iTunes.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2060" xml:space="preserve">
<source xml:lang="en">This folder is backed up by iTunes automatically.</source>
<target xml:lang="zh">This folder is backed up by iTunes automatically.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2061" xml:space="preserve">
<source xml:lang="en"><g id="1">File.DirLibrary<x id="2"/></g>The place for any non-user generated persistent files. This folder is backed up by iTunes automatically.</source>
<target xml:lang="zh"><g id="1">File.DirLibrary<x id="2"/></g>The place for any non-user generated persistent files. This folder is backed up by iTunes automatically.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2062" xml:space="preserve">
<source xml:lang="en">You can create a subfolder named Caches. Files under that folder will not be backed up.</source>
<target xml:lang="zh">You can create a subfolder named Caches. Files under that folder will not be backed up.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2063" xml:space="preserve">
<source xml:lang="en"><g id="1">File.DirTemp<x id="2"/></g>A temporary folder. Files in this folder are not backed up by iTunes and may be deleted from time to time.</source>
<target xml:lang="zh"><g id="1">File.DirTemp<x id="2"/></g>A temporary folder. Files in this folder are not backed up by iTunes and may be deleted from time to time.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2064" xml:space="preserve">
<source xml:lang="en">B4i Methods to access external resources or share to external apps.</source>
<target xml:lang="zh">B4i Methods to access external resources or share to external apps.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2065" xml:space="preserve">
<source xml:lang="en">This thread in the forum shows some methods to share files:</source>
<target xml:lang="zh">This thread in the forum shows some methods to share files:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2066" xml:space="preserve">
<source xml:lang="en"><g id="1">List of methods to access external resources or share to external apps.</g></source>
<target xml:lang="zh"><g id="1">List of methods to access external resources or share to external apps.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2067" xml:space="preserve">
<source xml:lang="en">   <x id="1"/>B4J only</source>
<target xml:lang="zh">   <x id="1"/>B4J only</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2068" xml:space="preserve">
<source xml:lang="en"><g id="1">File.DirApp<x id="2"/></g>Returns the application folder.</source>
<target xml:lang="zh"><g id="1">File.DirApp<x id="2"/></g>Returns the application folder.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2069" xml:space="preserve">
<source xml:lang="en"><g id="1">File.DirData<x id="2"/></g>Returns the path to a folder that is suitable for writing files.</source>
<target xml:lang="zh"><g id="1">File.DirData<x id="2"/></g>Returns the path to a folder that is suitable for writing files.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2070" xml:space="preserve">
<source xml:lang="en">On Windows, folders under Program Files are read-only. Therefore File.DirApp will be read-only as well.</source>
<target xml:lang="zh">On Windows, folders under Program Files are read-only. Therefore File.DirApp will be read-only as well.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2071" xml:space="preserve">
<source xml:lang="en">This method returns the same path as File.DirApp on non-Windows computers.</source>
<target xml:lang="zh">This method returns the same path as File.DirApp on non-Windows computers.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2072" xml:space="preserve">
<source xml:lang="en">On Windows it returns the path to the user data folder. For example:</source>
<target xml:lang="zh">On Windows it returns the path to the user data folder. For example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2073" xml:space="preserve">
<source xml:lang="en">C:\Users\[user name]\AppData\Roaming\[AppName]</source>
<target xml:lang="zh">C:\Users\[user name]\AppData\Roaming\[AppName]</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2074" xml:space="preserve">
<source xml:lang="en"><g id="1">File.DirTemp<x id="2"/></g>Returns the temporary folder.</source>
<target xml:lang="zh"><g id="1">File.DirTemp<x id="2"/></g>Returns the temporary folder.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2075" xml:space="preserve">
<source xml:lang="en">File exists ?  B4A, B4i, B4J</source>
<target xml:lang="zh">File exists ?  B4A, B4i, B4J</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2076" xml:space="preserve">
<source xml:lang="en">To check if a file already exists use:</source>
<target xml:lang="zh">To check if a file already exists use:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2077" xml:space="preserve">
<source xml:lang="en"><g id="1">File.Exists</g> ( Dir As String, FileName As String)</source>
<target xml:lang="zh"><g id="1">File.Exists</g> ( Dir As String, FileName As String)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2078" xml:space="preserve">
<source xml:lang="en">Returns True if the file exists and False if not.</source>
<target xml:lang="zh">Returns True if the file exists and False if not.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2079" xml:space="preserve">
<source xml:lang="en">Note: File.Exists does not work with Dile.DirAssets !!!</source>
<target xml:lang="zh">Note: File.Exists does not work with Dile.DirAssets !!!</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2080" xml:space="preserve">
<source xml:lang="en">Common methods   B4A, B4i, B4J</source>
<target xml:lang="zh">Common methods   B4A, B4i, B4J</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2081" xml:space="preserve">
<source xml:lang="en">The File object includes several methods for writing to files and reading from files.</source>
<target xml:lang="zh">The File object includes several methods for writing to files and reading from files.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2082" xml:space="preserve">
<source xml:lang="en">To be able to write to a file or to read from a file, it must be opened.</source>
<target xml:lang="zh">To be able to write to a file or to read from a file, it must be opened.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2083" xml:space="preserve">
<source xml:lang="en"><g id="1">File.OpenOutput </g>(Dir As String, FileName As String, Append As Boolean)</source>
<target xml:lang="zh"><g id="1">File.OpenOutput </g>(Dir As String, FileName As String, Append As Boolean)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2084" xml:space="preserve">
<source xml:lang="en">- Opens the given file for output, the Append parameter tells whether the text will be added at the end of the existing file or not. If the file doesn't exist it will be created.</source>
<target xml:lang="zh">- Opens the given file for output, the Append parameter tells whether the text will be added at the end of the existing file or not. If the file doesn't exist it will be created.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2085" xml:space="preserve">
<source xml:lang="en"><g id="1">File.OpenInput</g> (Dir As String, FileName As String)</source>
<target xml:lang="zh"><g id="1">File.OpenInput</g> (Dir As String, FileName As String)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2086" xml:space="preserve">
<source xml:lang="en">- Opens the file for reading.</source>
<target xml:lang="zh">- Opens the file for reading.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2087" xml:space="preserve">
<source xml:lang="en"><g id="1">File.WriteString</g> (Dir As String, FileName As String, Text As String)</source>
<target xml:lang="zh"><g id="1">File.WriteString</g> (Dir As String, FileName As String, Text As String)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2088" xml:space="preserve">
<source xml:lang="en">- Writes the given text to a new file.</source>
<target xml:lang="zh">- Writes the given text to a new file.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2089" xml:space="preserve">
<source xml:lang="en"><g id="1">File.ReadString</g> (Dir As String, FileName As String) As String</source>
<target xml:lang="zh"><g id="1">File.ReadString</g> (Dir As String, FileName As String) As String</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2090" xml:space="preserve">
<source xml:lang="en">- Reads a file and returns its content as a string.<x id="1"/></source>
<target xml:lang="zh">- Reads a file and returns its content as a string.<x id="1"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2091" xml:space="preserve">
<source xml:lang="en"><g id="1">File.WriteList</g> (Dir As String, FileName As String, List As List)</source>
<target xml:lang="zh"><g id="1">File.WriteList</g> (Dir As String, FileName As String, List As List)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2092" xml:space="preserve">
<source xml:lang="en">- Writes all values stored in a list to a file. All values are converted to string type if required. Each value will be stored in a separare line.<x id="1"/>Note that if a value contains the new line character it will saved over more than one line and when you read it, it will be read as multiple items.</source>
<target xml:lang="zh">- Writes all values stored in a list to a file. All values are converted to string type if required. Each value will be stored in a separare line.<x id="1"/>Note that if a value contains the new line character it will saved over more than one line and when you read it, it will be read as multiple items.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2093" xml:space="preserve">
<source xml:lang="en"><g id="1">File.ReadList</g> (Dir As String, FileName As String) As List</source>
<target xml:lang="zh"><g id="1">File.ReadList</g> (Dir As String, FileName As String) As List</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2094" xml:space="preserve">
<source xml:lang="en">- Reads a file and stores each line as an item in a list.<x id="1"/></source>
<target xml:lang="zh">- Reads a file and stores each line as an item in a list.<x id="1"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2095" xml:space="preserve">
<source xml:lang="en"><g id="1">File.WriteMap </g>(Dir As String, FileName As String, Map As Map)</source>
<target xml:lang="zh"><g id="1">File.WriteMap </g>(Dir As String, FileName As String, Map As Map)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2096" xml:space="preserve">
<source xml:lang="en"><g id="1">- </g>Takes a map object which holds pairs of key and value elements and stores it in a text file. The file format is known as Java Properties file: <g id="2">.properties - Wikipedia, the free encyclopedia</g><x id="3"/>The file format is not too important unless the file is supposed to be edited manually. This format makes it easy to edit it manually.<x id="4"/>One common usage of File.WriteMap is to save a map of "settings" to a file.<x id="5"/></source>
<target xml:lang="zh"><g id="1">- </g>Takes a map object which holds pairs of key and value elements and stores it in a text file. The file format is known as Java Properties file: <g id="2">.properties - Wikipedia, the free encyclopedia</g><x id="3"/>The file format is not too important unless the file is supposed to be edited manually. This format makes it easy to edit it manually.<x id="4"/>One common usage of File.WriteMap is to save a map of "settings" to a file.<x id="5"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2097" xml:space="preserve">
<source xml:lang="en"><g id="1">File.ReadMap </g>(Dir As String, FileName As String) As Map</source>
<target xml:lang="zh"><g id="1">File.ReadMap </g>(Dir As String, FileName As String) As Map</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2098" xml:space="preserve">
<source xml:lang="en"><g id="1">- </g>Reads a properties file and returns its key/value pairs as a Map object. Note that the order of entries returned might be different than the original order. </source>
<target xml:lang="zh"><g id="1">- </g>Reads a properties file and returns its key/value pairs as a Map object. Note that the order of entries returned might be different than the original order. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2099" xml:space="preserve">
<source xml:lang="en"><g id="1">File.WriteBytes</g> (<g id="2">Dir As String, FileName As String, Data As Byte()</g>)</source>
<target xml:lang="zh"><g id="1">File.WriteBytes</g> (<g id="2">Dir As String, FileName As String, Data As Byte()</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2100" xml:space="preserve">
<source xml:lang="en">- Writes the given text to a new file.</source>
<target xml:lang="zh">- Writes the given text to a new file.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2101" xml:space="preserve">
<source xml:lang="en"><g id="1">File.ReadBytes</g> (<g id="2">Dir As String, FileName As String</g>)</source>
<target xml:lang="zh"><g id="1">File.ReadBytes</g> (<g id="2">Dir As String, FileName As String</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2102" xml:space="preserve">
<source xml:lang="en">- Reads the data from the given file.</source>
<target xml:lang="zh">- Reads the data from the given file.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2103" xml:space="preserve">
<source xml:lang="en">Returns: Byte()</source>
<target xml:lang="zh">Returns: Byte()</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2104" xml:space="preserve">
<source xml:lang="en"><g id="1">File.Copy</g> (DirSource As String, FileSource As String, DirTarget As String, FileTarget As String)</source>
<target xml:lang="zh"><g id="1">File.Copy</g> (DirSource As String, FileSource As String, DirTarget As String, FileTarget As String)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2105" xml:space="preserve">
<source xml:lang="en">- Copies the source file from the source directory to the target file in the target directory.</source>
<target xml:lang="zh">- Copies the source file from the source directory to the target file in the target directory.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2106" xml:space="preserve">
<source xml:lang="en">Note that it is not possible to copy files to the Assets folder.</source>
<target xml:lang="zh">Note that it is not possible to copy files to the Assets folder.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2107" xml:space="preserve">
<source xml:lang="en"><g id="1">File.Copy2</g> (In As InputStream, Out As OutputStream)</source>
<target xml:lang="zh"><g id="1">File.Copy2</g> (In As InputStream, Out As OutputStream)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2108" xml:space="preserve">
<source xml:lang="en">- Copies all the available data from the input stream into the output stream.</source>
<target xml:lang="zh">- Copies all the available data from the input stream into the output stream.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2109" xml:space="preserve">
<source xml:lang="en">The input stream is automatically closed at the end.</source>
<target xml:lang="zh">The input stream is automatically closed at the end.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2110" xml:space="preserve">
<source xml:lang="en"><g id="1">File.Delete</g> (<g id="2">Dir As String</g>, <g id="3">FileName As String</g>)</source>
<target xml:lang="zh"><g id="1">File.Delete</g> (<g id="2">Dir As String</g>, <g id="3">FileName As String</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2111" xml:space="preserve">
<source xml:lang="en">- Deletes the given file from the given directory.</source>
<target xml:lang="zh">- Deletes the given file from the given directory.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2112" xml:space="preserve">
<source xml:lang="en"><g id="1">File.ListFiles</g> (<g id="2">Dir As String</g>) As List</source>
<target xml:lang="zh"><g id="1">File.ListFiles</g> (<g id="2">Dir As String</g>) As List</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2113" xml:space="preserve">
<source xml:lang="en">- Lists the files and subdirectories in the diven directory.</source>
<target xml:lang="zh">- Lists the files and subdirectories in the diven directory.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2114" xml:space="preserve">
<source xml:lang="en">Example:</source>
<target xml:lang="zh">Example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2115" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> List1 </g>As<g id="2"> </g><g id="3">List</g></source>
<target xml:lang="zh">Private<g id="1"> List1 </g>As<g id="2"> </g><g id="3">List</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2116" xml:space="preserve">
<source xml:lang="en">List1 = <g id="1">File</g>.ListFiles(<g id="2">File</g>.Dir<g id="3">Internal</g>)</source>
<target xml:lang="zh">List1 = <g id="1">File</g>.ListFiles(<g id="2">File</g>.Dir<g id="3">Internal</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2117" xml:space="preserve">
<source xml:lang="en">List1 can be declared in Sub Globals</source>
<target xml:lang="zh">List1 can be declared in Sub Globals</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2118" xml:space="preserve">
<source xml:lang="en"><g id="1">File.Size</g> <g id="2">(Dir As String, FileName As String)</g></source>
<target xml:lang="zh"><g id="1">File.Size</g> <g id="2">(Dir As String, FileName As String)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2119" xml:space="preserve">
<source xml:lang="en">- Returns the size in bytes of the specified file.</source>
<target xml:lang="zh">- Returns the size in bytes of the specified file.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2120" xml:space="preserve">
<source xml:lang="en">This method does not support files in the assets folder.</source>
<target xml:lang="zh">This method does not support files in the assets folder.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2121" xml:space="preserve">
<source xml:lang="en"><g id="1">File.MakeDir</g> <g id="2">(Parent As String, Dir)</g></source>
<target xml:lang="zh"><g id="1">File.MakeDir</g> <g id="2">(Parent As String, Dir)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2122" xml:space="preserve">
<source xml:lang="en">- Creates the given folder (creates all folders as needed).</source>
<target xml:lang="zh">- Creates the given folder (creates all folders as needed).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2123" xml:space="preserve">
<source xml:lang="en">Example:</source>
<target xml:lang="zh">Example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2124" xml:space="preserve">
<source xml:lang="en">File.MakeDir(File.DirInternal, "music/90")</source>
<target xml:lang="zh">File.MakeDir(File.DirInternal, "music/90")</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2125" xml:space="preserve">
<source xml:lang="en">Filenames</source>
<target xml:lang="zh">Filenames</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2126" xml:space="preserve">
<source xml:lang="en">B4X file names allow following characters :</source>
<target xml:lang="zh">B4X file names allow following characters :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2127" xml:space="preserve">
<source xml:lang="en"><g id="1">a</g> to <g id="2">z</g>, <g id="3">A</g> to <g id="4">Z</g>, <g id="5">0</g> to <g id="6">9</g> dot <g id="7">.</g> underscore <g id="8">_</g> and even following characters <g id="9">+ - % &amp;</g> </source>
<target xml:lang="zh"><g id="1">a</g> to <g id="2">z</g>, <g id="3">A</g> to <g id="4">Z</g>, <g id="5">0</g> to <g id="6">9</g> dot <g id="7">.</g> underscore <g id="8">_</g> and even following characters <g id="9">+ - % &amp;</g> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2128" xml:space="preserve">
<source xml:lang="en">Spaces and following characters <g id="1">* ?</g> are not allowed.</source>
<target xml:lang="zh">Spaces and following characters <g id="1">* ?</g> are not allowed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2129" xml:space="preserve">
<source xml:lang="en">Example : MyFile.txt</source>
<target xml:lang="zh">Example : MyFile.txt</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2130" xml:space="preserve">
<source xml:lang="en">Note that B4X file names are case sensitive !</source>
<target xml:lang="zh">Note that B4X file names are case sensitive !</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2131" xml:space="preserve">
<source xml:lang="en"><g id="1">MyFile.txt</g><g id="2"> </g> is different from   <g id="3">myfile.txt</g></source>
<target xml:lang="zh"><g id="1">MyFile.txt</g><g id="2"> </g> is different from   <g id="3">myfile.txt</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2132" xml:space="preserve">
<source xml:lang="en">Subfolders</source>
<target xml:lang="zh">Subfolders</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2133" xml:space="preserve">
<source xml:lang="en">You can define subfolders in B4X with.</source>
<target xml:lang="zh">You can define subfolders in B4X with.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2134" xml:space="preserve">
<source xml:lang="en">File<g id="1">.MakeDir(</g>File<g id="2">.DirInternal, </g><g id="3">"Pictures"</g><g id="4">)</g></source>
<target xml:lang="zh">File<g id="1">.MakeDir(</g>File<g id="2">.DirInternal, </g><g id="3">"Pictures"</g><g id="4">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2135" xml:space="preserve">
<source xml:lang="en">To access the subfolder you should add the subfoldername to the foldername with "/" inbetween.</source>
<target xml:lang="zh">To access the subfolder you should add the subfoldername to the foldername with "/" inbetween.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2136" xml:space="preserve">
<source xml:lang="en">ImageView1<g id="1">.Bitmap = </g><g id="2">LoadBitmap</g><g id="3">(</g><g id="4">File</g><g id="5">.DirInternal &amp; </g><g id="6">"/Pictures"</g><g id="7">, </g><g id="8">"test1.png"</g><g id="9">)</g></source>
<target xml:lang="zh">ImageView1<g id="1">.Bitmap = </g><g id="2">LoadBitmap</g><g id="3">(</g><g id="4">File</g><g id="5">.DirInternal &amp; </g><g id="6">"/Pictures"</g><g id="7">, </g><g id="8">"test1.png"</g><g id="9">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2137" xml:space="preserve">
<source xml:lang="en">Or add the subfoldername before the filename with "/" inbetween.</source>
<target xml:lang="zh">Or add the subfoldername before the filename with "/" inbetween.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2138" xml:space="preserve">
<source xml:lang="en">ImageView1<g id="1">.Bitmap = </g><g id="2">LoadBitmap</g><g id="3">(</g><g id="4">File</g><g id="5">.DirInternal, </g><g id="6">"Pictures/test1.png"</g><g id="7">)</g></source>
<target xml:lang="zh">ImageView1<g id="1">.Bitmap = </g><g id="2">LoadBitmap</g><g id="3">(</g><g id="4">File</g><g id="5">.DirInternal, </g><g id="6">"Pictures/test1.png"</g><g id="7">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2139" xml:space="preserve">
<source xml:lang="en">Both possibilities work.</source>
<target xml:lang="zh">Both possibilities work.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2140" xml:space="preserve">
<source xml:lang="en">B4A, B4J  TextWriter</source>
<target xml:lang="zh">B4A, B4J  TextWriter</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2141" xml:space="preserve">
<source xml:lang="en">There are two other useful functions for text files: <g id="1">TextWriter</g> and TextReader:</source>
<target xml:lang="zh">There are two other useful functions for text files: <g id="1">TextWriter</g> and TextReader:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2142" xml:space="preserve">
<source xml:lang="en"><g id="1">TextWriter.Initialize </g>(OutputStream As OutputStream)</source>
<target xml:lang="zh"><g id="1">TextWriter.Initialize </g>(OutputStream As OutputStream)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2143" xml:space="preserve">
<source xml:lang="en">- Initializes a TextWriter object as an output stream.</source>
<target xml:lang="zh">- Initializes a TextWriter object as an output stream.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2144" xml:space="preserve">
<source xml:lang="en">Example:</source>
<target xml:lang="zh">Example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2145" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> Writer </g>As<g id="2"> </g><g id="3">TextWriter</g></source>
<target xml:lang="zh">Private<g id="1"> Writer </g>As<g id="2"> </g><g id="3">TextWriter</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2146" xml:space="preserve">
<source xml:lang="en">Writer.Initialize(<g id="1">File</g>.OpenOutput(<g id="2">File</g>.DirInternal, <g id="3">"Test.txt"</g> , <g id="4">False</g>))</source>
<target xml:lang="zh">Writer.Initialize(<g id="1">File</g>.OpenOutput(<g id="2">File</g>.DirInternal, <g id="3">"Test.txt"</g> , <g id="4">False</g>))</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2147" xml:space="preserve">
<source xml:lang="en">Writer could be declared in Sub Globals.</source>
<target xml:lang="zh">Writer could be declared in Sub Globals.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2148" xml:space="preserve">
<source xml:lang="en"><g id="1">TextWriter.Initialize2 </g>(OutputStream As OutputStream , Encoding As String)</source>
<target xml:lang="zh"><g id="1">TextWriter.Initialize2 </g>(OutputStream As OutputStream , Encoding As String)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2149" xml:space="preserve">
<source xml:lang="en">- Initializes a TextWriter object as as output stream.</source>
<target xml:lang="zh">- Initializes a TextWriter object as as output stream.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2150" xml:space="preserve">
<source xml:lang="en">- Encoding indicates the CodePage (also called CharacterSet) for text encoding (see next chapter).</source>
<target xml:lang="zh">- Encoding indicates the CodePage (also called CharacterSet) for text encoding (see next chapter).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2151" xml:space="preserve">
<source xml:lang="en">Example:</source>
<target xml:lang="zh">Example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2152" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> </g><g id="2">Writer </g><g id="3">As</g><g id="4"> </g><g id="5">TextWriter</g></source>
<target xml:lang="zh">Private<g id="1"> </g><g id="2">Writer </g><g id="3">As</g><g id="4"> </g><g id="5">TextWriter</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2153" xml:space="preserve">
<source xml:lang="en"><g id="1">Writer.Initialize2(</g><g id="2">File</g><g id="3">.OpenOutput(</g><g id="4">File</g><g id="5">.Dir</g><g id="6">Internal</g><g id="7">,</g><g id="8">"Test.txt"</g><g id="9"> ,</g><g id="10">False</g><g id="11">),"</g> <g id="12">ISO-8859-1")</g></source>
<target xml:lang="zh"><g id="1">Writer.Initialize2(</g><g id="2">File</g><g id="3">.OpenOutput(</g><g id="4">File</g><g id="5">.Dir</g><g id="6">Internal</g><g id="7">,</g><g id="8">"Test.txt"</g><g id="9"> ,</g><g id="10">False</g><g id="11">),"</g> <g id="12">ISO-8859-1")</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2154" xml:space="preserve">
<source xml:lang="en">Writer could be declared in Sub Globals.</source>
<target xml:lang="zh">Writer could be declared in Sub Globals.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2155" xml:space="preserve">
<source xml:lang="en">See : <g id="1">Text encoding</g></source>
<target xml:lang="zh">See : <g id="1">Text encoding</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2156" xml:space="preserve">
<source xml:lang="en"><g id="1">TextWriter.Write</g> (Text As String)</source>
<target xml:lang="zh"><g id="1">TextWriter.Write</g> (Text As String)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2157" xml:space="preserve">
<source xml:lang="en">- Writes the given Text to the stream.</source>
<target xml:lang="zh">- Writes the given Text to the stream.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2158" xml:space="preserve">
<source xml:lang="en"><g id="1">TextWriter.WriteLine</g> (Text As String)</source>
<target xml:lang="zh"><g id="1">TextWriter.WriteLine</g> (Text As String)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2159" xml:space="preserve">
<source xml:lang="en">- Writes the given Text to the stream followed by a new line character LF Chr(10).</source>
<target xml:lang="zh">- Writes the given Text to the stream followed by a new line character LF Chr(10).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2160" xml:space="preserve">
<source xml:lang="en"><g id="1">TextWriter.WriteList </g>(List As List)</source>
<target xml:lang="zh"><g id="1">TextWriter.WriteList </g>(List As List)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2161" xml:space="preserve">
<source xml:lang="en">- Writes each item in the list as a single line.</source>
<target xml:lang="zh">- Writes each item in the list as a single line.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2162" xml:space="preserve">
<source xml:lang="en">Note that a value containing CRLF will be saved as two lines (which will return two items when reading with ReadList).</source>
<target xml:lang="zh">Note that a value containing CRLF will be saved as two lines (which will return two items when reading with ReadList).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2163" xml:space="preserve">
<source xml:lang="en">All values will be converted to strings.</source>
<target xml:lang="zh">All values will be converted to strings.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2164" xml:space="preserve">
<source xml:lang="en">TextWriter.Close</source>
<target xml:lang="zh">TextWriter.Close</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2165" xml:space="preserve">
<source xml:lang="en">- Closes the stream.</source>
<target xml:lang="zh">- Closes the stream.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2166" xml:space="preserve">
<source xml:lang="en">Example:</source>
<target xml:lang="zh">Example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2167" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> Writer </g>As<g id="2"> </g><g id="3">TextWriter</g></source>
<target xml:lang="zh">Private<g id="1"> Writer </g>As<g id="2"> </g><g id="3">TextWriter</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2168" xml:space="preserve">
<source xml:lang="en">Writer.Initialize(<g id="1">File</g>.OpenOutput(<g id="2">File</g>.DirInternal, <g id="3">"Text.txt"</g>, <g id="4">False</g>))</source>
<target xml:lang="zh">Writer.Initialize(<g id="1">File</g>.OpenOutput(<g id="2">File</g>.DirInternal, <g id="3">"Text.txt"</g>, <g id="4">False</g>))</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2169" xml:space="preserve">
<source xml:lang="en">Writer.WriteLine(<g id="1">"This is the first line"</g>)</source>
<target xml:lang="zh">Writer.WriteLine(<g id="1">"This is the first line"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2170" xml:space="preserve">
<source xml:lang="en">Writer.WriteLine(<g id="1">"This is the second line"</g>)</source>
<target xml:lang="zh">Writer.WriteLine(<g id="1">"This is the second line"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2171" xml:space="preserve">
<source xml:lang="en">Writer.Close</source>
<target xml:lang="zh">Writer.Close</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2172" xml:space="preserve">
<source xml:lang="en">B4A, B4J  TextReader</source>
<target xml:lang="zh">B4A, B4J  TextReader</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2173" xml:space="preserve">
<source xml:lang="en">There are two other useful functions for text files: TextWriter and <g id="1">TextReader</g>:</source>
<target xml:lang="zh">There are two other useful functions for text files: TextWriter and <g id="1">TextReader</g>:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2174" xml:space="preserve">
<source xml:lang="en"><g id="1">TextReader.Initialize </g>(InputStream As InputStream)</source>
<target xml:lang="zh"><g id="1">TextReader.Initialize </g>(InputStream As InputStream)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2175" xml:space="preserve">
<source xml:lang="en">- Initializes a TextReader as an input stream.</source>
<target xml:lang="zh">- Initializes a TextReader as an input stream.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2176" xml:space="preserve">
<source xml:lang="en">Example:</source>
<target xml:lang="zh">Example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2177" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> Reader  </g><g id="2">TextReader</g></source>
<target xml:lang="zh">Private<g id="1"> Reader  </g><g id="2">TextReader</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2178" xml:space="preserve">
<source xml:lang="en">Reader.Initialize(<g id="1">File</g>.OpenInput(<g id="2">File</g>.DirInternal, <g id="3">"Test.txt")</g>)</source>
<target xml:lang="zh">Reader.Initialize(<g id="1">File</g>.OpenInput(<g id="2">File</g>.DirInternal, <g id="3">"Test.txt")</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2179" xml:space="preserve">
<source xml:lang="en">Reader could be declared in Sub Globals.</source>
<target xml:lang="zh">Reader could be declared in Sub Globals.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2180" xml:space="preserve">
<source xml:lang="en"><g id="1">TextReader.Initialize2 </g>(InputStream As InputStream, Encoding As String)</source>
<target xml:lang="zh"><g id="1">TextReader.Initialize2 </g>(InputStream As InputStream, Encoding As String)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2181" xml:space="preserve">
<source xml:lang="en">- Initializes a TextReader as an input stream.</source>
<target xml:lang="zh">- Initializes a TextReader as an input stream.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2182" xml:space="preserve">
<source xml:lang="en">- Encoding indicates the CodePage (also called CharacterSet), the text encoding.</source>
<target xml:lang="zh">- Encoding indicates the CodePage (also called CharacterSet), the text encoding.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2183" xml:space="preserve">
<source xml:lang="en">Example:</source>
<target xml:lang="zh">Example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2184" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> Reader  </g><g id="2">TextReader</g></source>
<target xml:lang="zh">Private<g id="1"> Reader  </g><g id="2">TextReader</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2185" xml:space="preserve">
<source xml:lang="en">Reader.Initialize2(<g id="1">File</g>.OpenInput(<g id="2">File</g>.DirInternal, <g id="3">"Test.txt", "ISO-8859-1"</g>)</source>
<target xml:lang="zh">Reader.Initialize2(<g id="1">File</g>.OpenInput(<g id="2">File</g>.DirInternal, <g id="3">"Test.txt", "ISO-8859-1"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2186" xml:space="preserve">
<source xml:lang="en">Reader could be declared in Sub Globals.</source>
<target xml:lang="zh">Reader could be declared in Sub Globals.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2187" xml:space="preserve">
<source xml:lang="en">See : <g id="1">Text encoding</g></source>
<target xml:lang="zh">See : <g id="1">Text encoding</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2188" xml:space="preserve">
<source xml:lang="en"><g id="1">TextReader.ReadAll</g> As String</source>
<target xml:lang="zh"><g id="1">TextReader.ReadAll</g> As String</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2189" xml:space="preserve">
<source xml:lang="en">- Reads all of the remaining text and closes the stream.</source>
<target xml:lang="zh">- Reads all of the remaining text and closes the stream.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2190" xml:space="preserve">
<source xml:lang="en">Example:</source>
<target xml:lang="zh">Example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2191" xml:space="preserve">
<source xml:lang="en">txt = Reader.ReadAll</source>
<target xml:lang="zh">txt = Reader.ReadAll</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2192" xml:space="preserve">
<source xml:lang="en"><g id="1">TextReader.ReadLine</g> As String</source>
<target xml:lang="zh"><g id="1">TextReader.ReadLine</g> As String</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2193" xml:space="preserve">
<source xml:lang="en">- Reads the next line from the stream. </source>
<target xml:lang="zh">- Reads the next line from the stream. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2194" xml:space="preserve">
<source xml:lang="en">The new line characters are not returned.</source>
<target xml:lang="zh">The new line characters are not returned.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2195" xml:space="preserve">
<source xml:lang="en">Returns Null if there are no more characters to read.</source>
<target xml:lang="zh">Returns Null if there are no more characters to read.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2196" xml:space="preserve">
<source xml:lang="en">Example:</source>
<target xml:lang="zh">Example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2197" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> Reader </g><g id="2">As</g><g id="3"> </g><g id="4">TextReader</g></source>
<target xml:lang="zh">Private<g id="1"> Reader </g><g id="2">As</g><g id="3"> </g><g id="4">TextReader</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2198" xml:space="preserve">
<source xml:lang="en">Reader.Initialize(<g id="1">File</g>.OpenInput(<g id="2">File</g>.DirInternal, <g id="3">"Text.txt"</g>))</source>
<target xml:lang="zh">Reader.Initialize(<g id="1">File</g>.OpenInput(<g id="2">File</g>.DirInternal, <g id="3">"Text.txt"</g>))</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2199" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> line </g><g id="2">As</g><g id="3"> </g><g id="4">String</g></source>
<target xml:lang="zh">Private<g id="1"> line </g><g id="2">As</g><g id="3"> </g><g id="4">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2200" xml:space="preserve">
<source xml:lang="en">line = Reader.ReadLine</source>
<target xml:lang="zh">line = Reader.ReadLine</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2201" xml:space="preserve">
<source xml:lang="en">Do<g id="1"> </g>While<g id="2"> line &lt;> </g>Null</source>
<target xml:lang="zh">Do<g id="1"> </g>While<g id="2"> line &lt;> </g>Null</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2202" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g>(line)</source>
<target xml:lang="zh"><g id="1">Log</g>(line)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2203" xml:space="preserve">
<source xml:lang="en"><x id="1"/>line = Reader.ReadLine</source>
<target xml:lang="zh"><x id="1"/>line = Reader.ReadLine</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2204" xml:space="preserve">
<source xml:lang="en"><g id="1">Loop</g></source>
<target xml:lang="zh"><g id="1">Loop</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2205" xml:space="preserve">
<source xml:lang="en">Reader.Close</source>
<target xml:lang="zh">Reader.Close</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2206" xml:space="preserve">
<source xml:lang="en"><g id="1">TextReader.ReadList</g> As List</source>
<target xml:lang="zh"><g id="1">TextReader.ReadList</g> As List</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2207" xml:space="preserve">
<source xml:lang="en">- Reads the remaining text and returns a List object filled with the lines.</source>
<target xml:lang="zh">- Reads the remaining text and returns a List object filled with the lines.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2208" xml:space="preserve">
<source xml:lang="en">Closes the stream when done.</source>
<target xml:lang="zh">Closes the stream when done.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2209" xml:space="preserve">
<source xml:lang="en">Example:</source>
<target xml:lang="zh">Example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2210" xml:space="preserve">
<source xml:lang="en"><g id="1">List1 = Reader.ReadList</g> </source>
<target xml:lang="zh"><g id="1">List1 = Reader.ReadList</g> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2211" xml:space="preserve">
<source xml:lang="en">Text encoding</source>
<target xml:lang="zh">Text encoding</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2212" xml:space="preserve">
<source xml:lang="en">Text encoding or character encoding consists of a code that pairs each character from a given repertoire with something else. Other terms like character set (charset), and sometimes character map or code page are used almost interchangeably (source Wikipedia).</source>
<target xml:lang="zh">Text encoding or character encoding consists of a code that pairs each character from a given repertoire with something else. Other terms like character set (charset), and sometimes character map or code page are used almost interchangeably (source Wikipedia).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2213" xml:space="preserve">
<source xml:lang="en">The default character set in Android is Unicode UTF-8.</source>
<target xml:lang="zh">The default character set in Android is Unicode UTF-8.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2214" xml:space="preserve">
<source xml:lang="en">In Windows the most common character sets are ASCII and ANSI.</source>
<target xml:lang="zh">In Windows the most common character sets are ASCII and ANSI.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2215" xml:space="preserve">
<source xml:lang="en">ASCII includes definitions for 128 characters, 33 are non-printing control characters (now mostly obsolete) that affect how text and space is processed.</source>
<target xml:lang="zh">ASCII includes definitions for 128 characters, 33 are non-printing control characters (now mostly obsolete) that affect how text and space is processed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2216" xml:space="preserve">
<source xml:lang="en">ANSI, Windows-1252 or CP-1252 is a character encoding of the Latin alphabet, used by default in the legacy components of Microsoft Windows in English and some other Western languages with 256 definitions (one byte). The first 128 characters are the same as in the ASCII encoding.</source>
<target xml:lang="zh">ANSI, Windows-1252 or CP-1252 is a character encoding of the Latin alphabet, used by default in the legacy components of Microsoft Windows in English and some other Western languages with 256 definitions (one byte). The first 128 characters are the same as in the ASCII encoding.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2217" xml:space="preserve">
<source xml:lang="en">Many files generated by Windows programs are encoded with the ANSI character-set in western countries. For example: Excel csv files, Notepad files by default.</source>
<target xml:lang="zh">Many files generated by Windows programs are encoded with the ANSI character-set in western countries. For example: Excel csv files, Notepad files by default.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2218" xml:space="preserve">
<source xml:lang="en">But with Notepad, files can be saved with <g id="1">UTF-8</g> encoding.</source>
<target xml:lang="zh">But with Notepad, files can be saved with <g id="1">UTF-8</g> encoding.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2219" xml:space="preserve">
<source xml:lang="en">B4X can use following character sets:</source>
<target xml:lang="zh">B4X can use following character sets:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2220" xml:space="preserve">
<source xml:lang="en">UTF-8<x id="1"/>default character-set</source>
<target xml:lang="zh">UTF-8<x id="1"/>default character-set</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2221" xml:space="preserve">
<source xml:lang="en">UTF -16</source>
<target xml:lang="zh">UTF -16</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2222" xml:space="preserve">
<source xml:lang="en">UTF - 16 BE</source>
<target xml:lang="zh">UTF - 16 BE</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2223" xml:space="preserve">
<source xml:lang="en">UTF - LE</source>
<target xml:lang="zh">UTF - LE</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2224" xml:space="preserve">
<source xml:lang="en">US-ASCII<x id="1"/>ASCII character set</source>
<target xml:lang="zh">US-ASCII<x id="1"/>ASCII character set</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2225" xml:space="preserve">
<source xml:lang="en">ISO-8859-1<x id="1"/>almost equivalent to the ANSI character-set</source>
<target xml:lang="zh">ISO-8859-1<x id="1"/>almost equivalent to the ANSI character-set</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2226" xml:space="preserve">
<source xml:lang="en">Windows-1251<x id="1"/>cyrillic characters</source>
<target xml:lang="zh">Windows-1251<x id="1"/>cyrillic characters</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2227" xml:space="preserve">
<source xml:lang="en">Windows-1252<x id="1"/>latin alphabet</source>
<target xml:lang="zh">Windows-1252<x id="1"/>latin alphabet</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2228" xml:space="preserve">
<source xml:lang="en">To read Windows files encoded with ANSI you should use the <g id="1">Windows-1252</g> character-set.</source>
<target xml:lang="zh">To read Windows files encoded with ANSI you should use the <g id="1">Windows-1252</g> character-set.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2229" xml:space="preserve">
<source xml:lang="en">If you need to write files for use with Windows you should also use the <g id="1">Windows-1252</g> character-set.</source>
<target xml:lang="zh">If you need to write files for use with Windows you should also use the <g id="1">Windows-1252</g> character-set.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2230" xml:space="preserve">
<source xml:lang="en">Another difference between Windows and B4X is the end of line character:</source>
<target xml:lang="zh">Another difference between Windows and B4X is the end of line character:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2231" xml:space="preserve">
<source xml:lang="en">B4X, only the LF (Line Feed) character Chr(10) is added at the end of a line.</source>
<target xml:lang="zh">B4X, only the LF (Line Feed) character Chr(10) is added at the end of a line.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2232" xml:space="preserve">
<source xml:lang="en">Windows, two characters CR (Carriage Return Chr(13)) and  LF Chr(10) are added at the end of a line. If you need to write files for Windows you must add CR yourself.</source>
<target xml:lang="zh">Windows, two characters CR (Carriage Return Chr(13)) and  LF Chr(10) are added at the end of a line. If you need to write files for Windows you must add CR yourself.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2233" xml:space="preserve">
<source xml:lang="en">The symbol for the end of line is :</source>
<target xml:lang="zh">The symbol for the end of line is :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2234" xml:space="preserve">
<source xml:lang="en">B4X<x id="1"/>CRLF<x id="2"/>Chr(10)</source>
<target xml:lang="zh">B4X<x id="1"/>CRLF<x id="2"/>Chr(10)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2235" xml:space="preserve">
<source xml:lang="en">Basic4PPC<x id="1"/>CRLF<x id="2"/>Chr(13) &amp; Chr(10)</source>
<target xml:lang="zh">Basic4PPC<x id="1"/>CRLF<x id="2"/>Chr(13) &amp; Chr(10)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2236" xml:space="preserve">
<source xml:lang="en">To read or write files with a different encoding you must use the TextReader or TextWriter objects with the Initialize2 methods. Even for reading csv files.</source>
<target xml:lang="zh">To read or write files with a different encoding you must use the TextReader or TextWriter objects with the Initialize2 methods. Even for reading csv files.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2237" xml:space="preserve">
<source xml:lang="en">Tip for reading Excel csv files:</source>
<target xml:lang="zh">Tip for reading Excel csv files:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2238" xml:space="preserve">
<source xml:lang="en">You can either:</source>
<target xml:lang="zh">You can either:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2239" xml:space="preserve">
<source xml:lang="en">On the desktop, load the csv file in a text editor like <g id="1">NotePad</g> or <g id="2">Notepad++</g></source>
<target xml:lang="zh">On the desktop, load the csv file in a text editor like <g id="1">NotePad</g> or <g id="2">Notepad++</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2240" xml:space="preserve">
<source xml:lang="en">Save the file with <g id="1">UTF-8</g> encoding<x id="2"/>With <g id="3">Notepad++</g> use Encode in UTF-8 without BOM, see below.<x id="4"/> </source>
<target xml:lang="zh">Save the file with <g id="1">UTF-8</g> encoding<x id="2"/>With <g id="3">Notepad++</g> use Encode in UTF-8 without BOM, see below.<x id="4"/> </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2241" xml:space="preserve">
<source xml:lang="en">Or </source>
<target xml:lang="zh">Or </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2242" xml:space="preserve">
<source xml:lang="en">Read the whole file with TextReader.Initialize2 and "Windows-1252" encoding.</source>
<target xml:lang="zh">Read the whole file with TextReader.Initialize2 and "Windows-1252" encoding.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2243" xml:space="preserve">
<source xml:lang="en">Save it back with TextWriter.Initialize with the standard Android encoding.</source>
<target xml:lang="zh">Save it back with TextWriter.Initialize with the standard Android encoding.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2244" xml:space="preserve">
<source xml:lang="en">Read the file with LoadCSV or LoadCSV2 from the StringUtils library.</source>
<target xml:lang="zh">Read the file with LoadCSV or LoadCSV2 from the StringUtils library.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2245" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> txt </g><g id="2">As</g><g id="3"> </g><g id="4">String</g></source>
<target xml:lang="zh">Private<g id="1"> txt </g><g id="2">As</g><g id="3"> </g><g id="4">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2246" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> tr </g><g id="2">As</g><g id="3"> </g><g id="4">TextReader</g></source>
<target xml:lang="zh">Private<g id="1"> tr </g><g id="2">As</g><g id="3"> </g><g id="4">TextReader</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2247" xml:space="preserve">
<source xml:lang="en">tr.Initialize2(<g id="1">File</g>.OpenInput(<g id="2">File</g>.DirAssets, <g id="3">"TestCSV1_W.csv"</g>), <g id="4">"Windows-1252"</g>)</source>
<target xml:lang="zh">tr.Initialize2(<g id="1">File</g>.OpenInput(<g id="2">File</g>.DirAssets, <g id="3">"TestCSV1_W.csv"</g>), <g id="4">"Windows-1252"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2248" xml:space="preserve">
<source xml:lang="en">txt = tr.ReadAll</source>
<target xml:lang="zh">txt = tr.ReadAll</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2249" xml:space="preserve">
<source xml:lang="en">tr.Close</source>
<target xml:lang="zh">tr.Close</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2251" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> tw </g><g id="2">As</g><g id="3"> </g><g id="4">TextWriter</g></source>
<target xml:lang="zh">Private<g id="1"> tw </g><g id="2">As</g><g id="3"> </g><g id="4">TextWriter</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2252" xml:space="preserve">
<source xml:lang="en">tw.Initialize(<g id="1">File</g>.OpenOutput(<g id="2">File</g>.DirInternal, <g id="3">"TestCSV1_W.csv"</g>, <g id="4">False</g>))</source>
<target xml:lang="zh">tw.Initialize(<g id="1">File</g>.OpenOutput(<g id="2">File</g>.DirInternal, <g id="3">"TestCSV1_W.csv"</g>, <g id="4">False</g>))</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2253" xml:space="preserve">
<source xml:lang="en">tw.Write(txt)</source>
<target xml:lang="zh">tw.Write(txt)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2254" xml:space="preserve">
<source xml:lang="en">tw.Close</source>
<target xml:lang="zh">tw.Close</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2256" xml:space="preserve">
<source xml:lang="en">lstTest = StrUtil.LoadCSV2(<g id="1">File</g>.DirInternal, <g id="2">"TestCSV1_W.csv"</g>, <g id="3">";"</g>, lstHead)</source>
<target xml:lang="zh">lstTest = StrUtil.LoadCSV2(<g id="1">File</g>.DirInternal, <g id="2">"TestCSV1_W.csv"</g>, <g id="3">";"</g>, lstHead)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2257" xml:space="preserve">
<source xml:lang="en">When you save a file with NotePad three additional bytes are added .</source>
<target xml:lang="zh">When you save a file with NotePad three additional bytes are added .</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2258" xml:space="preserve">
<source xml:lang="en">These bytes are called BOM characters (Byte Order Mark).</source>
<target xml:lang="zh">These bytes are called BOM characters (Byte Order Mark).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2259" xml:space="preserve">
<source xml:lang="en">In <g id="1">UTF-8</g> they are represented by this byte sequence : <g id="2">0xEF,0xBB,0xBF.</g></source>
<target xml:lang="zh">In <g id="1">UTF-8</g> they are represented by this byte sequence : <g id="2">0xEF,0xBB,0xBF.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2260" xml:space="preserve">
<source xml:lang="en">A text editor or web browser interpreting the text as <g id="1">Windows-1252</g><g id="2"> will display the characters  ï»¿.</g></source>
<target xml:lang="zh">A text editor or web browser interpreting the text as <g id="1">Windows-1252</g><g id="2"> will display the characters  ï»¿.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2261" xml:space="preserve">
<source xml:lang="en">To avoid this you can use <g id="1">Notepad++</g> instead of <g id="2">NotePad</g> and use Encode in <g id="3">UTF-8</g> without BOM.</source>
<target xml:lang="zh">To avoid this you can use <g id="1">Notepad++</g> instead of <g id="2">NotePad</g> and use Encode in <g id="3">UTF-8</g> without BOM.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2262" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N85245832-sub1" xml:space="preserve">
<source xml:lang="en">Image 388</source>
<target xml:lang="zh">Image 388</target>
</trans-unit>
<trans-unit id="N85245832-sub2" xml:space="preserve">
<source xml:lang="en">Picture 388</source>
<target xml:lang="zh">Picture 388</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2263" xml:space="preserve">
<source xml:lang="en">Another possibility to change a <g id="1"><g id="2">tex</g></g>t from <g id="3">Windows-1252</g> to <g id="4">UTF-8</g> is to use the code below.</source>
<target xml:lang="zh">Another possibility to change a <g id="1"><g id="2">tex</g></g>t from <g id="3">Windows-1252</g> to <g id="4">UTF-8</g> is to use the code below.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2264" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> var, result </g><g id="2">As</g><g id="3"> </g><g id="4">String</g></source>
<target xml:lang="zh">Private<g id="1"> var, result </g><g id="2">As</g><g id="3"> </g><g id="4">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2265" xml:space="preserve">
<source xml:lang="en">var = <g id="1">"Gestió"</g></source>
<target xml:lang="zh">var = <g id="1">"Gestió"</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2266" xml:space="preserve">
<source xml:lang="en">Private<g id="1"> arrByte() </g><g id="2">As</g><g id="3"> </g><g id="4">Byte</g></source>
<target xml:lang="zh">Private<g id="1"> arrByte() </g><g id="2">As</g><g id="3"> </g><g id="4">Byte</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2267" xml:space="preserve">
<source xml:lang="en">arrByte = var.GetBytes(<g id="1">"Windows-1252"</g>)</source>
<target xml:lang="zh">arrByte = var.GetBytes(<g id="1">"Windows-1252"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2268" xml:space="preserve">
<source xml:lang="en">result = <g id="1">BytesToString</g>(arrByte, <g id="2">0</g>, arrByte.Length, <g id="3">"UTF8"</g>)</source>
<target xml:lang="zh">result = <g id="1">BytesToString</g>(arrByte, <g id="2">0</g>, arrByte.Length, <g id="3">"UTF8"</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2269" xml:space="preserve">
<source xml:lang="en">Lists  B4A, B4i and B4J only</source>
<target xml:lang="zh">Lists  B4A, B4i and B4J only</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2270" xml:space="preserve">
<source xml:lang="en">Lists are similar to dynamic arrays.</source>
<target xml:lang="zh">Lists are similar to dynamic arrays.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2271" xml:space="preserve">
<source xml:lang="en">A List must be initialized before it can be used.</source>
<target xml:lang="zh">A List must be initialized before it can be used.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2272" xml:space="preserve">
<source xml:lang="en">Initialize<x id="1"/>Initializes an empty List.<x id="2"/><g id="3">Private</g><g id="4"> List1 </g><g id="5">As</g><g id="6"> </g><g id="7">List</g><g id="8"><x id="9"/>List1.Initialize<x id="10"/>List1.AddAll(</g><g id="11">Array</g><g id="12"> </g><g id="13">As</g><g id="14"> </g><g id="15">Int</g><g id="16">(</g><g id="17">1</g><g id="18">, </g><g id="19">2</g><g id="20">, </g><g id="21">3</g><g id="22">, </g><g id="23">4</g><g id="24">, </g><g id="25">5</g><g id="26">))<x id="27"/></g></source>
<target xml:lang="zh">Initialize<x id="1"/>Initializes an empty List.<x id="2"/><g id="3">Private</g><g id="4"> List1 </g><g id="5">As</g><g id="6"> </g><g id="7">List</g><g id="8"><x id="9"/>List1.Initialize<x id="10"/>List1.AddAll(</g><g id="11">Array</g><g id="12"> </g><g id="13">As</g><g id="14"> </g><g id="15">Int</g><g id="16">(</g><g id="17">1</g><g id="18">, </g><g id="19">2</g><g id="20">, </g><g id="21">3</g><g id="22">, </g><g id="23">4</g><g id="24">, </g><g id="25">5</g><g id="26">))<x id="27"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2273" xml:space="preserve">
<source xml:lang="en">Initialize2 (SomeArray)<x id="1"/>Initializes a list with the given values. This method should be used to convert arrays to lists. Note that if you pass a list to this method then both objects will share the same list, and if you pass an array the list will be of a fixed size. <x id="2"/>Meaning that you cannot later add or remove items.<x id="3"/>Example 1:<x id="4"/><g id="5">Private</g><g id="6"> List1 </g><g id="7">As</g><g id="8"> </g><g id="9">List</g><g id="10"><x id="11"/>List1.Initialize2(</g><g id="12">Array</g><g id="13"> </g><g id="14">As</g><g id="15"> </g><g id="16">Int</g><g id="17">(</g><g id="18">1</g><g id="19">, </g><g id="20">2</g><g id="21">, </g><g id="22">3</g><g id="23">, </g><g id="24">4</g><g id="25">, </g><g id="26">5</g><g id="27">))<x id="28"/></g>Example 2:<x id="29"/><g id="30">Private</g><g id="31"> List1 </g><g id="32">As</g><g id="33"> </g><g id="34">List<x id="35"/></g><g id="36">Private</g><g id="37"> SomeArray(10) </g><g id="38">As</g><g id="39"> </g><g id="40">String<x id="41"/></g><g id="42">' Fill the array<x id="43"/></g><g id="44">List1.Initialize2(SomeArray)<x id="45"/></g></source>
<target xml:lang="zh">Initialize2 (SomeArray)<x id="1"/>Initializes a list with the given values. This method should be used to convert arrays to lists. Note that if you pass a list to this method then both objects will share the same list, and if you pass an array the list will be of a fixed size. <x id="2"/>Meaning that you cannot later add or remove items.<x id="3"/>Example 1:<x id="4"/><g id="5">Private</g><g id="6"> List1 </g><g id="7">As</g><g id="8"> </g><g id="9">List</g><g id="10"><x id="11"/>List1.Initialize2(</g><g id="12">Array</g><g id="13"> </g><g id="14">As</g><g id="15"> </g><g id="16">Int</g><g id="17">(</g><g id="18">1</g><g id="19">, </g><g id="20">2</g><g id="21">, </g><g id="22">3</g><g id="23">, </g><g id="24">4</g><g id="25">, </g><g id="26">5</g><g id="27">))<x id="28"/></g>Example 2:<x id="29"/><g id="30">Private</g><g id="31"> List1 </g><g id="32">As</g><g id="33"> </g><g id="34">List<x id="35"/></g><g id="36">Private</g><g id="37"> SomeArray(10) </g><g id="38">As</g><g id="39"> </g><g id="40">String<x id="41"/></g><g id="42">' Fill the array<x id="43"/></g><g id="44">List1.Initialize2(SomeArray)<x id="45"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2274" xml:space="preserve">
<source xml:lang="en">You can add and remove items from a list and it will change its size accordingly.</source>
<target xml:lang="zh">You can add and remove items from a list and it will change its size accordingly.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2275" xml:space="preserve">
<source xml:lang="en">With either:</source>
<target xml:lang="zh">With either:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2276" xml:space="preserve">
<source xml:lang="en">Add (item As Object)<x id="1"/>Adds a value at the end of the list.<x id="2"/><g id="3">List1.Add(Value)<x id="4"/></g></source>
<target xml:lang="zh">Add (item As Object)<x id="1"/>Adds a value at the end of the list.<x id="2"/><g id="3">List1.Add(Value)<x id="4"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2277" xml:space="preserve">
<source xml:lang="en">AddAll (Array As String("value1", "value2"))<x id="1"/>Adds all elements of an array at the end of the list.<x id="2"/><g id="3">List1.AddAll(List2)<x id="4"/>List1.AddAll(</g><g id="5">Array</g><g id="6"> </g><g id="7">As</g><g id="8"> </g><g id="9">Int</g><g id="10">(</g><g id="11">1</g><g id="12">, </g><g id="13">2</g><g id="14">, </g><g id="15">3</g><g id="16">, </g><g id="17">4</g><g id="18">, </g><g id="19">5</g><g id="20">))<x id="21"/></g></source>
<target xml:lang="zh">AddAll (Array As String("value1", "value2"))<x id="1"/>Adds all elements of an array at the end of the list.<x id="2"/><g id="3">List1.AddAll(List2)<x id="4"/>List1.AddAll(</g><g id="5">Array</g><g id="6"> </g><g id="7">As</g><g id="8"> </g><g id="9">Int</g><g id="10">(</g><g id="11">1</g><g id="12">, </g><g id="13">2</g><g id="14">, </g><g id="15">3</g><g id="16">, </g><g id="17">4</g><g id="18">, </g><g id="19">5</g><g id="20">))<x id="21"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2278" xml:space="preserve">
<source xml:lang="en">AddAllAt (Index As Int, List As List)<x id="1"/>Inserts all elements of an array in the list starting at the given position.<x id="2"/><g id="3">List1.AddAll(12, List2)<x id="4"/>List1.AddAllAt(12, </g><g id="5">Array</g><g id="6"> </g><g id="7">As</g><g id="8"> </g><g id="9">Int</g><g id="10">(</g><g id="11">1</g><g id="12">, </g><g id="13">2</g><g id="14">, </g><g id="15">3</g><g id="16">, </g><g id="17">4</g><g id="18">, </g><g id="19">5</g><g id="20">))<x id="21"/></g></source>
<target xml:lang="zh">AddAllAt (Index As Int, List As List)<x id="1"/>Inserts all elements of an array in the list starting at the given position.<x id="2"/><g id="3">List1.AddAll(12, List2)<x id="4"/>List1.AddAllAt(12, </g><g id="5">Array</g><g id="6"> </g><g id="7">As</g><g id="8"> </g><g id="9">Int</g><g id="10">(</g><g id="11">1</g><g id="12">, </g><g id="13">2</g><g id="14">, </g><g id="15">3</g><g id="16">, </g><g id="17">4</g><g id="18">, </g><g id="19">5</g><g id="20">))<x id="21"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2279" xml:space="preserve">
<source xml:lang="en">InsertAt (Index As Int, Item As Object)<x id="1"/>Inserts the specified element in the specified index. <x id="2"/>As a result all items with index larger than or equal to the specified index are shifted.<x id="3"/><g id="4">List1.InsertAt(</g><g id="5">12</g><g id="6">, Value)<x id="7"/></g></source>
<target xml:lang="zh">InsertAt (Index As Int, Item As Object)<x id="1"/>Inserts the specified element in the specified index. <x id="2"/>As a result all items with index larger than or equal to the specified index are shifted.<x id="3"/><g id="4">List1.InsertAt(</g><g id="5">12</g><g id="6">, Value)<x id="7"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2280" xml:space="preserve">
<source xml:lang="en">RemoveAt (Index As Int)<x id="1"/>Removes the specified element at the given position from the list.<x id="2"/><g id="3">List1.RemoveAt(</g><g id="4">12</g><g id="5">)</g></source>
<target xml:lang="zh">RemoveAt (Index As Int)<x id="1"/>Removes the specified element at the given position from the list.<x id="2"/><g id="3">List1.RemoveAt(</g><g id="4">12</g><g id="5">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2281" xml:space="preserve">
<source xml:lang="en">A list can hold any type of object. However if a list is declared as a process global object it cannot hold activity objects (like views).<x id="1"/>B4X automatically converts regular arrays to lists. So when a List parameter is expected you can pass an array instead.</source>
<target xml:lang="zh">A list can hold any type of object. However if a list is declared as a process global object it cannot hold activity objects (like views).<x id="1"/>B4X automatically converts regular arrays to lists. So when a List parameter is expected you can pass an array instead.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2282" xml:space="preserve">
<source xml:lang="en">Get the size of a List:</source>
<target xml:lang="zh">Get the size of a List:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2283" xml:space="preserve">
<source xml:lang="en">List1.Size<x id="1"/></source>
<target xml:lang="zh">List1.Size<x id="1"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2284" xml:space="preserve">
<source xml:lang="en">Use the Get method to get an item from the list with (List indexes are 0 based):</source>
<target xml:lang="zh">Use the Get method to get an item from the list with (List indexes are 0 based):</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2285" xml:space="preserve">
<source xml:lang="en">To get the first item use Get(0).</source>
<target xml:lang="zh">To get the first item use Get(0).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2286" xml:space="preserve">
<source xml:lang="en">To get the last item use Get(List1.Size - 1).</source>
<target xml:lang="zh">To get the last item use Get(List1.Size - 1).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2287" xml:space="preserve">
<source xml:lang="en">Get(Index As Int)<x id="1"/><g id="2">number = List1.Get(i)<x id="3"/></g>You can use a For loop to iterate over all the values:<x id="4"/><g id="5">For</g><g id="6"> i = </g><g id="7">0</g><g id="8"> </g><g id="9">To</g><g id="10"> List1.Size - </g><g id="11">1<x id="12"/></g><g id="13">Private</g><g id="14"> number </g><g id="15">As</g><g id="16"> </g><g id="17">Int</g><g id="18"><x id="19"/>number = List1.Get(i)<x id="20"/>...<x id="21"/></g><g id="22">Next</g></source>
<target xml:lang="zh">Get(Index As Int)<x id="1"/><g id="2">number = List1.Get(i)<x id="3"/></g>You can use a For loop to iterate over all the values:<x id="4"/><g id="5">For</g><g id="6"> i = </g><g id="7">0</g><g id="8"> </g><g id="9">To</g><g id="10"> List1.Size - </g><g id="11">1<x id="12"/></g><g id="13">Private</g><g id="14"> number </g><g id="15">As</g><g id="16"> </g><g id="17">Int</g><g id="18"><x id="19"/>number = List1.Get(i)<x id="20"/>...<x id="21"/></g><g id="22">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2288" xml:space="preserve">
<source xml:lang="en">Lists can be saved and loaded from files with:</source>
<target xml:lang="zh">Lists can be saved and loaded from files with:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2289" xml:space="preserve">
<source xml:lang="en">File.WriteList(Dir As String, FileName As String, List As List)<x id="1"/><g id="2">File</g><g id="3">.WriteList(</g><g id="4">File</g><g id="5">.DirRootExternal, </g><g id="6">"Test.txt"</g><g id="7">, List1)</g></source>
<target xml:lang="zh">File.WriteList(Dir As String, FileName As String, List As List)<x id="1"/><g id="2">File</g><g id="3">.WriteList(</g><g id="4">File</g><g id="5">.DirRootExternal, </g><g id="6">"Test.txt"</g><g id="7">, List1)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2290" xml:space="preserve">
<source xml:lang="en">File.ReadList (Dir As String, FileName As String)<x id="1"/><g id="2">List1 = </g><g id="3">File</g><g id="4">.ReadList(</g><g id="5">File</g><g id="6">.DirRootExternal, </g><g id="7">"Test.txt"</g><g id="8">)</g></source>
<target xml:lang="zh">File.ReadList (Dir As String, FileName As String)<x id="1"/><g id="2">List1 = </g><g id="3">File</g><g id="4">.ReadList(</g><g id="5">File</g><g id="6">.DirRootExternal, </g><g id="7">"Test.txt"</g><g id="8">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2291" xml:space="preserve">
<source xml:lang="en">A single item can be changed with :</source>
<target xml:lang="zh">A single item can be changed with :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2292" xml:space="preserve">
<source xml:lang="en">List1. Set(Index As Int, Item As Object)<x id="1"/><g id="2">List1.Set(</g><g id="3">12</g><g id="4">, Value)</g></source>
<target xml:lang="zh">List1. Set(Index As Int, Item As Object)<x id="1"/><g id="2">List1.Set(</g><g id="3">12</g><g id="4">, Value)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2293" xml:space="preserve">
<source xml:lang="en">A List can be sorted (the items must all be numbers or strings) with :</source>
<target xml:lang="zh">A List can be sorted (the items must all be numbers or strings) with :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2294" xml:space="preserve">
<source xml:lang="en">Sort(Ascending As Boolean)<x id="1"/><g id="2">List1.Sort(</g><g id="3">True</g><g id="4">)<x id="5"/></g>sort ascending<g id="6"><x id="7"/>List1.Sort(</g><g id="8">False</g><g id="9">)<x id="10"/></g>sort descending</source>
<target xml:lang="zh">Sort(Ascending As Boolean)<x id="1"/><g id="2">List1.Sort(</g><g id="3">True</g><g id="4">)<x id="5"/></g>sort ascending<g id="6"><x id="7"/>List1.Sort(</g><g id="8">False</g><g id="9">)<x id="10"/></g>sort descending</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2295" xml:space="preserve">
<source xml:lang="en">SortCaseInsensitive(Ascending As Boolean)<x id="1"/></source>
<target xml:lang="zh">SortCaseInsensitive(Ascending As Boolean)<x id="1"/></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2296" xml:space="preserve">
<source xml:lang="en">Clear a List with :</source>
<target xml:lang="zh">Clear a List with :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2297" xml:space="preserve">
<source xml:lang="en"> <g id="1">List1.Clear<x id="2"/></g></source>
<target xml:lang="zh"> <g id="1">List1.Clear<x id="2"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2298" xml:space="preserve">
<source xml:lang="en">Maps  B4A, B4i and B4J only</source>
<target xml:lang="zh">Maps  B4A, B4i and B4J only</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2299" xml:space="preserve">
<source xml:lang="en">A Map is a collection that holds pairs of keys and values.</source>
<target xml:lang="zh">A Map is a collection that holds pairs of keys and values.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2300" xml:space="preserve">
<source xml:lang="en">The keys are unique. Which means that if you add a key/value pair (entry) and the collection already holds an entry with the same key, the previous entry will be removed from the map.</source>
<target xml:lang="zh">The keys are unique. Which means that if you add a key/value pair (entry) and the collection already holds an entry with the same key, the previous entry will be removed from the map.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2301" xml:space="preserve">
<source xml:lang="en">The key should be a string or a number. The value can be any type of object.</source>
<target xml:lang="zh">The key should be a string or a number. The value can be any type of object.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2302" xml:space="preserve">
<source xml:lang="en">Similar to a list, a map can hold any object, however if it is a process global variable then it cannot hold activity objects (like views).</source>
<target xml:lang="zh">Similar to a list, a map can hold any object, however if it is a process global variable then it cannot hold activity objects (like views).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2303" xml:space="preserve">
<source xml:lang="en">Maps are very useful for storing applications settings.</source>
<target xml:lang="zh">Maps are very useful for storing applications settings.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2304" xml:space="preserve">
<source xml:lang="en">Maps are used in this example:</source>
<target xml:lang="zh">Maps are used in this example:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2305" xml:space="preserve">
<source xml:lang="en">DBUtils module<x id="1"/>used for database entries, keys are the column names and values the column values.</source>
<target xml:lang="zh">DBUtils module<x id="1"/>used for database entries, keys are the column names and values the column values.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2306" xml:space="preserve">
<source xml:lang="en">A Map must be initialized before it can be used.</source>
<target xml:lang="zh">A Map must be initialized before it can be used.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2307" xml:space="preserve">
<source xml:lang="en">Initialize<x id="1"/>Initializes an empty Map.<x id="2"/><g id="3">Private</g><g id="4"> Map1 </g><g id="5">As</g><g id="6"> </g><g id="7">Map<x id="8"/></g><g id="9">Map1.Initialize</g></source>
<target xml:lang="zh">Initialize<x id="1"/>Initializes an empty Map.<x id="2"/><g id="3">Private</g><g id="4"> Map1 </g><g id="5">As</g><g id="6"> </g><g id="7">Map<x id="8"/></g><g id="9">Map1.Initialize</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2308" xml:space="preserve">
<source xml:lang="en">Add a new entry :</source>
<target xml:lang="zh">Add a new entry :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2309" xml:space="preserve">
<source xml:lang="en">Put(Key As Object, Value As Object)<x id="1"/><g id="2">Map1.Put(</g><g id="3">"Language"</g><g id="4">, </g><g id="5">"English"</g><g id="6">)</g></source>
<target xml:lang="zh">Put(Key As Object, Value As Object)<x id="1"/><g id="2">Map1.Put(</g><g id="3">"Language"</g><g id="4">, </g><g id="5">"English"</g><g id="6">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2310" xml:space="preserve">
<source xml:lang="en">Get an entry :</source>
<target xml:lang="zh">Get an entry :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2311" xml:space="preserve">
<source xml:lang="en">Get(Key As Object)<x id="1"/><g id="2">Language = Map1.Get(</g><g id="3">"Language"</g><g id="4">)</g></source>
<target xml:lang="zh">Get(Key As Object)<x id="1"/><g id="2">Language = Map1.Get(</g><g id="3">"Language"</g><g id="4">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2312" xml:space="preserve">
<source xml:lang="en">Get a key or a value at a given index (only B4A and B4J):</source>
<target xml:lang="zh">Get a key or a value at a given index (only B4A and B4J):</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2313" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Returns the value of the item at the given index.</source>
<target xml:lang="zh"><x id="1"/>Returns the value of the item at the given index.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2314" xml:space="preserve">
<source xml:lang="en"><x id="1"/>GetKeyAt and GetValueAt should be used to iterate over all the items.</source>
<target xml:lang="zh"><x id="1"/>GetKeyAt and GetValueAt should be used to iterate over all the items.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2315" xml:space="preserve">
<source xml:lang="en"><x id="1"/>These methods are optimized for iterating over the items in ascending order.</source>
<target xml:lang="zh"><x id="1"/>These methods are optimized for iterating over the items in ascending order.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2316" xml:space="preserve">
<source xml:lang="en">GetKeyAt(Index As Int)<x id="1"/><g id="2">Key = Map1.GetKeyAt(</g><g id="3">12</g><g id="4">)</g></source>
<target xml:lang="zh">GetKeyAt(Index As Int)<x id="1"/><g id="2">Key = Map1.GetKeyAt(</g><g id="3">12</g><g id="4">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2317" xml:space="preserve">
<source xml:lang="en">Get a value at a given index (only B4A and B4J):</source>
<target xml:lang="zh">Get a value at a given index (only B4A and B4J):</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2318" xml:space="preserve">
<source xml:lang="en">GetValueAt(Index As Int)<x id="1"/><g id="2">Value = Map1.GetValueAt(</g><g id="3">12</g><g id="4">)</g></source>
<target xml:lang="zh">GetValueAt(Index As Int)<x id="1"/><g id="2">Value = Map1.GetValueAt(</g><g id="3">12</g><g id="4">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2319" xml:space="preserve">
<source xml:lang="en">Check if a Map contains an entry, tests whether there is an entry with the given key :</source>
<target xml:lang="zh">Check if a Map contains an entry, tests whether there is an entry with the given key :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2320" xml:space="preserve">
<source xml:lang="en">ContainsKey(Key As Object)<x id="1"/><g id="2">If</g><g id="3"> Map1.ContainsKey(</g><g id="4">"Language"</g><g id="5">) </g><g id="6">Then<x id="7"/>Msgbox</g><g id="8">(</g><g id="9">"There is already an entry with this key !"</g><g id="10">, </g><g id="11">"ATTENTION"</g><g id="12">)<x id="13"/></g><g id="14">Return<x id="15"/>End</g><g id="16"> </g><g id="17">If</g></source>
<target xml:lang="zh">ContainsKey(Key As Object)<x id="1"/><g id="2">If</g><g id="3"> Map1.ContainsKey(</g><g id="4">"Language"</g><g id="5">) </g><g id="6">Then<x id="7"/>Msgbox</g><g id="8">(</g><g id="9">"There is already an entry with this key !"</g><g id="10">, </g><g id="11">"ATTENTION"</g><g id="12">)<x id="13"/></g><g id="14">Return<x id="15"/>End</g><g id="16"> </g><g id="17">If</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2321" xml:space="preserve">
<source xml:lang="en">Remove an entry :</source>
<target xml:lang="zh">Remove an entry :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2322" xml:space="preserve">
<source xml:lang="en">Remove(Key As Object)<x id="1"/><g id="2">Map1.Remove(</g><g id="3">"Language"</g><g id="4">)<x id="5"/></g></source>
<target xml:lang="zh">Remove(Key As Object)<x id="1"/><g id="2">Map1.Remove(</g><g id="3">"Language"</g><g id="4">)<x id="5"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2323" xml:space="preserve">
<source xml:lang="en">Clear, clears all items from the map :</source>
<target xml:lang="zh">Clear, clears all items from the map :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2324" xml:space="preserve">
<source xml:lang="en">Clear<x id="1"/><g id="2">Map1.Clear</g></source>
<target xml:lang="zh">Clear<x id="1"/><g id="2">Map1.Clear</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2325" xml:space="preserve">
<source xml:lang="en">Maps can be saved and loaded with :</source>
<target xml:lang="zh">Maps can be saved and loaded with :</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2326" xml:space="preserve">
<source xml:lang="en">File.WriteMap(Dir As String, FileName As String, Map As Map)<x id="1"/><g id="2">File</g><g id="3">.WriteMap(</g><g id="4">File</g><g id="5">.DirInternal, </g><g id="6">"settings.txt"</g><g id="7">, mapSettings)<x id="8"/></g></source>
<target xml:lang="zh">File.WriteMap(Dir As String, FileName As String, Map As Map)<x id="1"/><g id="2">File</g><g id="3">.WriteMap(</g><g id="4">File</g><g id="5">.DirInternal, </g><g id="6">"settings.txt"</g><g id="7">, mapSettings)<x id="8"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2327" xml:space="preserve">
<source xml:lang="en">ReadMap(Dir As String, FileName As String)<x id="1"/>Reads the file and parses each line as a key-value pair (of strings).<x id="2"/>Note that the order of items in the map may not be the same as the order in the file.<x id="3"/><g id="4">mapSettings = </g><g id="5">File</g><g id="6">.ReadMap(</g><g id="7">File</g><g id="8">.DirInternal, </g><g id="9">"settings.txt"</g><g id="10">)<x id="11"/></g></source>
<target xml:lang="zh">ReadMap(Dir As String, FileName As String)<x id="1"/>Reads the file and parses each line as a key-value pair (of strings).<x id="2"/>Note that the order of items in the map may not be the same as the order in the file.<x id="3"/><g id="4">mapSettings = </g><g id="5">File</g><g id="6">.ReadMap(</g><g id="7">File</g><g id="8">.DirInternal, </g><g id="9">"settings.txt"</g><g id="10">)<x id="11"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2328" xml:space="preserve">
<source xml:lang="en">File.ReadMap2(Dir As String, FileName As String, Map As Map)<x id="1"/>Similar to ReadMap. ReadMap2 adds the items to the given Map.<x id="2"/>By using ReadMap2 with a populated map you can force the items order as needed.<x id="3"/><g id="4">mapSettings = </g><g id="5">File</g><g id="6">.ReadMap2(</g><g id="7">File</g><g id="8">.DirInternal, </g><g id="9">"settings1.txt"</g><g id="10">, mapSettings)</g></source>
<target xml:lang="zh">File.ReadMap2(Dir As String, FileName As String, Map As Map)<x id="1"/>Similar to ReadMap. ReadMap2 adds the items to the given Map.<x id="2"/>By using ReadMap2 with a populated map you can force the items order as needed.<x id="3"/><g id="4">mapSettings = </g><g id="5">File</g><g id="6">.ReadMap2(</g><g id="7">File</g><g id="8">.DirInternal, </g><g id="9">"settings1.txt"</g><g id="10">, mapSettings)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2329" xml:space="preserve">
<source xml:lang="en">Class modules</source>
<target xml:lang="zh">Class modules</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2330" xml:space="preserve">
<source xml:lang="en">In B4X, you can use three types of Class Modules:</source>
<target xml:lang="zh">In B4X, you can use three types of Class Modules:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2331" xml:space="preserve">
<source xml:lang="en">Standard Class modules<x id="1"/>standard classes</source>
<target xml:lang="zh">Standard Class modules<x id="1"/>standard classes</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2332" xml:space="preserve">
<source xml:lang="en">B4XPages<x id="1"/>B4XPages</source>
<target xml:lang="zh">B4XPages<x id="1"/>B4XPages</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2333" xml:space="preserve">
<source xml:lang="en">CustomView Class Modules <x id="1"/>specialized for custom views</source>
<target xml:lang="zh">CustomView Class Modules <x id="1"/>specialized for custom views</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2334" xml:space="preserve">
<source xml:lang="en">In this chapter we will see only Standard Class modules.</source>
<target xml:lang="zh">In this chapter we will see only Standard Class modules.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2335" xml:space="preserve">
<source xml:lang="en">B4XPages are explained in the <g id="1">B4XPages Cross-platform projects</g> booklet.</source>
<target xml:lang="zh">B4XPages are explained in the <g id="1">B4XPages Cross-platform projects</g> booklet.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2336" xml:space="preserve">
<source xml:lang="en">CustomView Class Modules are explained in the <g id="1">B4X CustomViews</g> booklet.</source>
<target xml:lang="zh">CustomView Class Modules are explained in the <g id="1">B4X CustomViews</g> booklet.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2337" xml:space="preserve">
<source xml:lang="en">Getting started</source>
<target xml:lang="zh">Getting started</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2338" xml:space="preserve">
<source xml:lang="en">Classes definition from <g id="1">Wikipedia</g>:</source>
<target xml:lang="zh">Classes definition from <g id="1">Wikipedia</g>:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2339" xml:space="preserve">
<source xml:lang="en">In object-oriented programming, a class is a construct that is used to create instances of itself – referred to as class instances, class objects, instance objects or simply objects. A class defines constituent members which enable its instances to have state and behaviour. Data field members (member variables or instance variables) enable a class instance to maintain state. Other kinds of members, especially methods, enable the behaviour of a class instances. Classes define the type of their instances.<x id="1"/>A class usually represents a noun, such as a person, place or thing, or something nominalized. For example, a "Banana" class would represent the properties and functionality of bananas in general. A single, particular banana would be an instance of the "Banana" class, an object of the type "Banana".</source>
<target xml:lang="zh">In object-oriented programming, a class is a construct that is used to create instances of itself – referred to as class instances, class objects, instance objects or simply objects. A class defines constituent members which enable its instances to have state and behaviour. Data field members (member variables or instance variables) enable a class instance to maintain state. Other kinds of members, especially methods, enable the behaviour of a class instances. Classes define the type of their instances.<x id="1"/>A class usually represents a noun, such as a person, place or thing, or something nominalized. For example, a "Banana" class would represent the properties and functionality of bananas in general. A single, particular banana would be an instance of the "Banana" class, an object of the type "Banana".</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2340" xml:space="preserve">
<source xml:lang="en">Let us start with an example, the source code: <g id="1">SourceCode\</g><g id="2">Person</g> in the / Person folder.</source>
<target xml:lang="zh">Let us start with an example, the source code: <g id="1">SourceCode\</g><g id="2">Person</g> in the / Person folder.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2341" xml:space="preserve">
<source xml:lang="en">In the Person module</source>
<target xml:lang="zh">In the Person module</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2342" xml:space="preserve">
<source xml:lang="en">'Class Person module</source>
<target xml:lang="zh">'Class Person module</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2343" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Class_Globals</g></source>
<target xml:lang="zh">Sub <g id="1">Class_Globals</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2344" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> <g id="2">FirstName</g>, <g id="3">LastName</g> <g id="4">As</g> <g id="5">String</g></source>
<target xml:lang="zh"><g id="1">Private</g> <g id="2">FirstName</g>, <g id="3">LastName</g> <g id="4">As</g> <g id="5">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2345" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> <g id="2">BirthDate</g> <g id="3">As</g> <g id="4">Long</g></source>
<target xml:lang="zh"><g id="1">Private</g> <g id="2">BirthDate</g> <g id="3">As</g> <g id="4">Long</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2346" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2347" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Initialize</g><g id="2"> (aFirstName </g>As<g id="3"> </g><g id="4">String</g><g id="5">, aLastName </g>As<g id="6"> </g><g id="7">String</g><g id="8">, aBirthDate </g>As<g id="9"> </g><g id="10">Long</g><g id="11">)</g></source>
<target xml:lang="zh">Sub <g id="1">Initialize</g><g id="2"> (aFirstName </g>As<g id="3"> </g><g id="4">String</g><g id="5">, aLastName </g>As<g id="6"> </g><g id="7">String</g><g id="8">, aBirthDate </g>As<g id="9"> </g><g id="10">Long</g><g id="11">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2348" xml:space="preserve">
<source xml:lang="en"><g id="1">FirstName</g> = aFirstName</source>
<target xml:lang="zh"><g id="1">FirstName</g> = aFirstName</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2349" xml:space="preserve">
<source xml:lang="en"><g id="1">LastName</g> = aLastName</source>
<target xml:lang="zh"><g id="1">LastName</g> = aLastName</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2350" xml:space="preserve">
<source xml:lang="en"><g id="1">BirthDate</g> = aBirthDate</source>
<target xml:lang="zh"><g id="1">BirthDate</g> = aBirthDate</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2351" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2352" xml:space="preserve">
<source xml:lang="en">Public<g id="1"> </g>Sub <g id="2">GetName</g><g id="3"> </g>As<g id="4"> </g><g id="5">String</g></source>
<target xml:lang="zh">Public<g id="1"> </g>Sub <g id="2">GetName</g><g id="3"> </g>As<g id="4"> </g><g id="5">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2353" xml:space="preserve">
<source xml:lang="en"><g id="1">Return</g> <g id="2">FirstName</g> &amp; <g id="3">" "</g> &amp; <g id="4">LastName</g></source>
<target xml:lang="zh"><g id="1">Return</g> <g id="2">FirstName</g> &amp; <g id="3">" "</g> &amp; <g id="4">LastName</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2354" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2355" xml:space="preserve">
<source xml:lang="en">Public<g id="1"> </g>Sub <g id="2">GetCurrentAge</g><g id="3"> </g>As<g id="4"> </g><g id="5">Int</g></source>
<target xml:lang="zh">Public<g id="1"> </g>Sub <g id="2">GetCurrentAge</g><g id="3"> </g>As<g id="4"> </g><g id="5">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2356" xml:space="preserve">
<source xml:lang="en"><g id="1">Return</g> GetAgeAt(<g id="2">DateTime</g>.Now)</source>
<target xml:lang="zh"><g id="1">Return</g> GetAgeAt(<g id="2">DateTime</g>.Now)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2357" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2358" xml:space="preserve">
<source xml:lang="en">Public<g id="1"> </g>Sub <g id="2">GetAgeAt</g><g id="3">(Date </g>As<g id="4"> </g><g id="5">Long</g><g id="6">) </g>As<g id="7"> </g><g id="8">Int</g></source>
<target xml:lang="zh">Public<g id="1"> </g>Sub <g id="2">GetAgeAt</g><g id="3">(Date </g>As<g id="4"> </g><g id="5">Long</g><g id="6">) </g>As<g id="7"> </g><g id="8">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2359" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> diff <g id="2">As</g> <g id="3">Long</g></source>
<target xml:lang="zh"><g id="1">Private</g> diff <g id="2">As</g> <g id="3">Long</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2360" xml:space="preserve">
<source xml:lang="en"><x id="1"/>diff = Date - <g id="2">BirthDate</g></source>
<target xml:lang="zh"><x id="1"/>diff = Date - <g id="2">BirthDate</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2361" xml:space="preserve">
<source xml:lang="en"><g id="1">Return</g> <g id="2">Floor</g>(diff / <g id="3">DateTime</g>.TicksPerDay / <g id="4">365</g>)</source>
<target xml:lang="zh"><g id="1">Return</g> <g id="2">Floor</g>(diff / <g id="3">DateTime</g>.TicksPerDay / <g id="4">365</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2362" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2363" xml:space="preserve">
<source xml:lang="en">Main module.</source>
<target xml:lang="zh">Main module.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2364" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Activity_Create</g><g id="2">(FirstTime </g>As<g id="3"> </g><g id="4">Boolean</g><g id="5">)</g></source>
<target xml:lang="zh">Sub <g id="1">Activity_Create</g><g id="2">(FirstTime </g>As<g id="3"> </g><g id="4">Boolean</g><g id="5">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2365" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> p <g id="2">As</g> <g id="3">Person</g></source>
<target xml:lang="zh"><g id="1">Private</g> p <g id="2">As</g> <g id="3">Person</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2366" xml:space="preserve">
<source xml:lang="en"><x id="1"/>p.Initialize(<g id="2">"John"</g>, <g id="3">"Doe"</g>, <g id="4">DateTime</g>.DateParse(<g id="5">"<g id="6">05/12/1970</g>"</g>))</source>
<target xml:lang="zh"><x id="1"/>p.Initialize(<g id="2">"John"</g>, <g id="3">"Doe"</g>, <g id="4">DateTime</g>.DateParse(<g id="5">"<g id="6">05/12/1970</g>"</g>))</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2367" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g>(p.GetCurrentAge)</source>
<target xml:lang="zh"><g id="1">Log</g>(p.GetCurrentAge)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2368" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2369" xml:space="preserve">
<source xml:lang="en">I will start by explaining the differences between classes, code modules and types.<x id="1"/>Similar to types, classes are templates. From this template, you can instantiate any number of objects. <x id="2"/>The type fields are similar to the classes global variables. However, unlike types which only define the data structure, classes also define the behaviour. The behaviour is defined in the classes’ subs.<x id="3"/>Unlike classes which are a template for objects, code modules are collections of subs. Another important difference between code modules and classes is that code modules always run in the context of the calling sub. The code module doesn't hold a reference to any context. For that reason, it is impossible to handle events or use CallSub with code modules.<x id="4"/>Classes store a reference to the context of the module that called the Initialize sub. This means that classes objects share the same life cycle as the module that initialized them.</source>
<target xml:lang="zh">I will start by explaining the differences between classes, code modules and types.<x id="1"/>Similar to types, classes are templates. From this template, you can instantiate any number of objects. <x id="2"/>The type fields are similar to the classes global variables. However, unlike types which only define the data structure, classes also define the behaviour. The behaviour is defined in the classes’ subs.<x id="3"/>Unlike classes which are a template for objects, code modules are collections of subs. Another important difference between code modules and classes is that code modules always run in the context of the calling sub. The code module doesn't hold a reference to any context. For that reason, it is impossible to handle events or use CallSub with code modules.<x id="4"/>Classes store a reference to the context of the module that called the Initialize sub. This means that classes objects share the same life cycle as the module that initialized them.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2370" xml:space="preserve">
<source xml:lang="en">Adding a Class module</source>
<target xml:lang="zh">Adding a Class module</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2371" xml:space="preserve">
<source xml:lang="en">Adding a new or existing class module is done by choosing Project > Add New Module > Class module or Add Existing module.<x id="1"/>Like other modules, classes are saved as files with <g id="2">bas</g> extension.</source>
<target xml:lang="zh">Adding a new or existing class module is done by choosing Project > Add New Module > Class module or Add Existing module.<x id="1"/>Like other modules, classes are saved as files with <g id="2">bas</g> extension.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2372" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N85245C12-sub1" xml:space="preserve">
<source xml:lang="en">Image 1860</source>
<target xml:lang="zh">Image 1860</target>
</trans-unit>
<trans-unit id="N85245C12-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2373" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N85245C13-sub1" xml:space="preserve">
<source xml:lang="en">Image 1794</source>
<target xml:lang="zh">Image 1794</target>
</trans-unit>
<trans-unit id="N85245C13-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2374" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N85245C14-sub1" xml:space="preserve">
<source xml:lang="en">Image 1863</source>
<target xml:lang="zh">Image 1863</target>
</trans-unit>
<trans-unit id="N85245C14-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2375" xml:space="preserve">
<source xml:lang="en">There are two class module types:    </source>
<target xml:lang="zh">There are two class module types:    </target>
</trans-unit>
<trans-unit id="N85245C15-sub1" xml:space="preserve">
<source xml:lang="en">Image 1865</source>
<target xml:lang="zh">Image 1865</target>
</trans-unit>
<trans-unit id="N85245C15-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2376" xml:space="preserve">
<source xml:lang="en"><g id="1">Standard Class</g></source>
<target xml:lang="zh"><g id="1">Standard Class</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2377" xml:space="preserve">
<source xml:lang="en">CustomView</source>
<target xml:lang="zh">CustomView</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2378" xml:space="preserve">
<source xml:lang="en">CustomView (XUI)</source>
<target xml:lang="zh">CustomView (XUI)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2379" xml:space="preserve">
<source xml:lang="en">The CustomView (XUI) is shown only when the XUI library is selected!<x id="1"/>   <x id="2"/><x id="3"/></source>
<target xml:lang="zh">The CustomView (XUI) is shown only when the XUI library is selected!<x id="1"/>   <x id="2"/><x id="3"/></target>
</trans-unit>
<trans-unit id="N85245C19-sub1" xml:space="preserve">
<source xml:lang="en">Image 1796</source>
<target xml:lang="zh">Image 1796</target>
</trans-unit>
<trans-unit id="N85245C19-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2380" xml:space="preserve">
<source xml:lang="en">If you use the B4XPages template you can select B4XPage to create a B4XPage class.</source>
<target xml:lang="zh">If you use the B4XPages template you can select B4XPage to create a B4XPage class.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2381" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N85245C30-sub1" xml:space="preserve">
<source xml:lang="en">Image 1884</source>
<target xml:lang="zh">Image 1884</target>
</trans-unit>
<trans-unit id="N85245C30-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2382" xml:space="preserve">
<source xml:lang="en">Polymorphism</source>
<target xml:lang="zh">Polymorphism</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2383" xml:space="preserve">
<source xml:lang="en">Polymorphism allows you to treat different types of objects that adhere to the same interface in the same way.<x id="1"/>B4X polymorphism is similar to the <g id="2">Duck typing</g> concept.<x id="3"/>As an example we will create two classes named: Square and Circle.<x id="4"/>Each class has a sub named Draw that draws the object to a canvas:</source>
<target xml:lang="zh">Polymorphism allows you to treat different types of objects that adhere to the same interface in the same way.<x id="1"/>B4X polymorphism is similar to the <g id="2">Duck typing</g> concept.<x id="3"/>As an example we will create two classes named: Square and Circle.<x id="4"/>Each class has a sub named Draw that draws the object to a canvas:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2384" xml:space="preserve">
<source xml:lang="en">Source code <g id="1">Draw</g> in the Draw folder. </source>
<target xml:lang="zh">Source code <g id="1">Draw</g> in the Draw folder. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2385" xml:space="preserve">
<source xml:lang="en">The code below is the B4A code.</source>
<target xml:lang="zh">The code below is the B4A code.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2386" xml:space="preserve">
<source xml:lang="en">'<g id="1"><g id="2">Class Square</g></g> module</source>
<target xml:lang="zh">'<g id="1"><g id="2">Class Square</g></g> module</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2387" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Class_Globals</g></source>
<target xml:lang="zh">Sub <g id="1">Class_Globals</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2388" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> <g id="2">mx</g>, <g id="3">my</g>, <g id="4">mWidth</g> <g id="5">As</g> <g id="6">Int</g></source>
<target xml:lang="zh"><g id="1">Private</g> <g id="2">mx</g>, <g id="3">my</g>, <g id="4">mWidth</g> <g id="5">As</g> <g id="6">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2389" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2390" xml:space="preserve">
<source xml:lang="en">'Initializes the object. You can add parameters to this method if needed.</source>
<target xml:lang="zh">'Initializes the object. You can add parameters to this method if needed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2391" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Initialize</g><g id="2"> (Shapes </g>As<g id="3"> </g><g id="4">List</g><g id="5">, x </g>As<g id="6"> </g><g id="7">Int</g><g id="8">, y </g>As<g id="9"> </g><g id="10">Int</g><g id="11">, length </g>As<g id="12"> </g><g id="13">Int</g><g id="14">)</g></source>
<target xml:lang="zh">Sub <g id="1">Initialize</g><g id="2"> (Shapes </g>As<g id="3"> </g><g id="4">List</g><g id="5">, x </g>As<g id="6"> </g><g id="7">Int</g><g id="8">, y </g>As<g id="9"> </g><g id="10">Int</g><g id="11">, length </g>As<g id="12"> </g><g id="13">Int</g><g id="14">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2392" xml:space="preserve">
<source xml:lang="en"><g id="1">mx</g> = x</source>
<target xml:lang="zh"><g id="1">mx</g> = x</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2393" xml:space="preserve">
<source xml:lang="en"><g id="1">my</g> = y</source>
<target xml:lang="zh"><g id="1">my</g> = y</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2394" xml:space="preserve">
<source xml:lang="en"><g id="1">mLength</g> = length</source>
<target xml:lang="zh"><g id="1">mLength</g> = length</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2395" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Shapes.Add(<g id="2">Me</g><g id="3">)</g></source>
<target xml:lang="zh"><x id="1"/>Shapes.Add(<g id="2">Me</g><g id="3">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2396" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2397" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Draw</g><g id="2">(c </g>As<g id="3"> </g><g id="4">Canvas</g><g id="5">)</g></source>
<target xml:lang="zh">Sub <g id="1">Draw</g><g id="2">(c </g>As<g id="3"> </g><g id="4">Canvas</g><g id="5">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2398" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> r <g id="2">As</g> <g id="3">Rect</g></source>
<target xml:lang="zh"><g id="1">Private</g> r <g id="2">As</g> <g id="3">Rect</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2399" xml:space="preserve">
<source xml:lang="en"><x id="1"/>r.Initialize(<g id="2">mx</g>, <g id="3">my</g>, <g id="4">mx</g> + <g id="5">mLength</g>, <g id="6">my</g> + <g id="7">mLength</g>)</source>
<target xml:lang="zh"><x id="1"/>r.Initialize(<g id="2">mx</g>, <g id="3">my</g>, <g id="4">mx</g> + <g id="5">mLength</g>, <g id="6">my</g> + <g id="7">mLength</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2400" xml:space="preserve">
<source xml:lang="en"><x id="1"/>c.DrawRect(r, <g id="2">Colors</g>.Red, <g id="3">False</g>, <g id="4">1dip</g>)</source>
<target xml:lang="zh"><x id="1"/>c.DrawRect(r, <g id="2">Colors</g>.Red, <g id="3">False</g>, <g id="4">1dip</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2401" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2402" xml:space="preserve">
<source xml:lang="en">'<g id="1"><g id="2">Class Circle</g></g> module</source>
<target xml:lang="zh">'<g id="1"><g id="2">Class Circle</g></g> module</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2403" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Class_Globals</g></source>
<target xml:lang="zh">Sub <g id="1">Class_Globals</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2404" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> <g id="2">mx</g>, <g id="3">my</g>, <g id="4">mRadius</g> <g id="5">As</g> <g id="6">Int</g></source>
<target xml:lang="zh"><g id="1">Private</g> <g id="2">mx</g>, <g id="3">my</g>, <g id="4">mRadius</g> <g id="5">As</g> <g id="6">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2405" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2406" xml:space="preserve">
<source xml:lang="en">'Initializes the object. You can add parameters to this method if needed.</source>
<target xml:lang="zh">'Initializes the object. You can add parameters to this method if needed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2407" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Initialize</g><g id="2"> (Shapes </g>As<g id="3"> </g><g id="4">List</g><g id="5">, x </g>As<g id="6"> </g><g id="7">Int</g><g id="8">, y </g>As<g id="9"> </g><g id="10">Int</g><g id="11">, radius </g>As<g id="12"> </g><g id="13">Int</g><g id="14">)</g></source>
<target xml:lang="zh">Sub <g id="1">Initialize</g><g id="2"> (Shapes </g>As<g id="3"> </g><g id="4">List</g><g id="5">, x </g>As<g id="6"> </g><g id="7">Int</g><g id="8">, y </g>As<g id="9"> </g><g id="10">Int</g><g id="11">, radius </g>As<g id="12"> </g><g id="13">Int</g><g id="14">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2408" xml:space="preserve">
<source xml:lang="en"><g id="1">mx</g> = x</source>
<target xml:lang="zh"><g id="1">mx</g> = x</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2409" xml:space="preserve">
<source xml:lang="en"><g id="1">my</g> = y</source>
<target xml:lang="zh"><g id="1">my</g> = y</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2410" xml:space="preserve">
<source xml:lang="en"><g id="1">mRadius</g> = radius</source>
<target xml:lang="zh"><g id="1">mRadius</g> = radius</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2411" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Shapes.Add(<g id="2">Me</g><g id="3">)</g></source>
<target xml:lang="zh"><x id="1"/>Shapes.Add(<g id="2">Me</g><g id="3">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2412" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2413" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Draw</g><g id="2">(cvs </g>As<g id="3"> </g><g id="4">Canvas</g><g id="5">)</g></source>
<target xml:lang="zh">Sub <g id="1">Draw</g><g id="2">(cvs </g>As<g id="3"> </g><g id="4">Canvas</g><g id="5">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2414" xml:space="preserve">
<source xml:lang="en"><x id="1"/>cvs.DrawCircle(<g id="2">mx</g>, <g id="3">my</g>, <g id="4">mRadius</g>, <g id="5">Colors</g>.Blue, <g id="6">False</g>, <g id="7">1dip</g>)</source>
<target xml:lang="zh"><x id="1"/>cvs.DrawCircle(<g id="2">mx</g>, <g id="3">my</g>, <g id="4">mRadius</g>, <g id="5">Colors</g>.Blue, <g id="6">False</g>, <g id="7">1dip</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2415" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2416" xml:space="preserve">
<source xml:lang="en">In the main module, we create a list <g id="1">Shapes</g> with Squares and Circles. We then go over the list and draw all the objects:</source>
<target xml:lang="zh">In the main module, we create a list <g id="1">Shapes</g> with Squares and Circles. We then go over the list and draw all the objects:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2417" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Process_Globals</g></source>
<target xml:lang="zh">Sub <g id="1">Process_Globals</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2418" xml:space="preserve">
<source xml:lang="en"><g id="1">Public</g> <g id="2">Shapes</g> <g id="3">As</g> <g id="4">List</g></source>
<target xml:lang="zh"><g id="1">Public</g> <g id="2">Shapes</g> <g id="3">As</g> <g id="4">List</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2419" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2420" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Globals</g></source>
<target xml:lang="zh">Sub <g id="1">Globals</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2421" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> <g id="2">cvs</g> <g id="3">As</g> <g id="4">Canvas<x id="5"/></g></source>
<target xml:lang="zh"><g id="1">Private</g> <g id="2">cvs</g> <g id="3">As</g> <g id="4">Canvas<x id="5"/></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2422" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2423" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Activity_Create</g><g id="2">(FirstTime </g>As<g id="3"> </g><g id="4">Boolean</g><g id="5">)</g></source>
<target xml:lang="zh">Sub <g id="1">Activity_Create</g><g id="2">(FirstTime </g>As<g id="3"> </g><g id="4">Boolean</g><g id="5">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2424" xml:space="preserve">
<source xml:lang="en"><g id="1">cvs</g>.Initialize(<g id="2">Activity</g>)</source>
<target xml:lang="zh"><g id="1">cvs</g>.Initialize(<g id="2">Activity</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2425" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> Square1, Square 2 <g id="2">As</g> <g id="3">Square</g></source>
<target xml:lang="zh"><g id="1">Private</g> Square1, Square 2 <g id="2">As</g> <g id="3">Square</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2426" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> Circle1 <g id="2">As</g> <g id="3">Circle</g></source>
<target xml:lang="zh"><g id="1">Private</g> Circle1 <g id="2">As</g> <g id="3">Circle</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2427" xml:space="preserve">
<source xml:lang="en"><g id="1">Shapes</g>.Initialize</source>
<target xml:lang="zh"><g id="1">Shapes</g>.Initialize</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2428" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Square1.Initialize(<g id="2">Shapes</g>, <g id="3">110dip</g>, <g id="4">110dip</g>, <g id="5">50dip</g>)</source>
<target xml:lang="zh"><x id="1"/>Square1.Initialize(<g id="2">Shapes</g>, <g id="3">110dip</g>, <g id="4">110dip</g>, <g id="5">50dip</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2429" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Square2.Initialize(<g id="2">Shapes</g>, <g id="3">10dip</g>, <g id="4">10dip</g>, <g id="5">100dip</g>)</source>
<target xml:lang="zh"><x id="1"/>Square2.Initialize(<g id="2">Shapes</g>, <g id="3">10dip</g>, <g id="4">10dip</g>, <g id="5">100dip</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2430" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Circle1.Initialize(<g id="2">Shapes</g>, <g id="3">50%x</g>, <g id="4">50%y</g>, <g id="5">100dip</g>)</source>
<target xml:lang="zh"><x id="1"/>Circle1.Initialize(<g id="2">Shapes</g>, <g id="3">50%x</g>, <g id="4">50%y</g>, <g id="5">100dip</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2431" xml:space="preserve">
<source xml:lang="en"><x id="1"/>DrawAllShapes</source>
<target xml:lang="zh"><x id="1"/>DrawAllShapes</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2432" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2433" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">DrawAllShapes</g></source>
<target xml:lang="zh">Sub <g id="1">DrawAllShapes</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2434" xml:space="preserve">
<source xml:lang="en"><g id="1">For</g> i = <g id="2">0</g> <g id="3">To</g> <g id="4">Shapes</g>.Size - <g id="5">1</g></source>
<target xml:lang="zh"><g id="1">For</g> i = <g id="2">0</g> <g id="3">To</g> <g id="4">Shapes</g>.Size - <g id="5">1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2435" xml:space="preserve">
<source xml:lang="en"><g id="1">CallSub2</g>(<g id="2">Shapes</g>.Get(i), <g id="3">"Draw"</g>, <g id="4">cvs</g>)</source>
<target xml:lang="zh"><g id="1">CallSub2</g>(<g id="2">Shapes</g>.Get(i), <g id="3">"Draw"</g>, <g id="4">cvs</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2436" xml:space="preserve">
<source xml:lang="en"><g id="1">Next</g></source>
<target xml:lang="zh"><g id="1">Next</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2437" xml:space="preserve">
<source xml:lang="en"><g id="1">Activity</g>.Invalidate</source>
<target xml:lang="zh"><g id="1">Activity</g>.Invalidate</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2438" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2439" xml:space="preserve">
<source xml:lang="en">As you can see, we do not know the specific type of each object in the list. We just assume that it has a Draw method that expects a single Canvas argument. Later we can easily add more types of shapes.<x id="1"/>You can use the <g id="2">SubExists</g> keyword to check whether an object includes a specific sub.<x id="3"/>You can also use the <g id="4">Is</g> keyword to check if an object is of a specific type.</source>
<target xml:lang="zh">As you can see, we do not know the specific type of each object in the list. We just assume that it has a Draw method that expects a single Canvas argument. Later we can easily add more types of shapes.<x id="1"/>You can use the <g id="2">SubExists</g> keyword to check whether an object includes a specific sub.<x id="3"/>You can also use the <g id="4">Is</g> keyword to check if an object is of a specific type.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2440" xml:space="preserve">
<source xml:lang="en">Self-reference</source>
<target xml:lang="zh">Self-reference</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2441" xml:space="preserve">
<source xml:lang="en">The <g id="1">Me</g> keyword returns a reference to the current object. <g id="2">Me</g> keyword can only be used inside a class module.<x id="3"/>Consider the above example. We have passed the Shapes list to the Initialize sub and then add each object to the list from the Initialize sub:</source>
<target xml:lang="zh">The <g id="1">Me</g> keyword returns a reference to the current object. <g id="2">Me</g> keyword can only be used inside a class module.<x id="3"/>Consider the above example. We have passed the Shapes list to the Initialize sub and then add each object to the list from the Initialize sub:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2442" xml:space="preserve">
<source xml:lang="en">Sub <g id="1">Initialize</g><g id="2"> (Shapes </g>As<g id="3"> </g><g id="4">List</g><g id="5">, x </g>As<g id="6"> </g><g id="7">Int</g><g id="8">, y </g>As<g id="9"> </g><g id="10">Int</g><g id="11">, radius </g>As<g id="12"> </g><g id="13">Int</g><g id="14">)</g></source>
<target xml:lang="zh">Sub <g id="1">Initialize</g><g id="2"> (Shapes </g>As<g id="3"> </g><g id="4">List</g><g id="5">, x </g>As<g id="6"> </g><g id="7">Int</g><g id="8">, y </g>As<g id="9"> </g><g id="10">Int</g><g id="11">, radius </g>As<g id="12"> </g><g id="13">Int</g><g id="14">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2443" xml:space="preserve">
<source xml:lang="en"><g id="1">mx</g> = x</source>
<target xml:lang="zh"><g id="1">mx</g> = x</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2444" xml:space="preserve">
<source xml:lang="en"><g id="1">my</g> = y</source>
<target xml:lang="zh"><g id="1">my</g> = y</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2445" xml:space="preserve">
<source xml:lang="en"><g id="1">mRadius</g> = radius</source>
<target xml:lang="zh"><g id="1">mRadius</g> = radius</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2446" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Shapes.Add(<g id="2">Me</g>)</source>
<target xml:lang="zh"><x id="1"/>Shapes.Add(<g id="2">Me</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2447" xml:space="preserve">
<source xml:lang="en">End Sub</source>
<target xml:lang="zh">End Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2448" xml:space="preserve">
<source xml:lang="en">Activity object   B4A only</source>
<target xml:lang="zh">Activity object   B4A only</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2449" xml:space="preserve">
<source xml:lang="en"><x id="1"/>This point is related to the Android Activities special life cycle. </source>
<target xml:lang="zh"><x id="1"/>This point is related to the Android Activities special life cycle. </target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2450" xml:space="preserve">
<source xml:lang="en">Make sure to first read the <g id="1">activities and processes life-cycle tutorial</g>.<x id="2"/>Android UI elements hold a reference to the parent activity. As the OS is allowed to kill background activities in order to free memory, UI elements cannot be declared as process global variables (these variables live as long as the process lives). Such elements are named Activity objects. The same is true for custom classes. If one or more of the class global variables is of a UI type (or any activity object type) then the class will be treated as an "activity object". The meaning is that instances of this class cannot be declared as process global variables.</source>
<target xml:lang="zh">Make sure to first read the <g id="1">activities and processes life-cycle tutorial</g>.<x id="2"/>Android UI elements hold a reference to the parent activity. As the OS is allowed to kill background activities in order to free memory, UI elements cannot be declared as process global variables (these variables live as long as the process lives). Such elements are named Activity objects. The same is true for custom classes. If one or more of the class global variables is of a UI type (or any activity object type) then the class will be treated as an "activity object". The meaning is that instances of this class cannot be declared as process global variables.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2451" xml:space="preserve">
<source xml:lang="en">Standard Class module</source>
<target xml:lang="zh">Standard Class module</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2452" xml:space="preserve">
<source xml:lang="en">Structure</source>
<target xml:lang="zh">Structure</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2453" xml:space="preserve">
<source xml:lang="en">Default template of a standard class:</source>
<target xml:lang="zh">Default template of a standard class:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2454" xml:space="preserve">
<source xml:lang="en">B4A and B4i</source>
<target xml:lang="zh">B4A and B4i</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2455" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">Class_Globals</g></g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">Class_Globals</g></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2457" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2458" xml:space="preserve">
<source xml:lang="en">'Initializes the object. You can add parameters to this method if needed.</source>
<target xml:lang="zh">'Initializes the object. You can add parameters to this method if needed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2459" xml:space="preserve">
<source xml:lang="en">Public<g id="1"> </g>Sub<g id="2"> <g id="3">Initialize</g></g></source>
<target xml:lang="zh">Public<g id="1"> </g>Sub<g id="2"> <g id="3">Initialize</g></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2460" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2461" xml:space="preserve">
<source xml:lang="en">B4J</source>
<target xml:lang="zh">B4J</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2462" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">Class_Globals</g></g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">Class_Globals</g></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2463" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> fx <g id="2">As</g> <g id="3">JFX</g></source>
<target xml:lang="zh"><g id="1">Private</g> fx <g id="2">As</g> <g id="3">JFX</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2464" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2465" xml:space="preserve">
<source xml:lang="en">'Initializes the object. You can add parameters to this method if needed.</source>
<target xml:lang="zh">'Initializes the object. You can add parameters to this method if needed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2466" xml:space="preserve">
<source xml:lang="en">Public<g id="1"> </g>Sub<g id="2"> <g id="3">Initialize</g></g></source>
<target xml:lang="zh">Public<g id="1"> </g>Sub<g id="2"> <g id="3">Initialize</g></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2467" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2468" xml:space="preserve">
<source xml:lang="en">Only two routines are predefined:</source>
<target xml:lang="zh">Only two routines are predefined:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2469" xml:space="preserve">
<source xml:lang="en"><g id="1">Sub</g><g id="2"> <g id="3">Class_Globals</g></g><g id="4"> </g>- This sub is similar to the Main Globals sub. These variables will be the class global variables (sometimes referred to instance variables or instance members).</source>
<target xml:lang="zh"><g id="1">Sub</g><g id="2"> <g id="3">Class_Globals</g></g><g id="4"> </g>- This sub is similar to the Main Globals sub. These variables will be the class global variables (sometimes referred to instance variables or instance members).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2470" xml:space="preserve">
<source xml:lang="en">In B4J, the fx library library is declared by default. You can remove it if not needed.<x id="1"/><g id="2">Sub</g><g id="3"> <g id="4">Initialize</g></g> - A class object must be initialized before you can call any other sub. Initializing an object is done by calling the Initialize sub. When you call Initialize you set the object's context (the parent object or service).<x id="5"/>Note that you can modify this sub signature and add arguments as needed.</source>
<target xml:lang="zh">In B4J, the fx library library is declared by default. You can remove it if not needed.<x id="1"/><g id="2">Sub</g><g id="3"> <g id="4">Initialize</g></g> - A class object must be initialized before you can call any other sub. Initializing an object is done by calling the Initialize sub. When you call Initialize you set the object's context (the parent object or service).<x id="5"/>Note that you can modify this sub signature and add arguments as needed.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2471" xml:space="preserve">
<source xml:lang="en">Example: Person class module</source>
<target xml:lang="zh">Example: Person class module</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2472" xml:space="preserve">
<source xml:lang="en">The source codes are in the Person folder.</source>
<target xml:lang="zh">The source codes are in the Person folder.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2473" xml:space="preserve">
<source xml:lang="en">The code is the same for all three B4X platforms (B4A. B4i, B4J).</source>
<target xml:lang="zh">The code is the same for all three B4X platforms (B4A. B4i, B4J).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2474" xml:space="preserve">
<source xml:lang="en">'Class Person module</source>
<target xml:lang="zh">'Class Person module</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2475" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">Class_Globals</g></g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">Class_Globals</g></g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2476" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> mFirstName, mLastName <g id="2">As</g> <g id="3">String</g></source>
<target xml:lang="zh"><g id="1">Private</g> mFirstName, mLastName <g id="2">As</g> <g id="3">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2477" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> mBirthDate <g id="2">As</g> <g id="3">Long</g></source>
<target xml:lang="zh"><g id="1">Private</g> mBirthDate <g id="2">As</g> <g id="3">Long</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2478" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2479" xml:space="preserve">
<source xml:lang="en">Sub<g id="1"> <g id="2">Initialize</g> (FirstName </g>As<g id="3"> </g><g id="4">String</g><g id="5">, LastName </g>As<g id="6"> </g><g id="7">String</g><g id="8">, BirthDate </g>As<g id="9"> </g><g id="10">Long</g><g id="11">)</g></source>
<target xml:lang="zh">Sub<g id="1"> <g id="2">Initialize</g> (FirstName </g>As<g id="3"> </g><g id="4">String</g><g id="5">, LastName </g>As<g id="6"> </g><g id="7">String</g><g id="8">, BirthDate </g>As<g id="9"> </g><g id="10">Long</g><g id="11">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2480" xml:space="preserve">
<source xml:lang="en"><x id="1"/>mFirstName = FirstName</source>
<target xml:lang="zh"><x id="1"/>mFirstName = FirstName</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2481" xml:space="preserve">
<source xml:lang="en"><x id="1"/>mLastName = LastName</source>
<target xml:lang="zh"><x id="1"/>mLastName = LastName</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2482" xml:space="preserve">
<source xml:lang="en"><x id="1"/>mBirthDate = BirthDate</source>
<target xml:lang="zh"><x id="1"/>mBirthDate = BirthDate</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2483" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2484" xml:space="preserve">
<source xml:lang="en">Public<g id="1"> </g>Sub<g id="2"> <g id="3">GetName</g> </g>As<g id="4"> </g><g id="5">String</g></source>
<target xml:lang="zh">Public<g id="1"> </g>Sub<g id="2"> <g id="3">GetName</g> </g>As<g id="4"> </g><g id="5">String</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2485" xml:space="preserve">
<source xml:lang="en"><x id="1"/> <g id="2">Return</g> mFirstName &amp; <g id="3">" "</g> &amp; mLastName</source>
<target xml:lang="zh"><x id="1"/> <g id="2">Return</g> mFirstName &amp; <g id="3">" "</g> &amp; mLastName</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2486" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2487" xml:space="preserve">
<source xml:lang="en">Public<g id="1"> </g>Sub<g id="2"> <g id="3">GetCurrentAge</g> </g>As<g id="4"> </g><g id="5">Int</g></source>
<target xml:lang="zh">Public<g id="1"> </g>Sub<g id="2"> <g id="3">GetCurrentAge</g> </g>As<g id="4"> </g><g id="5">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2488" xml:space="preserve">
<source xml:lang="en"><x id="1"/> <g id="2">Return</g> GetAgeAt(<g id="3">DateTime</g>.Now)</source>
<target xml:lang="zh"><x id="1"/> <g id="2">Return</g> GetAgeAt(<g id="3">DateTime</g>.Now)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2489" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2490" xml:space="preserve">
<source xml:lang="en">Public<g id="1"> </g>Sub<g id="2"> <g id="3">GetAgeAt</g>(Date </g>As<g id="4"> </g><g id="5">Long</g><g id="6">) </g>As<g id="7"> </g><g id="8">Int</g></source>
<target xml:lang="zh">Public<g id="1"> </g>Sub<g id="2"> <g id="3">GetAgeAt</g>(Date </g>As<g id="4"> </g><g id="5">Long</g><g id="6">) </g>As<g id="7"> </g><g id="8">Int</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2491" xml:space="preserve">
<source xml:lang="en"><g id="1">Dim</g> diff <g id="2">As</g> <g id="3">Long</g></source>
<target xml:lang="zh"><g id="1">Dim</g> diff <g id="2">As</g> <g id="3">Long</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2492" xml:space="preserve">
<source xml:lang="en"><x id="1"/>diff = Date - mBirthDate</source>
<target xml:lang="zh"><x id="1"/>diff = Date - mBirthDate</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2493" xml:space="preserve">
<source xml:lang="en"><g id="1">Return</g> <g id="2">Floor</g>(diff / <g id="3">DateTime</g>.TicksPerDay / <g id="4">365</g>)</source>
<target xml:lang="zh"><g id="1">Return</g> <g id="2">Floor</g>(diff / <g id="3">DateTime</g>.TicksPerDay / <g id="4">365</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2494" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>Sub</source>
<target xml:lang="zh">End<g id="1"> </g>Sub</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2495" xml:space="preserve">
<source xml:lang="en">In the above code, we created a class named Person and later instantiate an object of this type in the main module:</source>
<target xml:lang="zh">In the above code, we created a class named Person and later instantiate an object of this type in the main module:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2496" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> p <g id="2">As</g> <g id="3">Person</g></source>
<target xml:lang="zh"><g id="1">Private</g> p <g id="2">As</g> <g id="3">Person</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2497" xml:space="preserve">
<source xml:lang="en"><x id="1"/>p.Initialize(<g id="2">"John"</g>, <g id="3">"Doe"</g>, <g id="4">DateTime</g>.DateParse(<g id="5">"<g id="6">05/12/1970</g>"</g>))</source>
<target xml:lang="zh"><x id="1"/>p.Initialize(<g id="2">"John"</g>, <g id="3">"Doe"</g>, <g id="4">DateTime</g>.DateParse(<g id="5">"<g id="6">05/12/1970</g>"</g>))</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2498" xml:space="preserve">
<source xml:lang="en"><g id="1">Log</g>(p.GetCurrentAge)</source>
<target xml:lang="zh"><g id="1">Log</g>(p.GetCurrentAge)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2499" xml:space="preserve">
<source xml:lang="en">Calling initialize is not required if the object itself was already initialized:</source>
<target xml:lang="zh">Calling initialize is not required if the object itself was already initialized:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2500" xml:space="preserve">
<source xml:lang="en"><g id="1">Private</g> p2 <g id="2">As</g> <g id="3">Person</g></source>
<target xml:lang="zh"><g id="1">Private</g> p2 <g id="2">As</g> <g id="3">Person</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2501" xml:space="preserve">
<source xml:lang="en"><x id="1"/>p2 = p <g id="2">'both variables now point to the same Person object.</g></source>
<target xml:lang="zh"><x id="1"/>p2 = p <g id="2">'both variables now point to the same Person object.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2502" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Log<g id="2">(p2.GetCurrentAge)</g></source>
<target xml:lang="zh"><x id="1"/>Log<g id="2">(p2.GetCurrentAge)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2503" xml:space="preserve">
<source xml:lang="en">"Code smells" code to be avoided</source>
<target xml:lang="zh">"Code smells" code to be avoided</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2504" xml:space="preserve">
<source xml:lang="en">"Code smells" are common patterns that can indicate that there is a problem in the code. A problem doesn't mean that the code doesn't work, it might be that it will be difficult to maintain it or that there are more elegant ways to implement the same thing.<x id="1"/>Remember that not everything is clear cut and there are exceptions for any rule.</source>
<target xml:lang="zh">"Code smells" are common patterns that can indicate that there is a problem in the code. A problem doesn't mean that the code doesn't work, it might be that it will be difficult to maintain it or that there are more elegant ways to implement the same thing.<x id="1"/>Remember that not everything is clear cut and there are exceptions for any rule.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2505" xml:space="preserve">
<source xml:lang="en">Initializing an object and then assigning a different object to the same variable</source>
<target xml:lang="zh">Initializing an object and then assigning a different object to the same variable</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2506" xml:space="preserve">
<source xml:lang="en">'bad</source>
<target xml:lang="zh">'bad</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2507" xml:space="preserve">
<source xml:lang="en">Dim<g id="1"> List1 </g>As<g id="2"> </g><g id="3">List</g></source>
<target xml:lang="zh">Dim<g id="1"> List1 </g>As<g id="2"> </g><g id="3">List</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2508" xml:space="preserve">
<source xml:lang="en">List1.Initialize <g id="1">'&lt;-- a new list was created here</g></source>
<target xml:lang="zh">List1.Initialize <g id="1">'&lt;-- a new list was created here</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2509" xml:space="preserve">
<source xml:lang="en">List1 = SomeOtherList <g id="1">'&lt;--- previous list was replaced</g></source>
<target xml:lang="zh">List1 = SomeOtherList <g id="1">'&lt;--- previous list was replaced</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2510" xml:space="preserve">
<source xml:lang="en">'good</source>
<target xml:lang="zh">'good</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2511" xml:space="preserve">
<source xml:lang="en">Dim<g id="1"> List1 </g>As<g id="2"> </g><g id="3">List</g><g id="4"> = SomeOtherList</g></source>
<target xml:lang="zh">Dim<g id="1"> List1 </g>As<g id="2"> </g><g id="3">List</g><g id="4"> = SomeOtherList</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2512" xml:space="preserve">
<source xml:lang="en">Deprecated methods - DoEvents, Msgbox</source>
<target xml:lang="zh">Deprecated methods - DoEvents, Msgbox</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2513" xml:space="preserve">
<source xml:lang="en">These methods are deprecated, so you should not these anymore.</source>
<target xml:lang="zh">These methods are deprecated, so you should not these anymore.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2514" xml:space="preserve">
<source xml:lang="en">More information here:</source>
<target xml:lang="zh">More information here:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2515" xml:space="preserve">
<source xml:lang="en"><g id="1">https://www.b4x.com/android/forum/t...cated-and-async-dialogs-msgbox.79578/#content</g></source>
<target xml:lang="zh"><g id="1">https://www.b4x.com/android/forum/t...cated-and-async-dialogs-msgbox.79578/#content</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2516" xml:space="preserve">
<source xml:lang="en">Deprecated methods - Map.GetKeyAt / GetValueAt</source>
<target xml:lang="zh">Deprecated methods - Map.GetKeyAt / GetValueAt</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2517" xml:space="preserve">
<source xml:lang="en">Deprecated methods - Map.GetKeyAt / GetValueAt - these methods were added before the For Each loop was available. They are not cross platform and are not the correct way to work with maps.</source>
<target xml:lang="zh">Deprecated methods - Map.GetKeyAt / GetValueAt - these methods were added before the For Each loop was available. They are not cross platform and are not the correct way to work with maps.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2518" xml:space="preserve">
<source xml:lang="en">'bad</source>
<target xml:lang="zh">'bad</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2519" xml:space="preserve">
<source xml:lang="en">For<g id="1"> i = </g><g id="2">0</g><g id="3"> </g>To<g id="4"> Map1.Size - </g><g id="5">1</g></source>
<target xml:lang="zh">For<g id="1"> i = </g><g id="2">0</g><g id="3"> </g>To<g id="4"> Map1.Size - </g><g id="5">1</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2520" xml:space="preserve">
<source xml:lang="en">   <g id="1">Dim</g> key <g id="2">As</g> <g id="3">String</g> = Map1.GetKeyAt(i)</source>
<target xml:lang="zh">   <g id="1">Dim</g> key <g id="2">As</g> <g id="3">String</g> = Map1.GetKeyAt(i)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2521" xml:space="preserve">
<source xml:lang="en">   <g id="1">Dim</g> value <g id="2">As</g> <g id="3">String</g> = Map1.GetValueAt(i)</source>
<target xml:lang="zh">   <g id="1">Dim</g> value <g id="2">As</g> <g id="3">String</g> = Map1.GetValueAt(i)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2522" xml:space="preserve">
<source xml:lang="en">Next</source>
<target xml:lang="zh">Next</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2523" xml:space="preserve">
<source xml:lang="en">'good</source>
<target xml:lang="zh">'good</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2524" xml:space="preserve">
<source xml:lang="en">For<g id="1"> </g>Each<g id="2"> key </g>As<g id="3"> </g><g id="4">String</g><g id="5"> </g>In<g id="6"> Map1.Keys</g></source>
<target xml:lang="zh">For<g id="1"> </g>Each<g id="2"> key </g>As<g id="3"> </g><g id="4">String</g><g id="5"> </g>In<g id="6"> Map1.Keys</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2525" xml:space="preserve">
<source xml:lang="en"> <g id="1">Dim</g> value <g id="2">As</g> <g id="3">String</g> = Map1.Get(key)</source>
<target xml:lang="zh"> <g id="1">Dim</g> value <g id="2">As</g> <g id="3">String</g> = Map1.Get(key)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2526" xml:space="preserve">
<source xml:lang="en">Next</source>
<target xml:lang="zh">Next</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2527" xml:space="preserve">
<source xml:lang="en">Not using parameterized queries</source>
<target xml:lang="zh">Not using parameterized queries</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2528" xml:space="preserve">
<source xml:lang="en">For database queries, use parametrized queries.</source>
<target xml:lang="zh">For database queries, use parametrized queries.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2529" xml:space="preserve">
<source xml:lang="en">'very bad</source>
<target xml:lang="zh">'very bad</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2530" xml:space="preserve">
<source xml:lang="en">SQL.ExecNonQuery(<g id="1">"INSERT INTO table1 VALUES ('"</g> &amp; EditText1.Text &amp; <g id="2">"'"</g>) <g id="3">'ugly, will break if there is an apostrophe in the text and vulnerable to SQL injections.</g></source>
<target xml:lang="zh">SQL.ExecNonQuery(<g id="1">"INSERT INTO table1 VALUES ('"</g> &amp; EditText1.Text &amp; <g id="2">"'"</g>) <g id="3">'ugly, will break if there is an apostrophe in the text and vulnerable to SQL injections.</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2531" xml:space="preserve">
<source xml:lang="en">'very good</source>
<target xml:lang="zh">'very good</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2532" xml:space="preserve">
<source xml:lang="en">SQL.ExecNonQuery2(<g id="1">"INSERT INTO table1 VALUES (?)"</g>, <g id="2">Array</g>(EditText1.Text))</source>
<target xml:lang="zh">SQL.ExecNonQuery2(<g id="1">"INSERT INTO table1 VALUES (?)"</g>, <g id="2">Array</g>(EditText1.Text))</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2533" xml:space="preserve">
<source xml:lang="en">Using Cursor instead of ResultSet - Cursor</source>
<target xml:lang="zh">Using Cursor instead of ResultSet - Cursor</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2534" xml:space="preserve">
<source xml:lang="en">For database queries, use ResultSet instead of Cursor.</source>
<target xml:lang="zh">For database queries, use ResultSet instead of Cursor.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2535" xml:space="preserve">
<source xml:lang="en">Cursor is a B4A only object. ResultSet is a bit simpler to use and is cross platform.</source>
<target xml:lang="zh">Cursor is a B4A only object. ResultSet is a bit simpler to use and is cross platform.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2536" xml:space="preserve">
<source xml:lang="en">'good</source>
<target xml:lang="zh">'good</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2537" xml:space="preserve">
<source xml:lang="en">Dim<g id="1"> rs </g>As<g id="2"> </g><g id="3">ResultSet</g><g id="4"> = SQL.ExecQuery2(...)</g></source>
<target xml:lang="zh">Dim<g id="1"> rs </g>As<g id="2"> </g><g id="3">ResultSet</g><g id="4"> = SQL.ExecQuery2(...)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2538" xml:space="preserve">
<source xml:lang="en">Do<g id="1"> </g>While<g id="2"> rs.NextRow</g></source>
<target xml:lang="zh">Do<g id="1"> </g>While<g id="2"> rs.NextRow</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2539" xml:space="preserve">
<source xml:lang="en"> ...</source>
<target xml:lang="zh"> ...</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2540" xml:space="preserve">
<source xml:lang="en">Loop</source>
<target xml:lang="zh">Loop</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2541" xml:space="preserve">
<source xml:lang="en">rs.Close</source>
<target xml:lang="zh">rs.Close</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2542" xml:space="preserve">
<source xml:lang="en">Building the complete layout programmatically</source>
<target xml:lang="zh">Building the complete layout programmatically</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2543" xml:space="preserve">
<source xml:lang="en">Building the complete layout programmatically. This is especially a mistake in B4J and B4i because of the resize event and also if you want to build a cross platform solution. Layouts can be ported very easily.</source>
<target xml:lang="zh">Building the complete layout programmatically. This is especially a mistake in B4J and B4i because of the resize event and also if you want to build a cross platform solution. Layouts can be ported very easily.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2544" xml:space="preserve">
<source xml:lang="en">Repeating the code</source>
<target xml:lang="zh">Repeating the code</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2545" xml:space="preserve">
<source xml:lang="en">There are many patterns to this one and all of them are bad.</source>
<target xml:lang="zh">There are many patterns to this one and all of them are bad.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2546" xml:space="preserve">
<source xml:lang="en">'bad</source>
<target xml:lang="zh">'bad</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2547" xml:space="preserve">
<source xml:lang="en">If<g id="1"> b = </g>False<g id="2"> </g>Then</source>
<target xml:lang="zh">If<g id="1"> b = </g>False<g id="2"> </g>Then</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2548" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Button1.Text = <g id="2">"disabled"</g></source>
<target xml:lang="zh"><x id="1"/>Button1.Text = <g id="2">"disabled"</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2549" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Button2.Text = <g id="2">"disabled"</g></source>
<target xml:lang="zh"><x id="1"/>Button2.Text = <g id="2">"disabled"</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2550" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Button3.Text = <g id="2">"disabled"</g></source>
<target xml:lang="zh"><x id="1"/>Button3.Text = <g id="2">"disabled"</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2551" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Button1.Enabled = <g id="2">False</g></source>
<target xml:lang="zh"><x id="1"/>Button1.Enabled = <g id="2">False</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2552" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Button2.Enabled = <g id="2">False</g></source>
<target xml:lang="zh"><x id="1"/>Button2.Enabled = <g id="2">False</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2553" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Button3.Enabled = <g id="2">False</g></source>
<target xml:lang="zh"><x id="1"/>Button3.Enabled = <g id="2">False</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2554" xml:space="preserve">
<source xml:lang="en">Else</source>
<target xml:lang="zh">Else</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2555" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Button1.Text = <g id="2">"enabled"</g></source>
<target xml:lang="zh"><x id="1"/>Button1.Text = <g id="2">"enabled"</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2556" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Button2.Text = <g id="2">"enabled"</g></source>
<target xml:lang="zh"><x id="1"/>Button2.Text = <g id="2">"enabled"</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2557" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Button3.Text = <g id="2">"enabled"</g></source>
<target xml:lang="zh"><x id="1"/>Button3.Text = <g id="2">"enabled"</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2558" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Button1.Enabled = <g id="2">True</g></source>
<target xml:lang="zh"><x id="1"/>Button1.Enabled = <g id="2">True</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2559" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Button2.Enabled = <g id="2">True</g></source>
<target xml:lang="zh"><x id="1"/>Button2.Enabled = <g id="2">True</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2560" xml:space="preserve">
<source xml:lang="en"><x id="1"/>Button3.Enabled = <g id="2">True</g></source>
<target xml:lang="zh"><x id="1"/>Button3.Enabled = <g id="2">True</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2561" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>If</source>
<target xml:lang="zh">End<g id="1"> </g>If</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2562" xml:space="preserve">
<source xml:lang="en">'good</source>
<target xml:lang="zh">'good</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2563" xml:space="preserve">
<source xml:lang="en">For<g id="1"> </g>Each<g id="2"> btn </g>As<g id="3"> </g><g id="4">Button</g><g id="5"> </g>In<g id="6"> </g>Array<g id="7">(Button1, Button2, Button3)</g></source>
<target xml:lang="zh">For<g id="1"> </g>Each<g id="2"> btn </g>As<g id="3"> </g><g id="4">Button</g><g id="5"> </g>In<g id="6"> </g>Array<g id="7">(Button1, Button2, Button3)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2564" xml:space="preserve">
<source xml:lang="en"><x id="1"/>btn.Enabled = b</source>
<target xml:lang="zh"><x id="1"/>btn.Enabled = b</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2565" xml:space="preserve">
<source xml:lang="en"><g id="1">If</g> b <g id="2">Then</g> btn.Text = <g id="3">"enabled"</g> <g id="4">Else</g> btn.Text = <g id="5">"disable"</g></source>
<target xml:lang="zh"><g id="1">If</g> b <g id="2">Then</g> btn.Text = <g id="3">"enabled"</g> <g id="4">Else</g> btn.Text = <g id="5">"disable"</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2566" xml:space="preserve">
<source xml:lang="en">Next</source>
<target xml:lang="zh">Next</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2567" xml:space="preserve">
<source xml:lang="en">Long strings without using smart strings</source>
<target xml:lang="zh">Long strings without using smart strings</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2568" xml:space="preserve">
<source xml:lang="en">More information: <g id="1">https://www.b4x.com/android/forum/threads/50135/#content</g></source>
<target xml:lang="zh">More information: <g id="1">https://www.b4x.com/android/forum/threads/50135/#content</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2569" xml:space="preserve">
<source xml:lang="en">'bad</source>
<target xml:lang="zh">'bad</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2570" xml:space="preserve">
<source xml:lang="en">Dim<g id="1"> s </g>As<g id="2"> </g><g id="3">String</g><g id="4"> = </g><g id="5">"This is the "</g><g id="6"> &amp; </g>QUOTE<g id="7"> &amp; </g><g id="8">"first"</g><g id="9"> &amp; </g>QUOTE<g id="10"> &amp; </g><g id="11">"line"</g><g id="12"> &amp; </g>CRLF<g id="13"> &amp; _</g></source>
<target xml:lang="zh">Dim<g id="1"> s </g>As<g id="2"> </g><g id="3">String</g><g id="4"> = </g><g id="5">"This is the "</g><g id="6"> &amp; </g>QUOTE<g id="7"> &amp; </g><g id="8">"first"</g><g id="9"> &amp; </g>QUOTE<g id="10"> &amp; </g><g id="11">"line"</g><g id="12"> &amp; </g>CRLF<g id="13"> &amp; _</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2571" xml:space="preserve">
<source xml:lang="en"> <g id="1">"and this is the second one. The time is "</g> &amp; <g id="2">DateTime</g>.Time(<g id="3">DateTime</g>.Now) &amp; <g id="4">"."</g></source>
<target xml:lang="zh"> <g id="1">"and this is the second one. The time is "</g> &amp; <g id="2">DateTime</g>.Time(<g id="3">DateTime</g>.Now) &amp; <g id="4">"."</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2572" xml:space="preserve">
<source xml:lang="en">'good</source>
<target xml:lang="zh">'good</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2573" xml:space="preserve">
<source xml:lang="en">Dim<g id="1"> s </g>As<g id="2"> </g><g id="3">String</g><g id="4"> = </g><g id="5">$"This is the "first" line</g></source>
<target xml:lang="zh">Dim<g id="1"> s </g>As<g id="2"> </g><g id="3">String</g><g id="4"> = </g><g id="5">$"This is the "first" line</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2574" xml:space="preserve">
<source xml:lang="en">and<g id="1"> this </g>is<g id="2"> </g><g id="3">the</g><g id="4"> second one. The time </g>is<g id="5"> </g><g id="6">$Time{</g>DateTime<g id="7">.Now</g><g id="8">}."$</g></source>
<target xml:lang="zh">and<g id="1"> this </g>is<g id="2"> </g><g id="3">the</g><g id="4"> second one. The time </g>is<g id="5"> </g><g id="6">$Time{</g>DateTime<g id="7">.Now</g><g id="8">}."$</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2575" xml:space="preserve">
<source xml:lang="en">Using global variables when not needed</source>
<target xml:lang="zh">Using global variables when not needed</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2576" xml:space="preserve">
<source xml:lang="en">'bad</source>
<target xml:lang="zh">'bad</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2577" xml:space="preserve">
<source xml:lang="en">Job.Initialize(<g id="1">Me</g>, <g id="2">""</g>) <g id="3">'global variable</g></source>
<target xml:lang="zh">Job.Initialize(<g id="1">Me</g>, <g id="2">""</g>) <g id="3">'global variable</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2578" xml:space="preserve">
<source xml:lang="en">...</source>
<target xml:lang="zh">...</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2579" xml:space="preserve">
<source xml:lang="en">'good</source>
<target xml:lang="zh">'good</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2580" xml:space="preserve">
<source xml:lang="en">Dim<g id="1"> job </g>As<g id="2"> </g><g id="3">HttpJob</g></source>
<target xml:lang="zh">Dim<g id="1"> job </g>As<g id="2"> </g><g id="3">HttpJob</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2581" xml:space="preserve">
<source xml:lang="en">job.Initialize(<g id="1">Me</g>, <g id="2">""</g>)</source>
<target xml:lang="zh">job.Initialize(<g id="1">Me</g>, <g id="2">""</g>)</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2582" xml:space="preserve">
<source xml:lang="en">Not using Wait For when possible</source>
<target xml:lang="zh">Not using Wait For when possible</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2583" xml:space="preserve">
<source xml:lang="en">Not using Wait For when possible. JobDone is a good example: [B4X] OkHttpUtils2 with Wait For</source>
<target xml:lang="zh">Not using Wait For when possible. JobDone is a good example: [B4X] OkHttpUtils2 with Wait For</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2584" xml:space="preserve">
<source xml:lang="en">Using code modules instead of classes</source>
<target xml:lang="zh">Using code modules instead of classes</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2585" xml:space="preserve">
<source xml:lang="en">Code modules are very limited in B4A. In most cases you should use classes instead of code modules. A code module is a single instance of a class.</source>
<target xml:lang="zh">Code modules are very limited in B4A. In most cases you should use classes instead of code modules. A code module is a single instance of a class.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2586" xml:space="preserve">
<source xml:lang="en">Understanding booleans</source>
<target xml:lang="zh">Understanding booleans</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2587" xml:space="preserve">
<source xml:lang="en">'not elegant</source>
<target xml:lang="zh">'not elegant</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2588" xml:space="preserve">
<source xml:lang="en">Dim<g id="1"> result </g>As<g id="2"> </g><g id="3">Boolean</g><g id="4"> = DoingSomethingThatReturnTrueOrFalse</g></source>
<target xml:lang="zh">Dim<g id="1"> result </g>As<g id="2"> </g><g id="3">Boolean</g><g id="4"> = DoingSomethingThatReturnTrueOrFalse</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2589" xml:space="preserve">
<source xml:lang="en">If<g id="1"> result = </g>True<g id="2"> </g>Then</source>
<target xml:lang="zh">If<g id="1"> result = </g>True<g id="2"> </g>Then</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2590" xml:space="preserve">
<source xml:lang="en"><g id="1">Return</g> <g id="2">True</g></source>
<target xml:lang="zh"><g id="1">Return</g> <g id="2">True</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2591" xml:space="preserve">
<source xml:lang="en">Else</source>
<target xml:lang="zh">Else</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2592" xml:space="preserve">
<source xml:lang="en"><g id="1">Return</g> <g id="2">False</g></source>
<target xml:lang="zh"><g id="1">Return</g> <g id="2">False</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2593" xml:space="preserve">
<source xml:lang="en">End<g id="1"> </g>If</source>
<target xml:lang="zh">End<g id="1"> </g>If</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2594" xml:space="preserve">
<source xml:lang="en">' elegant</source>
<target xml:lang="zh">' elegant</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2595" xml:space="preserve">
<source xml:lang="en">Return<g id="1"> DoingSomethingThatReturnTrueOrFalse</g></source>
<target xml:lang="zh">Return<g id="1"> DoingSomethingThatReturnTrueOrFalse</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2596" xml:space="preserve">
<source xml:lang="en">Converting "random" bytes to strings</source>
<target xml:lang="zh">Converting "random" bytes to strings</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2597" xml:space="preserve">
<source xml:lang="en">The only valid raw bytes that should be converted to a string, with BytesToString, are bytes that represent text. In all other cases it is a mistake to convert to string. Even if it seems to work it will later fail in other cases.<x id="1"/>If you think that it is more complicated to work with raw bytes then you are not familiar with the useful B4XBytesBuilder object: <g id="2">https://www.b4x.com/android/forum/threads/b4x-b4xcollections-more-collections.101071/#content</g></source>
<target xml:lang="zh">The only valid raw bytes that should be converted to a string, with BytesToString, are bytes that represent text. In all other cases it is a mistake to convert to string. Even if it seems to work it will later fail in other cases.<x id="1"/>If you think that it is more complicated to work with raw bytes then you are not familiar with the useful B4XBytesBuilder object: <g id="2">https://www.b4x.com/android/forum/threads/b4x-b4xcollections-more-collections.101071/#content</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2598" xml:space="preserve">
<source xml:lang="en">Tips</source>
<target xml:lang="zh">Tips</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2599" xml:space="preserve">
<source xml:lang="en">These are Erels’ tips for B4X developers (<g id="1">[B4X] Tips for B4X developers</g>).</source>
<target xml:lang="zh">These are Erels’ tips for B4X developers (<g id="1">[B4X] Tips for B4X developers</g>).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2600" xml:space="preserve">
<source xml:lang="en">Separate data from code</source>
<target xml:lang="zh">Separate data from code</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2601" xml:space="preserve">
<source xml:lang="en">Putting the data directly into the code makes your program unreadable and less maintainable. <x id="1"/>There are many simple ways to deal with data. For example you can add a text file to the Files tab and read it to a List with:</source>
<target xml:lang="zh">Putting the data directly into the code makes your program unreadable and less maintainable. <x id="1"/>There are many simple ways to deal with data. For example you can add a text file to the Files tab and read it to a List with:</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2602" xml:space="preserve">
<source xml:lang="en">Dim<g id="1"> data </g>As<g id="2"> </g><g id="3">List</g><g id="4"> = </g>File<g id="5">.ReadList(</g>File<g id="6">.DirAssets, </g><g id="7">"SomeFile.txt"</g><g id="8">)</g></source>
<target xml:lang="zh">Dim<g id="1"> data </g>As<g id="2"> </g><g id="3">List</g><g id="4"> = </g>File<g id="5">.ReadList(</g>File<g id="6">.DirAssets, </g><g id="7">"SomeFile.txt"</g><g id="8">)</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2603" xml:space="preserve">
<source xml:lang="en"><g id="1">Don't Repeat Yourself (DRY principle)</g>.</source>
<target xml:lang="zh"><g id="1">Don't Repeat Yourself (DRY principle)</g>.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2604" xml:space="preserve">
<source xml:lang="en">If you find yourself copying and pasting the same code snippet multiple times and then making a small change then it is a good idea to stop and try to find a more elegant solution.<x id="1"/>Repeated code is difficult to maintain and update. The Sender keyword can help in many cases (old and still relevant tutorial: <g id="2">Tick-Tack-Toe: working with arrays of views</g>).</source>
<target xml:lang="zh">If you find yourself copying and pasting the same code snippet multiple times and then making a small change then it is a good idea to stop and try to find a more elegant solution.<x id="1"/>Repeated code is difficult to maintain and update. The Sender keyword can help in many cases (old and still relevant tutorial: <g id="2">Tick-Tack-Toe: working with arrays of views</g>).</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2605" xml:space="preserve">
<source xml:lang="en">Map collection</source>
<target xml:lang="zh">Map collection</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2606" xml:space="preserve">
<source xml:lang="en">All developers should know how to use a Map collection. This is by far the most useful collection. Tutorial: <g id="1">https://www.b4x.com/android/forum/threads/map-collection-the-most-useful-collection.60304/</g></source>
<target xml:lang="zh">All developers should know how to use a Map collection. This is by far the most useful collection. Tutorial: <g id="1">https://www.b4x.com/android/forum/threads/map-collection-the-most-useful-collection.60304/</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2607" xml:space="preserve">
<source xml:lang="en"><g id="1">New technologies and features</g>.</source>
<target xml:lang="zh"><g id="1">New technologies and features</g>.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2608" xml:space="preserve">
<source xml:lang="en">Don't be afraid to learn new things. As developers we always need to learn new things. Everything is evolving whether we want it or not. I will give <g id="1">MQTT</g> as a good example. I wasn't familiar with this technology. When I started learning about it I was a amazed to see how easy and powerful this solution is.<x id="2"/>B4X specific features that all developers should be aware of:<x id="3"/>- Smart strings literal: <g id="4">https://www.b4x.com/android/forum/threads/50135/#content</g><x id="5"/>- For Each iterator: <g id="6">https://www.b4x.com/android/forum/threads/loops.57877/</g><x id="7"/>- Classes: <g id="8">https://www.b4x.com/android/forum/threads/18626/#content</g></source>
<target xml:lang="zh">Don't be afraid to learn new things. As developers we always need to learn new things. Everything is evolving whether we want it or not. I will give <g id="1">MQTT</g> as a good example. I wasn't familiar with this technology. When I started learning about it I was a amazed to see how easy and powerful this solution is.<x id="2"/>B4X specific features that all developers should be aware of:<x id="3"/>- Smart strings literal: <g id="4">https://www.b4x.com/android/forum/threads/50135/#content</g><x id="5"/>- For Each iterator: <g id="6">https://www.b4x.com/android/forum/threads/loops.57877/</g><x id="7"/>- Classes: <g id="8">https://www.b4x.com/android/forum/threads/18626/#content</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2609" xml:space="preserve">
<source xml:lang="en">Logs</source>
<target xml:lang="zh">Logs</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2610" xml:space="preserve">
<source xml:lang="en">You should monitor the logs while your app is running. Especially if there is any error. If you are unable to see the logs for some reason then take the time to solve it. Specifically with B4A-Bridge the logs will only appear in Debug mode. If you encounter an issue that only happens in release mode then you need to switch to usb debug mode.</source>
<target xml:lang="zh">You should monitor the logs while your app is running. Especially if there is any error. If you are unable to see the logs for some reason then take the time to solve it. Specifically with B4A-Bridge the logs will only appear in Debug mode. If you encounter an issue that only happens in release mode then you need to switch to usb debug mode.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2611" xml:space="preserve">
<source xml:lang="en"><g id="1">B4A  Avoid calling DoEvents</g>.</source>
<target xml:lang="zh"><g id="1">B4A  Avoid calling DoEvents</g>.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2612" xml:space="preserve">
<source xml:lang="en">DoEvents interferes with the internal message queue. It can cause unexpected issues. There are very few cases where it is required. This was not the case when B4A v1.0 was released. Since then the libraries have evolved and now offer better solutions. For example if the database operations are too slow (and you are correctly using transactions) then you should switch to the asynchronous methods. Or you should use <g id="1">Sleep</g> or <g id="2">Wait For</g>.</source>
<target xml:lang="zh">DoEvents interferes with the internal message queue. It can cause unexpected issues. There are very few cases where it is required. This was not the case when B4A v1.0 was released. Since then the libraries have evolved and now offer better solutions. For example if the database operations are too slow (and you are correctly using transactions) then you should switch to the asynchronous methods. Or you should use <g id="1">Sleep</g> or <g id="2">Wait For</g>.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2613" xml:space="preserve">
<source xml:lang="en"><g id="1">Strings are made of characters not bytes</g>.</source>
<target xml:lang="zh"><g id="1">Strings are made of characters not bytes</g>.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2614" xml:space="preserve">
<source xml:lang="en">Don't try to store raw bytes as strings. It doesn't work. Use arrays of bytes instead. The proper way to convert bytes to strings is with base 64 encoding or ByteConverter.HexFromBytes.</source>
<target xml:lang="zh">Don't try to store raw bytes as strings. It doesn't work. Use arrays of bytes instead. The proper way to convert bytes to strings is with base 64 encoding or ByteConverter.HexFromBytes.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2615" xml:space="preserve">
<source xml:lang="en">B4A  Use services, especially the Starter service</source>
<target xml:lang="zh">B4A  Use services, especially the Starter service</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2616" xml:space="preserve">
<source xml:lang="en">Services are simpler than Activities. They are not paused and are almost always accessible. <x id="1"/><g id="2">Three general rules about global variables:</g><x id="3"/>1. All non-UI related variables should be declared in Process_Globals. <x id="4"/>2. Public (process_global) variables should be declared and set / initialized in Service_Create of the Starter service.<x id="5"/>3. Activity process globals should only be initialized if FirstTime is true.<x id="6"/>This is only relevant to B4A. It is simpler in B4J and B4i as there is no special life cycle and the modules are never paused.</source>
<target xml:lang="zh">Services are simpler than Activities. They are not paused and are almost always accessible. <x id="1"/><g id="2">Three general rules about global variables:</g><x id="3"/>1. All non-UI related variables should be declared in Process_Globals. <x id="4"/>2. Public (process_global) variables should be declared and set / initialized in Service_Create of the Starter service.<x id="5"/>3. Activity process globals should only be initialized if FirstTime is true.<x id="6"/>This is only relevant to B4A. It is simpler in B4J and B4i as there is no special life cycle and the modules are never paused.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2617" xml:space="preserve">
<source xml:lang="en">UI Layouts</source>
<target xml:lang="zh">UI Layouts</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2618" xml:space="preserve">
<source xml:lang="en">B4X provides several tools to help you implement flexible layouts that adapt to all screen sizes. The main tools are: anchors and designer script. Avoid adding multiple variants (two are fine). Variants were introduced in v1.00, before the other features. Variants are difficult to maintain and can be replaced with scripts.<x id="1"/>Anchors are very simple and powerful.<x id="2"/>Don't overuse percentage units (unless you are building a game).<x id="3"/><g id="4">http://www.basic4ppc.com/forum/basi...ing-multiple-screens-tips-best-practices.html</g></source>
<target xml:lang="zh">B4X provides several tools to help you implement flexible layouts that adapt to all screen sizes. The main tools are: anchors and designer script. Avoid adding multiple variants (two are fine). Variants were introduced in v1.00, before the other features. Variants are difficult to maintain and can be replaced with scripts.<x id="1"/>Anchors are very simple and powerful.<x id="2"/>Don't overuse percentage units (unless you are building a game).<x id="3"/><g id="4">http://www.basic4ppc.com/forum/basi...ing-multiple-screens-tips-best-practices.html</g></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2619" xml:space="preserve">
<source xml:lang="en"><g id="1">B4J as a backend solution</g>.</source>
<target xml:lang="zh"><g id="1">B4J as a backend solution</g>.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2620" xml:space="preserve">
<source xml:lang="en">B4A, B4i, B4J share the same language, same concepts and mostly the same APIs. It is also simple to exchange data between the different platforms with B4XSerializator. <x id="1"/>It is easy to implement powerful server solutions with B4J. Especially when the clients are implemented with B4A, B4i or B4J.</source>
<target xml:lang="zh">B4A, B4i, B4J share the same language, same concepts and mostly the same APIs. It is also simple to exchange data between the different platforms with B4XSerializator. <x id="1"/>It is easy to implement powerful server solutions with B4J. Especially when the clients are implemented with B4A, B4i or B4J.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2621" xml:space="preserve">
<source xml:lang="en"><g id="1">Search</g>.</source>
<target xml:lang="zh"><g id="1">Search</g>.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2622" xml:space="preserve">
<source xml:lang="en">Use the forum search feature. You can filter results by adding the platform(b4a for example) to the query or by clicking on one of the filters in the results page.<x id="1"/>Most of the questions asked in the forum can be solved with a few searches.</source>
<target xml:lang="zh">Use the forum search feature. You can filter results by adding the platform(b4a for example) to the query or by clicking on one of the filters in the results page.<x id="1"/>Most of the questions asked in the forum can be solved with a few searches.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2623" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="N852466BB-sub1" xml:space="preserve">
<source xml:lang="en">Image 61</source>
<target xml:lang="zh">Image 61</target>
</trans-unit>
<trans-unit id="N852466BB-sub2" xml:space="preserve">
<source xml:lang="en"></source>
<target xml:lang="zh"></target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2624" xml:space="preserve">
<source xml:lang="en"><g id="1">Notepad++</g>.</source>
<target xml:lang="zh"><g id="1">Notepad++</g>.</target>
</trans-unit>
<trans-unit id="NFDBB2FA9-tu2625" xml:space="preserve">
<source xml:lang="en">At one point or another we need to work with text files. I highly recommend all developers to use a good text editor that shows the encoding, the end of line characters and other important features. <g id="1">https://notepad-plus-plus.org/</g></source>
<target xml:lang="zh">At one point or another we need to work with text files. I highly recommend all developers to use a good text editor that shows the encoding, the end of line characters and other important features. <g id="1">https://notepad-plus-plus.org/</g></target>
</trans-unit>
</body>
</file>
<file original="word/header26.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N914FAD1F-tu1" xml:space="preserve">
<source xml:lang="en">5.6  Resumable Subs<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">5.6  Resumable Subs<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header27.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N915DC4A0-tu1" xml:space="preserve">
<source xml:lang="en">13  Basic language<x id="1"/><x id="2"/><x id="3"/>Basic4Android   Beginner's Guide</source>
<target xml:lang="zh">13  Basic language<x id="1"/><x id="2"/><x id="3"/>Basic4Android   Beginner's Guide</target>
</trans-unit>
</body>
</file>
<file original="word/header28.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N916BDC21-tu1" xml:space="preserve">
<source xml:lang="en">5.7.1  Events  B4A<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">5.7.1  Events  B4A<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header29.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N9179F3A2-tu1" xml:space="preserve">
<source xml:lang="en">13  Basic language<x id="1"/><x id="2"/><x id="3"/>Basic4Android   Beginner's Guide</source>
<target xml:lang="zh">13  Basic language<x id="1"/><x id="2"/><x id="3"/>Basic4Android   Beginner's Guide</target>
</trans-unit>
</body>
</file>
<file original="word/header30.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N92AFF8B8-tu1" xml:space="preserve">
<source xml:lang="en">5.7.2  Events  B4i<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">5.7.2  Events  B4i<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header31.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N92BE1039-tu1" xml:space="preserve">
<source xml:lang="en">13  Basic language<x id="1"/><x id="2"/><x id="3"/>Basic4Android   Beginner's Guide</source>
<target xml:lang="zh">13  Basic language<x id="1"/><x id="2"/><x id="3"/>Basic4Android   Beginner's Guide</target>
</trans-unit>
</body>
</file>
<file original="word/header32.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N92CC27BA-tu1" xml:space="preserve">
<source xml:lang="en">5.7.3  Events  B4J<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">5.7.3  Events  B4J<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/footnotes.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
</body>
</file>
<file original="word/endnotes.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
</body>
</file>
<file original="word/header33.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N92DA3F3B-tu1" xml:space="preserve">
<source xml:lang="en">5.7.4  Events  B4R<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">5.7.4  Events  B4R<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header34.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N92E856BC-tu1" xml:space="preserve">
<source xml:lang="en">5.7.5  User interface summary<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">5.7.5  User interface summary<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header35.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N92F66E3D-tu1" xml:space="preserve">
<source xml:lang="en">5.8  Libraries<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">5.8  Libraries<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header7.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="P3EC257EE-tu1" xml:space="preserve">
<source xml:lang="en">3.1  Variable types<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">3.1  Variable types<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header36.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N930485BE-tu1" xml:space="preserve">
<source xml:lang="en">5.9  String manuipulation<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">5.9  String manuipulation<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header37.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N93129D3F-tu1" xml:space="preserve">
<source xml:lang="en">5.10  Number formatting<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">5.10  Number formatting<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header1.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="P3E6DCAE8-tu1" xml:space="preserve">
<source xml:lang="en">Table of contents<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">Table of contents<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header2.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
</body>
</file>
<file original="word/header3.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="P3E89F9EA-tu1" xml:space="preserve">
<source xml:lang="en">Table of contents <x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">Table of contents <x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header38.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N9320B4C0-tu1" xml:space="preserve">
<source xml:lang="en">5.11  Timers<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">5.11  Timers<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header39.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N932ECC41-tu1" xml:space="preserve">
<source xml:lang="en">5.12  Files<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">5.12  Files<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header40.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N9464D157-tu1" xml:space="preserve">
<source xml:lang="en">5.13  Lists  B4A, B4i and B4J only<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">5.13  Lists  B4A, B4i and B4J only<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header41.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N9472E8D8-tu1" xml:space="preserve">
<source xml:lang="en">5.14  Maps  B4A, B4i and B4J only<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">5.14  Maps  B4A, B4i and B4J only<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header4.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="P3E98116B-tu1" xml:space="preserve">
<source xml:lang="en">1  B4X platforms<x id="1"/>8<x id="2"/>B4X  Basic language</source>
<target xml:lang="zh">1  B4X platforms<x id="1"/>8<x id="2"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header5.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="P3EA628EC-tu1" xml:space="preserve">
<source xml:lang="en">2  BASIC<x id="1"/>8<x id="2"/>B4X  Basic language</source>
<target xml:lang="zh">2  BASIC<x id="1"/>8<x id="2"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header6.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="P3EB4406D-tu1" xml:space="preserve">
<source xml:lang="en">3  Variables and objects<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">3  Variables and objects<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header42.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N94810059-tu1" xml:space="preserve">
<source xml:lang="en">5.15  Class modules<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">5.15  Class modules<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header8.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="P3ED06F6F-tu1" xml:space="preserve">
<source xml:lang="en">3.2  Names of variables<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">3.2  Names of variables<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header9.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="P3EDE86F0-tu1" xml:space="preserve">
<source xml:lang="en">3.3  Declaring variables<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">3.3  Declaring variables<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header10.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N8F46477A-tu1" xml:space="preserve">
<source xml:lang="en">3.4  Casting<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">3.4  Casting<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header11.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N8F545EFB-tu1" xml:space="preserve">
<source xml:lang="en">3.5  Scope<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">3.5  Scope<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header12.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N8F62767C-tu1" xml:space="preserve">
<source xml:lang="en">4  Program flow / Process life cycle<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">4  Program flow / Process life cycle<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header43.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N948F17DA-tu1" xml:space="preserve">
<source xml:lang="en">2  Class modules<x id="1"/><x id="2"/><x id="3"/>B4X  CustomViews</source>
<target xml:lang="zh">2  Class modules<x id="1"/><x id="2"/><x id="3"/>B4X  CustomViews</target>
</trans-unit>
</body>
</file>
<file original="word/header44.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N949D2F5B-tu1" xml:space="preserve">
<source xml:lang="en">6  "Code smells" code to be avoided<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">6  "Code smells" code to be avoided<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header13.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N8F708DFD-tu1" xml:space="preserve">
<source xml:lang="en">4.1  Program flow / Process life cycle  B4A<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">4.1  Program flow / Process life cycle  B4A<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header14.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N8F7EA57E-tu1" xml:space="preserve">
<source xml:lang="en">4.1  Program flow / Process life cycle  B4A<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">4.1  Program flow / Process life cycle  B4A<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header15.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N8F8CBCFF-tu1" xml:space="preserve">
<source xml:lang="en">4.2  Program flow  B4i<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">4.2  Program flow  B4i<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header16.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N8F9AD480-tu1" xml:space="preserve">
<source xml:lang="en">4.3  Program flow  B4J<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">4.3  Program flow  B4J<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header17.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N8FA8EC01-tu1" xml:space="preserve">
<source xml:lang="en">4.4  Program flow  B4R<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">4.4  Program flow  B4R<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header18.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N8FB70382-tu1" xml:space="preserve">
<source xml:lang="en">4.5  Program flow comparison<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">4.5  Program flow comparison<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header19.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N8FC51B03-tu1" xml:space="preserve">
<source xml:lang="en">4.6  B4XPages program flow<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">4.6  B4XPages program flow<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header20.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N90FB2019-tu1" xml:space="preserve">
<source xml:lang="en">5  Basic language<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">5  Basic language<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header21.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N9109379A-tu1" xml:space="preserve">
<source xml:lang="en">5.1 Expressions<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">5.1 Expressions<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header22.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N91174F1B-tu1" xml:space="preserve">
<source xml:lang="en">5.2 Standard keywords<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">5.2 Standard keywords<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header45.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N94AB46DC-tu1" xml:space="preserve">
<source xml:lang="en">7  Tips<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">7  Tips<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header23.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N9125669C-tu1" xml:space="preserve">
<source xml:lang="en">5.3 Conditional statements<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">5.3 Conditional statements<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header24.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N91337E1D-tu1" xml:space="preserve">
<source xml:lang="en">5.4  Loop structures<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">5.4  Loop structures<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/header25.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="N9141959E-tu1" xml:space="preserve">
<source xml:lang="en">5.5  Subs<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</source>
<target xml:lang="zh">5.5  Subs<x id="1"/><x id="2"/><x id="3"/>B4X  Basic language</target>
</trans-unit>
</body>
</file>
<file original="word/settings.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
</body>
</file>
<file original="docProps/core.xml" source-language="en" target-language="zh" datatype="x-undefined" okp:inputEncoding="GBK">
<body>
<trans-unit id="tu1" xml:space="preserve">
<source xml:lang="en">B4X Basic Language V1_9</source>
<target xml:lang="zh">B4X Basic Language V1_9</target>
</trans-unit>
<trans-unit id="tu2" xml:space="preserve">
<source xml:lang="en">CHRISTL Klaus</source>
<target xml:lang="zh">CHRISTL Klaus</target>
</trans-unit>
</body>
</file>
</xliff>
